<codestructure version="5.14">
<phptree>
<treenode node="./vendor/codeception/codeception/package/bin;PHP:PHP Include;H:\OSPanel\domains\yii\vendor\codeception\base\autoload.php;f13;11;57;11;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ActiveRecord;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\ActiveRecord.php;f0;3;1;12;;;;vpos;;vORM;;c;;r;;d0,4;;b0,0;;m">
<treenode node="dontSeeRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\ActiveRecord.php;f11;9;59;9;;;;vpos;;v;;r;;d-1,-1;;b1,0;;mmodel;;pattributes;;p">
</treenode>
<treenode node="grabRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\ActiveRecord.php;f11;11;56;11;;;;vpos;;v;;r;;d-1,-1;;b1,0;;mmodel;;pattributes;;p">
</treenode>
<treenode node="haveRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\ActiveRecord.php;f11;5;56;5;;;;vpos;;v;;r;;d-1,-1;;b1,0;;mmodel;;pattributes;;p">
</treenode>
<treenode node="seeRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\ActiveRecord.php;f11;7;55;7;;;;vpos;;v;;r;;d-1,-1;;b1,0;;mmodel;;pattributes;;p">
</treenode>
</treenode>
<treenode node="API;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\API.php;f0;6;1;8;;;;vpos;;v;;r&#10;Definition&#10;    interface API&#10;&#10;Description&#10;     Modules for API testing;;d0,7;;b0,0;;m">
</treenode>
<treenode node="ArgumentInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ArgumentInterface.php;f0;17;1;19;;;;vpos;;vNodeInterface;;c;;r&#10;Definition&#10;    interface ArgumentInterface extends NodeInterface&#10;&#10;Description&#10;     Gherkin arguments interface.;;d0,18;;b0,0;;m">
</treenode>
<treenode node="CacheInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\CacheInterface.php;f0;19;1;47;;;;vpos;;v;;r&#10;Definition&#10;    interface CacheInterface&#10;&#10;Description&#10;     Parser cache interface.;;d0,20;;b0,0;;m">
<treenode node="isFresh;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\CacheInterface.php;f11;29;46;29;;;;vpos;;vBoolean;;r&#10;Description&#10;     Checks that cache for feature exists and is fresh.&#10;&#10;Parameters:&#10;    string $path - Feature path&#10;    integer $timestamp - The last time feature was updated;;d-1,-1;;b1,0;;mstring $path;;pinteger $timestamp;;p">
</treenode>
<treenode node="read;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\CacheInterface.php;f11;38;31;38;;;;vpos;;vFeatureNode;;r&#10;Description&#10;     Reads feature cache from path.&#10;&#10;Parameters:&#10;    string $path - Feature path;;d-1,-1;;b1,0;;mstring $path;;p">
</treenode>
<treenode node="write;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\CacheInterface.php;f11;46;54;46;;;;vpos;;v;;r&#10;Description&#10;     Caches feature node.&#10;&#10;Parameters:&#10;    string $path - Feature path&#10;    FeatureNode $feature - Feature instance;;d-1,-1;;b1,0;;mstring $path;;pFeatureNode $feature;;p">
</treenode>
</treenode>
<treenode node="ComplexFilterInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\ComplexFilterInterface.php;f0;20;1;31;;;;vpos;;vFeatureFilterInterface;;c;;r&#10;Definition&#10;    interface ComplexFilterInterface extends FeatureFilterInterface&#10;&#10;Description&#10;     Filter interface.;;d0,21;;b0,0;;m">
<treenode node="isScenarioMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\ComplexFilterInterface.php;f11;30;86;30;;;;vpos;;vBoolean;;r&#10;Description&#10;     Checks if scenario or outline matches specified filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature - Feature node instance&#10;    ScenarioInterface $scenario - Scenario or Outline node instance;;d-1,-1;;b1,0;;mFeatureNode $feature;;pScenarioInterface $scenario;;p">
</treenode>
</treenode>
<treenode node="ConflictsWithModule;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\ConflictsWithModule.php;f0;3;1;10;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="_conflicts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\ConflictsWithModule.php;f11;9;32;9;;;;vpos;;vstring;;r&#10;Description&#10;     Returns class name or interface of module which can conflict with current.;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CustomCommandInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\CustomCommandInterface.php;f0;4;1;13;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="getCommandName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\CustomCommandInterface.php;f18;12;43;12;;;;vpos;;vstring;;r&#10;Description&#10;     returns the name of the command;;d-1,-1;;b1,5;;m">
</treenode>
</treenode>
<treenode node="DataMapper;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\DataMapper.php;f0;3;1;12;;;;vpos;;vORM;;cDoctrineProvider;;c;;r;;d0,4;;b0,0;;m">
<treenode node="dontSeeInRepository;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\DataMapper.php;f11;9;62;9;;;;vpos;;v;;r;;d-1,-1;;b1,0;;mentity;;pparams;;p">
</treenode>
<treenode node="grabFromRepository;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\DataMapper.php;f11;11;69;11;;;;vpos;;v;;r;;d-1,-1;;b1,0;;mentity;;pfield;;pparams;;p">
</treenode>
<treenode node="haveInRepository;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\DataMapper.php;f11;5;58;5;;;;vpos;;v;;r;;d-1,-1;;b1,0;;mentity;;pdata;;p">
</treenode>
<treenode node="seeInRepository;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\DataMapper.php;f11;7;58;7;;;;vpos;;v;;r;;d-1,-1;;b1,0;;mentity;;pparams;;p">
</treenode>
</treenode>
<treenode node="Db;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Db.php;f0;3;1;83;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="dontSeeInDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Db.php;f11;56;61;56;;;;vpos;;v;;r&#10;Description&#10;     Effect is opposite to -&gt;seeInDatabase&#10;&#10;Parameters:&#10;    string $table&#10;    array $criteria;;d-1,-1;;b1,0;;mstring $table;;parray $criteria;;p">
</treenode>
<treenode node="grabFromDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Db.php;f11;82;69;82;;;;vpos;;vmixed;;r&#10;Description&#10;     Fetches a single column value from a database. Provide table name, desired column and criteria.&#10;&#10;Parameters:&#10;    string $table&#10;    string $column&#10;    array $criteria;;d-1,-1;;b1,0;;mstring $table;;pstring $column;;parray $criteria;;p">
</treenode>
<treenode node="seeInDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Db.php;f11;29;57;29;;;;vpos;;v;;r&#10;Description&#10;     Asserts that a row with the given column values exists. Provide table name and column values.&#10;&#10;Parameters:&#10;    string $table&#10;    array $criteria;;d-1,-1;;b1,0;;mstring $table;;parray $criteria;;p">
</treenode>
</treenode>
<treenode node="Dependent;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\Dependent.php;f0;3;1;6;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="getDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\Dependent.php;f11;5;37;5;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="DependsOnModule;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\DependsOnModule.php;f0;3;1;14;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="_depends;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\DependsOnModule.php;f11;13;30;13;;;;vpos;;vmixed;;r&#10;Description&#10;     Specifies class or module which is required for current one.;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Descriptive;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\Descriptive.php;f0;3;1;8;;;;vpos;;vSelfDescribing;;c;;r;;d0,4;;b0,0;;m">
<treenode node="getFileName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\Descriptive.php;f11;5;33;5;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getSignature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\Descriptive.php;f11;7;34;7;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="DoctrineProvider;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\DoctrineProvider.php;f0;3;1;6;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="_getEntityManager;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\DoctrineProvider.php;f11;5;39;5;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ElementLocator;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\ElementLocator.php;f0;3;1;31;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="_findElements;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\ElementLocator.php;f11;30;43;30;;;;vpos;;varray;;r&#10;Description&#10;     Locates element using available Codeception locator types:&#10;&#10;Parameters:&#10;     $locator&#10;&#10;Return:&#10;   of interactive elements;;d-1,-1;;b1,0;;m $locator;;p">
</treenode>
</treenode>
<treenode node="ENT_HTML401;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\UrlLinkTrait.php;f34;10;45;10;;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f34;10;45;10;;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f34;7;45;7;;;;vpos;;v;;r&#10;Description&#10;      copyright Copyright (c) 2014 Carsten Brandt;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Exception;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Exception\Exception.php;f0;12;1;14;;;;vpos;;v;;r;;d0,13;;b0,0;;m">
</treenode>
<treenode node="FeatureFilterInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\FeatureFilterInterface.php;f0;19;1;38;;;;vpos;;v;;r&#10;Definition&#10;    interface FeatureFilterInterface&#10;&#10;Description&#10;     Feature filter interface.;;d0,20;;b0,0;;m">
<treenode node="filterFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\FeatureFilterInterface.php;f11;37;55;37;;;;vpos;;vFeatureNode;;r&#10;Description&#10;     Filters feature according to the filter and returns new one.&#10;&#10;Parameters:&#10;    FeatureNode $feature;;d-1,-1;;b1,0;;mFeatureNode $feature;;p">
</treenode>
<treenode node="isFeatureMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\FeatureFilterInterface.php;f11;28;56;28;;;;vpos;;vBoolean;;r&#10;Description&#10;     Checks if Feature matches specified filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature - Feature instance;;d-1,-1;;b1,0;;mFeatureNode $feature;;p">
</treenode>
</treenode>
<treenode node="FileLoaderInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\FileLoaderInterface.php;f0;17;1;25;;;;vpos;;vLoaderInterface;;c;;r&#10;Definition&#10;    interface FileLoaderInterface extends LoaderInterface&#10;&#10;Description&#10;     File Loader interface.;;d0,18;;b0,0;;m">
<treenode node="setBasePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\FileLoaderInterface.php;f11;24;38;24;;;;vpos;;v;;r&#10;Description&#10;     Sets base features path.&#10;&#10;Parameters:&#10;    string $path - Base loader path;;d-1,-1;;b1,0;;mstring $path;;p">
</treenode>
</treenode>
<treenode node="FilterInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\FilterInterface.php;f0;19;1;29;;;;vpos;;vFeatureFilterInterface;;c;;r&#10;Definition&#10;    interface FilterInterface extends FeatureFilterInterface&#10;&#10;Description&#10;     Filter interface.;;d0,20;;b0,0;;m">
<treenode node="isScenarioMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\FilterInterface.php;f11;28;64;28;;;;vpos;;vBoolean;;r&#10;Description&#10;     Checks if scenario or outline matches specified filter.&#10;&#10;Parameters:&#10;    ScenarioInterface $scenario - Scenario or Outline node instance;;d-1,-1;;b1,0;;mScenarioInterface $scenario;;p">
</treenode>
</treenode>
<treenode node="FormattedOutput;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Argument\FormattedOutput.php;f0;7;1;22;;;;vpos;;v;;r&#10;Definition&#10;    interface FormattedOutput&#10;&#10;Description&#10;     Implemented in Step arguments where literal values need to be modified in test execution output (e.g. passwords).;;d0,8;;b0,0;;m">
<treenode node="__toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Argument\FormattedOutput.php;f11;21;32;21;;;;vpos;;vstring;;r&#10;Description&#10;     Returns the argument&apos;s literal value.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getOutput;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Argument\FormattedOutput.php;f11;14;31;14;;;;vpos;;vstring;;r&#10;Description&#10;     Returns the argument&apos;s value formatted for output.;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="KeywordNodeInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\KeywordNodeInterface.php;f0;17;1;32;;;;vpos;;vNodeInterface;;c;;r&#10;Definition&#10;    interface KeywordNodeInterface extends NodeInterface&#10;&#10;Description&#10;     Gherkin keyword node interface.;;d0,18;;b0,0;;m">
<treenode node="getKeyword;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\KeywordNodeInterface.php;f11;24;32;24;;;;vpos;;vstring;;r&#10;Description&#10;     Returns node keyword.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\KeywordNodeInterface.php;f11;31;30;31;;;;vpos;;vnull;;r&#10;Description&#10;     Returns node title.&#10;&#10;Return:&#10;   |string;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="KeywordsInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f0;17;1;102;;;;vpos;;v;;r&#10;Definition&#10;    interface KeywordsInterface&#10;&#10;Description&#10;     Keywords holder interface.;;d0,18;;b0,0;;m">
<treenode node="getAndKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f11;87;36;87;;;;vpos;;vstring;;r&#10;Description&#10;     Returns And keywords (splitted by &quot;|&quot;).;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getBackgroundKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f11;38;43;38;;;;vpos;;vstring;;r&#10;Description&#10;     Returns Background keywords (splitted by &quot;|&quot;).;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getButKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f11;94;36;94;;;;vpos;;vstring;;r&#10;Description&#10;     Returns But keywords (splitted by &quot;|&quot;).;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getExamplesKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f11;59;41;59;;;;vpos;;vstring;;r&#10;Description&#10;     Returns Examples keywords (splitted by &quot;|&quot;).;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getFeatureKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f11;31;40;31;;;;vpos;;vstring;;r&#10;Description&#10;     Returns Feature keywords (splitted by &quot;|&quot;).;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getGivenKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f11;66;38;66;;;;vpos;;vstring;;r&#10;Description&#10;     Returns Given keywords (splitted by &quot;|&quot;).;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getOutlineKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f11;52;40;52;;;;vpos;;vstring;;r&#10;Description&#10;     Returns Scenario Outline keywords (splitted by &quot;|&quot;).;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getScenarioKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f11;45;41;45;;;;vpos;;vstring;;r&#10;Description&#10;     Returns Scenario keywords (splitted by &quot;|&quot;).;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getStepKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f11;101;37;101;;;;vpos;;vstring;;r&#10;Description&#10;     Returns all step keywords (splitted by &quot;|&quot;).;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getThenKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f11;80;37;80;;;;vpos;;vstring;;r&#10;Description&#10;     Returns Then keywords (splitted by &quot;|&quot;).;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getWhenKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f11;73;37;73;;;;vpos;;vstring;;r&#10;Description&#10;     Returns When keywords (splitted by &quot;|&quot;).;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="setLanguage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsInterface.php;f11;24;42;24;;;;vpos;;v;;r&#10;Description&#10;     Sets keywords holder language.&#10;&#10;Parameters:&#10;    string $language - Language name;;d-1,-1;;b1,0;;mstring $language;;p">
</treenode>
</treenode>
<treenode node="LoaderInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\LoaderInterface.php;f0;3;1;10;;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\LoaderInterface.php;f0;19;1;38;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="getPattern;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\LoaderInterface.php;f11;9;32;9;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\LoaderInterface.php;f11;7;30;7;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\LoaderInterface.php;f11;37;35;37;;;;vpos;;vFeatureNode;;r&#10;Description&#10;     Loads features from provided resource.&#10;&#10;Parameters:&#10;    mixed $resource - Resource to load&#10;&#10;Return:&#10;   [];;d-1,-1;;b1,0;;mmixed $resource;;p">
</treenode>
<treenode node="loadTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\LoaderInterface.php;f11;5;40;5;;;;vpos;;v;;r;;d-1,-1;;b1,0;;mfilename;;p">
</treenode>
<treenode node="supports;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\LoaderInterface.php;f11;28;39;28;;;;vpos;;vBoolean;;r&#10;Description&#10;     Checks if current loader supports provided resource.&#10;&#10;Parameters:&#10;    mixed $resource - Resource to load;;d-1,-1;;b1,0;;mmixed $resource;;p">
</treenode>
</treenode>
<treenode node="MultiSession;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\MultiSession.php;f0;3;1;14;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="_backupSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\MultiSession.php;f11;9;36;9;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="_closeSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\MultiSession.php;f11;11;50;11;;;;vpos;;v;;r;;d-1,-1;;b1,0;;msession;;p">
</treenode>
<treenode node="_getName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\MultiSession.php;f11;13;30;13;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="_initializeSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\MultiSession.php;f11;5;40;5;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="_loadSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\MultiSession.php;f11;7;42;7;;;;vpos;;v;;r;;d-1,-1;;b1,0;;msession;;p">
</treenode>
</treenode>
<treenode node="NodeInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\NodeInterface.php;f0;17;1;32;;;;vpos;;v;;r&#10;Definition&#10;    interface NodeInterface&#10;&#10;Description&#10;     Gherkin node interface.;;d0,18;;b0,0;;m">
<treenode node="getLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\NodeInterface.php;f11;31;29;31;;;;vpos;;vinteger;;r&#10;Description&#10;     Returns feature declaration line number.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getNodeType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\NodeInterface.php;f11;24;33;24;;;;vpos;;vstring;;r&#10;Description&#10;     Returns node type string;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ORM;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\ORM.php;f0;3;1;5;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
</treenode>
<treenode node="PageSourceSaver;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\PageSourceSaver.php;f0;3;1;15;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="_savePageSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\PageSourceSaver.php;f11;14;46;14;;;;vpos;;v;;r&#10;Description&#10;     Saves page source of to a file&#10;&#10;Parameters:&#10;     $filename;;d-1,-1;;b1,0;;m $filename;;p">
</treenode>
</treenode>
<treenode node="PartedModule;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\PartedModule.php;f0;21;1;24;;;;vpos;;v;;r&#10;Definition&#10;    interface PartedModule&#10;&#10;Description&#10;     Interface PartedModule;;d0,22;;b0,0;;m">
<treenode node="_parts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\PartedModule.php;f11;23;28;23;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="phar://codecept.phar/autoload.php;PHP:PHP Include;H:\OSPanel\domains\yii\vendor\codeception\base\package\stub.php;f14;4;47;4;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="phar://codecept.phar/codecept;PHP:PHP Include;H:\OSPanel\domains\yii\vendor\codeception\base\package\stub.php;f14;6;43;6;;;;vpos;;v;;r;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="Plain;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\Plain.php;f0;6;1;8;;;;vpos;;v;;r&#10;Definition&#10;    interface Plain&#10;&#10;Description&#10;     TestCases that do not follow OOP;;d0,7;;b0,0;;m">
</treenode>
<treenode node="Queue;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Queue.php;f0;3;1;51;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="addMessageToQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Queue.php;f11;19;55;19;;;;vpos;;v;;r&#10;Description&#10;     Post/Put a message on to the queue server&#10;&#10;Parameters:&#10;    string $message - Message Body to be send&#10;    string $queue - Queue Name;;d-1,-1;;b1,0;;mstring $message;;pstring $queue;;p">
</treenode>
<treenode node="clearQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Queue.php;f11;46;38;46;;;;vpos;;v;;r;;d-1,-1;;b1,0;;mqueue;;p">
</treenode>
<treenode node="getDefaultConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Queue.php;f11;50;38;50;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getMessagesCurrentCountOnQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Queue.php;f11;35;58;35;;;;vpos;;vint;;r&#10;Description&#10;     Count the current number of messages on the queue.&#10;&#10;Parameters:&#10;     $queue - Queue Name&#10;&#10;Return:&#10;   Count;;d-1,-1;;b1,0;;m $queue;;p">
</treenode>
<treenode node="getMessagesTotalCountOnQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Queue.php;f11;44;56;44;;;;vpos;;vint;;r&#10;Description&#10;     Count the total number of messages on the queue.&#10;&#10;Parameters:&#10;     $queue - Queue Name&#10;&#10;Return:&#10;   Count;;d-1,-1;;b1,0;;m $queue;;p">
</treenode>
<treenode node="getQueues;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Queue.php;f11;26;31;26;;;;vpos;;varray;;r&#10;Description&#10;     Return a list of queues/tubes on the queueing server&#10;&#10;Return:&#10;   Array of Queues;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getRequiredConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Queue.php;f11;48;39;48;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="openConnection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Queue.php;f11;11;43;11;;;;vpos;;v;;r&#10;Description&#10;     Connect to the queueing server.&#10;&#10;Parameters:&#10;    array $config;;d-1,-1;;b1,0;;marray $config;;p">
</treenode>
</treenode>
<treenode node="Remote;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Remote.php;f0;3;1;40;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="_getUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Remote.php;f11;39;29;39;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="amOnSubdomain;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Remote.php;f11;25;45;25;;;;vpos;;vmixed;;r&#10;Description&#10;     Changes the subdomain for the &apos;url&apos; configuration parameter. Does not open a page;s use `amOnPage` for that.&#10;&#10;Parameters:&#10;     $subdomain;;d-1,-1;;b1,0;;m $subdomain;;p">
</treenode>
<treenode node="amOnUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Remote.php;f11;37;33;37;;;;vpos;;v;;r&#10;Description&#10;     Open web page at the given absolute URL and sets its hostname as the base host.;;d-1,-1;;b1,0;;murl;;p">
</treenode>
</treenode>
<treenode node="Reported;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\Reported.php;f0;3;1;11;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="getReportFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\Reported.php;f11;10;37;10;;;;vpos;;varray;;r&#10;Description&#10;     Field values for XML/JSON/TAP reports;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="RequiresPackage;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\RequiresPackage.php;f0;3;1;10;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="_requires;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\RequiresPackage.php;f11;9;31;9;;;;vpos;;v;;r&#10;Description&#10;     Returns list of classes and corresponding packages required for this module;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ScenarioDriven;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\ScenarioDriven.php;f0;3;1;17;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="getFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\ScenarioDriven.php;f11;5;32;5;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\ScenarioDriven.php;f11;10;33;10;;;;vpos;;v;;r&#10;Description&#10;      \Codeception\Scenario;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getScenarioText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\ScenarioDriven.php;f11;12;53;12;;;;vpos;;v;;r;;d-1,-1;;b1,0;;mformat;;p">
</treenode>
<treenode node="getSourceCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\ScenarioDriven.php;f11;16;35;16;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="preload;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\ScenarioDriven.php;f11;14;29;14;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ScenarioInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioInterface.php;f0;17;1;19;;;;vpos;;vScenarioLikeInterface;;cTaggedNodeInterface;;c;;r&#10;Definition&#10;    interface ScenarioInterface extends ScenarioLikeInterface, TaggedNodeInterface&#10;&#10;Description&#10;     Gherkin scenario interface.;;d0,18;;b0,0;;m">
</treenode>
<treenode node="ScenarioLikeInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioLikeInterface.php;f0;17;1;19;;;;vpos;;vKeywordNodeInterface;;cStepContainerInterface;;c;;r&#10;Definition&#10;    interface ScenarioLikeInterface extends KeywordNodeInterface, StepContainerInterface&#10;&#10;Description&#10;     Gherkin scenario-like interface.;;d0,18;;b0,0;;m">
</treenode>
<treenode node="ScreenshotSaver;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\ScreenshotSaver.php;f0;3;1;15;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="_saveScreenshot;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\ScreenshotSaver.php;f11;14;46;14;;;;vpos;;v;;r&#10;Description&#10;     Saves screenshot of current page to a file&#10;&#10;Parameters:&#10;     $filename;;d-1,-1;;b1,0;;m $filename;;p">
</treenode>
</treenode>
<treenode node="SessionSnapshot;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\SessionSnapshot.php;f0;3;1;45;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="loadSessionSnapshot;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\SessionSnapshot.php;f11;44;46;44;;;;vpos;;vmixed;;r&#10;Description&#10;     Loads cookies from saved snapshot.&#10;&#10;Parameters:&#10;     $name;;d-1,-1;;b1,0;;m $name;;p">
</treenode>
<treenode node="saveSessionSnapshot;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\SessionSnapshot.php;f11;35;46;35;;;;vpos;;vmixed;;r&#10;Description&#10;     Saves current cookies into named snapshot in order to restore them in other tests This is useful to save session state between tests. For example, if user needs log in to site for each test this scenario can be executed once while other tests can just restore saved cookies.&#10;&#10;Parameters:&#10;     $name;;d-1,-1;;b1,0;;m $name;;p">
</treenode>
</treenode>
<treenode node="StepContainerInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepContainerInterface.php;f0;17;1;32;;;;vpos;;vNodeInterface;;c;;r&#10;Definition&#10;    interface StepContainerInterface extends NodeInterface&#10;&#10;Description&#10;     Gherkin step container interface.;;d0,18;;b0,0;;m">
<treenode node="getSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepContainerInterface.php;f11;31;30;31;;;;vpos;;vStepNode;;r&#10;Description&#10;     Returns container steps.&#10;&#10;Return:&#10;   [];;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="hasSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepContainerInterface.php;f11;24;30;24;;;;vpos;;vBoolean;;r&#10;Description&#10;     Checks if container has steps.;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="StrictCoverage;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\StrictCoverage.php;f0;4;1;9;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="getLinesToBeCovered;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\StrictCoverage.php;f11;6;41;6;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getLinesToBeUsed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Interfaces\StrictCoverage.php;f11;8;38;8;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="TaggedNodeInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TaggedNodeInterface.php;f0;17;1;41;;;;vpos;;vNodeInterface;;c;;r&#10;Definition&#10;    interface TaggedNodeInterface extends NodeInterface&#10;&#10;Description&#10;     Gherkin tagged node interface.;;d0,18;;b0,0;;m">
<treenode node="getTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TaggedNodeInterface.php;f11;40;29;40;;;;vpos;;vstring;;r&#10;Description&#10;     Returns node tags (including inherited from feature).&#10;&#10;Return:&#10;   [];;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="hasTag;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TaggedNodeInterface.php;f11;26;32;26;;;;vpos;;vBoolean;;r&#10;Description&#10;     Checks if node is tagged with tag.&#10;&#10;Parameters:&#10;    string $tag;;d-1,-1;;b1,0;;mstring $tag;;p">
</treenode>
<treenode node="hasTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TaggedNodeInterface.php;f11;33;29;33;;;;vpos;;vBoolean;;r&#10;Description&#10;     Checks if node has tags (both inherited from feature and own).;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="TestInterface;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\TestInterface.php;f0;6;1;12;;;;vpos;;vTest;;c;;r;;d0,7;;b0,0;;m">
<treenode node="getMetadata;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\TestInterface.php;f11;11;33;11;;;;vpos;;vMetadata;;r&#10;Description&#10;     ;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Throwable;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\autoload.php;f8;28;30;28;;;;vpos;;v;;r;;d28,28;;b0,0;;m">
</treenode>
<treenode node="Web;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f0;3;1;982;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="amOnPage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;18;35;18;;;;vpos;;v;;r&#10;Description&#10;     Opens the page for the given relative URI.&#10;&#10;Parameters:&#10;    string $page;;d-1,-1;;b1,0;;mstring $page;;p">
</treenode>
<treenode node="attachFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;714;49;714;;;;vpos;;v;;r&#10;Description&#10;     Attaches a file relative to the Codeception `_data` directory to the given file upload field.&#10;&#10;Parameters:&#10;     $field&#10;     $filename;;d-1,-1;;b1,0;;m $field;;p $filename;;p">
</treenode>
<treenode node="checkOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;671;40;671;;;;vpos;;v;;r&#10;Description&#10;     Ticks a checkbox. For radio buttons, use the `selectOption` method instead.&#10;&#10;Parameters:&#10;     $option;;d-1,-1;;b1,0;;m $option;;p">
</treenode>
<treenode node="click;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;314;49;314;;;;vpos;;v;;r&#10;Description&#10;     Perform a click on a link or a button, given by a locator. If a fuzzy locator is given, the page will be searched for a button, link, or image matching the locator string. For buttons, the &quot;value&quot; attribute, &quot;name&quot; attribute, and inner text are searched. For links, the link text is searched. For images, the &quot;alt&quot; attribute and inner text of any parent links are searched.&#10;&#10;Parameters:&#10;     $link&#10;     $context;;d-1,-1;;b1,0;;m $link;;p $context;;p">
</treenode>
<treenode node="dontSee;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;82;52;82;;;;vpos;;v;;r&#10;Description&#10;     Checks that the current page doesn&apos;t contain the text specified (case insensitive). Give a locator as the second parameter to match a specific region.&#10;&#10;Parameters:&#10;    string $text&#10;    string $selector - optional;;d-1,-1;;b1,0;;mstring $text;;pstring $selector;;p">
</treenode>
<treenode node="dontSeeCheckboxIsChecked;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;479;55;479;;;;vpos;;v;;r&#10;Description&#10;     Check that the specified checkbox is unchecked.&#10;&#10;Parameters:&#10;     $checkbox;;d-1,-1;;b1,0;;m $checkbox;;p">
</treenode>
<treenode node="dontSeeCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;934;62;934;;;;vpos;;vmixed;;r&#10;Description&#10;     Checks that there isn&apos;t a cookie with the given name. You can set additional cookie params like `domain`, `path` as array passed in last argument.&#10;&#10;Parameters:&#10;     $cookie&#10;    array $params;;d-1,-1;;b1,0;;m $cookie;;parray $params;;p">
</treenode>
<treenode node="dontSeeCurrentUrlEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;419;49;419;;;;vpos;;v;;r&#10;Description&#10;     Checks that the current URL doesn&apos;t equal the given string. Unlike `dontSeeInCurrentUrl`, this only matches the full URL.&#10;&#10;Parameters:&#10;    string $uri;;d-1,-1;;b1,0;;mstring $uri;;p">
</treenode>
<treenode node="dontSeeCurrentUrlMatches;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;433;50;433;;;;vpos;;v;;r&#10;Description&#10;     Checks that current url doesn&apos;t match the given regular expression.&#10;&#10;Parameters:&#10;    string $uri;;d-1,-1;;b1,0;;mstring $uri;;p">
</treenode>
<treenode node="dontSeeElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;837;63;837;;;;vpos;;v;;r&#10;Description&#10;     Checks that the given element is invisible or not present on the page. You can also specify expected attributes of this element.&#10;&#10;Parameters:&#10;     $selector&#10;    array $attributes;;d-1,-1;;b1,0;;m $selector;;parray $attributes;;p">
</treenode>
<treenode node="dontSeeInCurrentUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;404;45;404;;;;vpos;;v;;r&#10;Description&#10;     Checks that the current URI doesn&apos;t contain the given string.&#10;&#10;Parameters:&#10;    string $uri;;d-1,-1;;b1,0;;mstring $uri;;p">
</treenode>
<treenode node="dontSeeInField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;519;50;519;;;;vpos;;v;;r&#10;Description&#10;     Checks that an input field or textarea doesn&apos;t contain the given value. For fuzzy locators, the field is matched by label text, CSS and XPath.&#10;&#10;Parameters:&#10;     $field&#10;     $value;;d-1,-1;;b1,0;;m $field;;p $value;;p">
</treenode>
<treenode node="dontSeeInFormFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;625;69;625;;;;vpos;;v;;r&#10;Description&#10;     Checks if the array of form parameters (name =&gt; value) are not set on the form matched with the passed selector.&#10;&#10;Parameters:&#10;     $formSelector&#10;     $params;;d-1,-1;;b1,0;;m $formSelector;;p $params;;p">
</treenode>
<treenode node="dontSeeInSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;108;41;108;;;;vpos;;v;;r&#10;Description&#10;     Checks that the current page contains the given string in its raw source code.&#10;&#10;Parameters:&#10;     $raw;;d-1,-1;;b1,0;;m $raw;;p">
</treenode>
<treenode node="dontSeeInTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;907;42;907;;;;vpos;;vmixed;;r&#10;Description&#10;     Checks that the page title does not contain the given string.&#10;&#10;Parameters:&#10;     $title;;d-1,-1;;b1,0;;m $title;;p">
</treenode>
<treenode node="dontSeeLink;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;346;51;346;;;;vpos;;v;;r&#10;Description&#10;     Checks that the page doesn&apos;t contain a link with the given string. If the second parameter is given, only links with a matching &quot;href&quot; attribute will be checked.&#10;&#10;Parameters:&#10;    string $text&#10;    string $url - optional;;d-1,-1;;b1,0;;mstring $text;;pstring $url;;p">
</treenode>
<treenode node="dontSeeOptionIsSelected;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;883;67;883;;;;vpos;;vmixed;;r&#10;Description&#10;     Checks that the given option is not selected.&#10;&#10;Parameters:&#10;     $selector&#10;     $optionText;;d-1,-1;;b1,0;;m $selector;;p $optionText;;p">
</treenode>
<treenode node="fillField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;699;45;699;;;;vpos;;v;;r&#10;Description&#10;     Fills a text field or textarea with the given string.&#10;&#10;Parameters:&#10;     $field&#10;     $value;;d-1,-1;;b1,0;;m $field;;p $value;;p">
</treenode>
<treenode node="grabAttributeFrom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;771;62;771;;;;vpos;;vmixed;;r&#10;Description&#10;     Grabs the value of the given attribute value from the given element. Fails if element is not found.&#10;&#10;Parameters:&#10;     $cssOrXpath&#10;     $attribute;;d-1,-1;;b1,0;;m $cssOrXpath;;p $attribute;;p">
</treenode>
<treenode node="grabCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;974;59;974;;;;vpos;;vmixed;;r&#10;Description&#10;     Grabs a cookie value. You can set additional cookie params like `domain`, `path` in array passed as last argument.&#10;&#10;Parameters:&#10;     $cookie&#10;    array $params;;d-1,-1;;b1,0;;m $cookie;;parray $params;;p">
</treenode>
<treenode node="grabFromCurrentUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;450;51;450;;;;vpos;;vmixed;;r&#10;Description&#10;     Executes the given regular expression against the current URI and returns the first capturing group. If no parameters are provided, the full URI is returned.&#10;&#10;Parameters:&#10;    string $uri - optional;;d-1,-1;;b1,0;;mstring $uri;;p">
</treenode>
<treenode node="grabMultiple;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;797;64;797;;;;vpos;;vstring;;r&#10;Description&#10;     Grabs either the text content, or attribute values, of nodes matched by $cssOrXpath and returns them as an array.&#10;&#10;Parameters:&#10;     $cssOrXpath&#10;     $attribute&#10;&#10;Return:&#10;   [];;d-1,-1;;b1,0;;m $cssOrXpath;;p $attribute;;p">
</treenode>
<treenode node="grabPageSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;981;36;981;;;;vpos;;vstring;;r&#10;Description&#10;     Grabs current page source code.&#10;&#10;Return:&#10;   Current page source code;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="grabTextFrom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;733;52;733;;;;vpos;;vmixed;;r&#10;Description&#10;     Finds and returns the text contents of the given element. If a fuzzy locator is used, the element is found using CSS, XPath, and by matching the full page source by regular expression.&#10;&#10;Parameters:&#10;     $cssOrXPathOrRegex;;d-1,-1;;b1,0;;m $cssOrXPathOrRegex;;p">
</treenode>
<treenode node="grabValueFrom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;752;41;752;;;;vpos;;vmixed;;r&#10;Description&#10;     Finds the value for the given form field. If a fuzzy locator is used, the field is found by field name, CSS, and XPath.&#10;&#10;Parameters:&#10;     $field;;d-1,-1;;b1,0;;m $field;;p">
</treenode>
<treenode node="resetCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;963;60;963;;;;vpos;;vmixed;;r&#10;Description&#10;     Unsets cookie with the given name. You can set additional cookie params like `domain`, `path` in array passed as last argument.&#10;&#10;Parameters:&#10;     $cookie&#10;    array $params;;d-1,-1;;b1,0;;m $cookie;;parray $params;;p">
</treenode>
<treenode node="see;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;51;48;51;;;;vpos;;v;;r&#10;Description&#10;     Checks that the current page contains the given string (case insensitive).&#10;&#10;Parameters:&#10;    string $text&#10;    string $selector - optional;;d-1,-1;;b1,0;;mstring $text;;pstring $selector;;p">
</treenode>
<treenode node="seeCheckboxIsChecked;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;465;51;465;;;;vpos;;v;;r&#10;Description&#10;     Checks that the specified checkbox is checked.&#10;&#10;Parameters:&#10;     $checkbox;;d-1,-1;;b1,0;;m $checkbox;;p">
</treenode>
<treenode node="seeCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;923;58;923;;;;vpos;;vmixed;;r&#10;Description&#10;     Checks that a cookie with the given name is set. You can set additional cookie params like `domain`, `path` as array passed in last argument.&#10;&#10;Parameters:&#10;     $cookie&#10;    array $params;;d-1,-1;;b1,0;;m $cookie;;parray $params;;p">
</treenode>
<treenode node="seeCurrentUrlEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;377;45;377;;;;vpos;;v;;r&#10;Description&#10;     Checks that the current URL is equal to the given string. Unlike `seeInCurrentUrl`, this only matches the full URL.&#10;&#10;Parameters:&#10;    string $uri;;d-1,-1;;b1,0;;mstring $uri;;p">
</treenode>
<treenode node="seeCurrentUrlMatches;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;391;46;391;;;;vpos;;v;;r&#10;Description&#10;     Checks that the current URL matches the given regular expression.&#10;&#10;Parameters:&#10;    string $uri;;d-1,-1;;b1,0;;mstring $uri;;p">
</treenode>
<treenode node="seeElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;819;59;819;;;;vpos;;v;;r&#10;Description&#10;     Checks that the given element exists on the page and is visible. You can also specify expected attributes of this element.&#10;&#10;Parameters:&#10;     $selector&#10;    array $attributes;;d-1,-1;;b1,0;;m $selector;;parray $attributes;;p">
</treenode>
<treenode node="seeInCurrentUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;362;41;362;;;;vpos;;v;;r&#10;Description&#10;     Checks that current URI contains the given string.&#10;&#10;Parameters:&#10;    string $uri;;d-1,-1;;b1,0;;mstring $uri;;p">
</treenode>
<treenode node="seeInField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;499;46;499;;;;vpos;;v;;r&#10;Description&#10;     Checks that the given input field or textarea *equals* (i.e. not just contains) the given value. Fields are matched by label text, the &quot;name&quot; attribute, CSS, or XPath.&#10;&#10;Parameters:&#10;     $field&#10;     $value;;d-1,-1;;b1,0;;m $field;;p $value;;p">
</treenode>
<treenode node="seeInFormFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;582;65;582;;;;vpos;;v;;r&#10;Description&#10;     Checks if the array of form parameters (name =&gt; value) are set on the form matched with the passed selector.&#10;&#10;Parameters:&#10;     $formSelector&#10;     $params;;d-1,-1;;b1,0;;m $formSelector;;p $params;;p">
</treenode>
<treenode node="seeInSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;95;37;95;;;;vpos;;v;;r&#10;Description&#10;     Checks that the current page contains the given string in its raw source code.&#10;&#10;Parameters:&#10;     $raw;;d-1,-1;;b1,0;;m $raw;;p">
</treenode>
<treenode node="seeInTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;898;38;898;;;;vpos;;vmixed;;r&#10;Description&#10;     Checks that the page title contains the given string.&#10;&#10;Parameters:&#10;     $title;;d-1,-1;;b1,0;;m $title;;p">
</treenode>
<treenode node="seeLink;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;330;47;330;;;;vpos;;v;;r&#10;Description&#10;     Checks that there&apos;s a link with the specified text. Give a full URL as the second parameter to match links with that exact URL.&#10;&#10;Parameters:&#10;    string $text&#10;    string $url - optional;;d-1,-1;;b1,0;;mstring $text;;pstring $url;;p">
</treenode>
<treenode node="seeNumberOfElements;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;851;61;851;;;;vpos;;v;;r&#10;Description&#10;     Checks that there are a certain number of elements matched by the given locator on the page.&#10;&#10;Parameters:&#10;     $selector&#10;    mixed $expected - int or int[];;d-1,-1;;b1,0;;m $selector;;pmixed $expected;;p">
</treenode>
<treenode node="seeOptionIsSelected;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;867;63;867;;;;vpos;;vmixed;;r&#10;Description&#10;     Checks that the given option is selected.&#10;&#10;Parameters:&#10;     $selector&#10;     $optionText;;d-1,-1;;b1,0;;m $selector;;p $optionText;;p">
</treenode>
<treenode node="selectOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;658;50;658;;;;vpos;;v;;r&#10;Description&#10;     Selects an option in a select tag or in radio button group.&#10;&#10;Parameters:&#10;     $select&#10;     $option;;d-1,-1;;b1,0;;m $select;;p $option;;p">
</treenode>
<treenode node="setCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;952;62;952;;;;vpos;;vmixed;;r&#10;Description&#10;     Sets a cookie with the given name and value. You can set additional cookie params like `domain`, `path`, `expires`, `secure` in array passed as last argument.&#10;&#10;Parameters:&#10;     $name&#10;     $val&#10;    array $params;;d-1,-1;;b1,0;;m $name;;p $val;;parray $params;;p">
</treenode>
<treenode node="submitForm;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;281;72;281;;;;vpos;;v;;r&#10;Description&#10;     Submits the given form on the page, with the given form values.  Pass the form field&apos;s values as an array in the second parameter.&#10;&#10;Parameters:&#10;     $selector&#10;     $params&#10;     $button;;d-1,-1;;b1,0;;m $selector;;p $params;;p $button;;p">
</treenode>
<treenode node="uncheckOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Interfaces\Web.php;f11;684;42;684;;;;vpos;;v;;r&#10;Description&#10;     Unticks a checkbox.&#10;&#10;Parameters:&#10;     $option;;d-1,-1;;b1,0;;m $option;;p">
</treenode>
</treenode>
<treenode node="WebDriverElement;PHP:Interface Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;69;81;69;;;;vpos;;vWebDriverElement;;c;;r;;d79,69;;b0,0;;m">
</treenode>
<treenode node="YII_DEBUG;PHP:PHP Word;H:\OSPanel\domains\yii\tests\_bootstrap.php;f32;2;41;2;;;;vpos;;v;;rtrue;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="YII_ENV;PHP:PHP Word;H:\OSPanel\domains\yii\tests\_bootstrap.php;f8;1;15;1;;;;vpos;;v;;r&apos;test&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="AboutCest;PHP:Class Name;H:\OSPanel\domains\yii\tests\acceptance\AboutCest.php;f0;4;1;11;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="ensureThatAboutWorks;PHP:Function Name;H:\OSPanel\domains\yii\tests\acceptance\AboutCest.php;f11;6;5;10;;;;vpos;;v;;r;;d4,7;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="AbstractFileLoader;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\AbstractFileLoader.php;f9;17;1;71;;;;vpos;;vFileLoaderInterface;;c;;r&#10;Definition&#10;    class AbstractFileLoader implements FileLoaderInterface&#10;&#10;Description&#10;     Abstract filesystem loader.;;d0,18;;b0,0;;m">
<treenode node="findAbsolutePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\AbstractFileLoader.php;f14;54;5;70;;;;vpos;;vstring;;r&#10;Definition&#10;    findAbsolutePath($path)&#10;&#10;Description&#10;     Finds absolute path for provided relative (relative to base features path).&#10;&#10;Parameters:&#10;    string $path - Relative path;;d4,55;;b2,0;;mstring $path;;p">
</treenode>
<treenode node="findRelativePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\AbstractFileLoader.php;f14;38;5;45;;;;vpos;;vstring;;r&#10;Definition&#10;    findRelativePath($path)&#10;&#10;Description&#10;     Finds relative path for provided absolute (relative to base features path).&#10;&#10;Parameters:&#10;    string $path - Absolute path;;d4,39;;b2,0;;mstring $path;;p">
</treenode>
<treenode node="setBasePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\AbstractFileLoader.php;f11;26;5;29;;;;vpos;;v;;r&#10;Definition&#10;    setBasePath($path)&#10;&#10;Description&#10;     Sets base features path.&#10;&#10;Parameters:&#10;    string $path - Base loader path;;d4,27;;b1,0;;mstring $path;;p">
</treenode>
</treenode>
<treenode node="Acceptance;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Acceptance.php;f0;8;1;125;;;;vpos;;vInitTemplate;;c;;r;;d0,9;;b0,0;;m">
<treenode node="setup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Acceptance.php;f11;66;5;124;;;;vpos;;v;;r;;d4,67;;b1,0;;m">
</treenode>
</treenode>
<treenode node="AcceptanceTester;PHP:Class Name;H:\OSPanel\domains\yii\tests\_support\AcceptanceTester.php;f0;18;1;25;;;;vpos;;vActor;;cAcceptanceTesterActions;;c;;r&#10;Definition&#10;    class AcceptanceTester extends \Codeception\Actor&#10;&#10;Description&#10;     Inherited Methods;;d0,19;;b0,0;;m">
</treenode>
<treenode node="Action;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Action.php;f0;5;1;7;;;;vpos;;vStep;;c;;r;;d0,6;;b0,0;;m">
</treenode>
<treenode node="Actions;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actions.php;f0;9;1;207;;;;vpos;;v;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actions.php;f11;52;5;64;;;;vpos;;v;;r;;d4,53;;b1,0;;msettings;;p">
</treenode>
<treenode node="addDoc;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actions.php;f14;167;5;191;;;;vpos;;vstring;;r&#10;Definition&#10;    addDoc(\ReflectionClass $class, \ReflectionMethod $refMethod)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \ReflectionClass $class&#10;    \ReflectionMethod $refMethod;;d4,168;;b2,0;;m\ReflectionClass $class;;p\ReflectionMethod $refMethod;;p">
</treenode>
<treenode node="addMethod;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actions.php;f14;92;5;143;;;;vpos;;v;;r;;d4,93;;b2,0;;mrefMethod;;p">
</treenode>
<treenode node="genHash;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actions.php;f18;193;5;201;;;;vpos;;v;;r;;d4,194;;b1,5;;mmodules;;psettings;;p">
</treenode>
<treenode node="getNumMethods;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actions.php;f11;203;5;206;;;;vpos;;v;;r;;d4,204;;b1,0;;m">
</treenode>
<treenode node="getParamsString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actions.php;f14;149;5;160;;;;vpos;;varray;;r&#10;Definition&#10;    getParamsString(\ReflectionMethod $refMethod)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \ReflectionMethod $refMethod;;d4,150;;b2,0;;m\ReflectionMethod $refMethod;;p">
</treenode>
<treenode node="produce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actions.php;f11;67;5;90;;;;vpos;;v;;r;;d4,68;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ActionSequence;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ActionSequence.php;f0;43;1;124;;;;vpos;;v;;r&#10;Definition&#10;    class ActionSequence&#10;&#10;Description&#10;     Class for defining an array actions to be executed inside `performOn` of WebDriver;;d0,44;;b0,0;;m">
<treenode node="__call;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ActionSequence.php;f11;56;5;60;;;;vpos;;v;;r;;d4,57;;b1,0;;maction;;parguments;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ActionSequence.php;f11;113;5;123;;;;vpos;;v;;r;;d4,114;;b1,0;;m">
</treenode>
<treenode node="addAction;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ActionSequence.php;f14;62;5;68;;;;vpos;;v;;r;;d4,63;;b2,0;;maction;;parguments;;p">
</treenode>
<treenode node="build;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ActionSequence.php;f18;51;5;54;;;;vpos;;vActionSequence;;r&#10;Definition&#10;    build()&#10;&#10;Description&#10;     Creates an instance;;d4,52;;b1,5;;m">
</treenode>
<treenode node="fromArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ActionSequence.php;f11;77;5;83;;;;vpos;;v;;r&#10;Definition&#10;    fromArray(array $actions)&#10;&#10;Description&#10;     Creates action sequence from associative array, where key is action, and value is action arguments&#10;&#10;Parameters:&#10;    array $actions;;d4,78;;b1,0;;marray $actions;;p">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ActionSequence.php;f11;99;5;111;;;;vpos;;v;;r&#10;Definition&#10;    run($context)&#10;&#10;Description&#10;     Executes sequence of action as methods of passed object.&#10;&#10;Parameters:&#10;     $context;;d4,100;;b1,0;;m $context;;p">
</treenode>
<treenode node="toArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ActionSequence.php;f11;89;5;92;;;;vpos;;varray;;r&#10;Definition&#10;    toArray()&#10;&#10;Description&#10;     Returns a list of logged actions as associative array;;d4,90;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Actor;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actor.php;f0;8;1;196;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Actor.php;f9;7;1;57;;;;vpos;;v;;r;;d0,9;;b0,0;;m">
<treenode node="__call;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Actor.php;f11;40;5;44;;;;vpos;;v;;r;;d4,41;;b1,0;;mmethod;;parguments;;p">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actor.php;f11;37;5;50;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Actor.php;f11;17;5;20;;;;vpos;;v;;r;;d4,38;;b1,0;;msettings;;p">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Actor.php;f11;51;5;56;;;;vpos;;v;;r&#10;Definition&#10;    execute($callable)&#10;&#10;Description&#10;     Lazy-execution given anonymous function&#10;&#10;Parameters:&#10;     $callable - \Closure;;d4,52;;b1,0;;m $callable;;p">
</treenode>
<treenode node="getActorName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actor.php;f11;113;5;116;;;;vpos;;v;;r;;d4,114;;b1,0;;m">
</treenode>
<treenode node="getDefaultValue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actor.php;f12;130;5;149;;;;vpos;;vstring;;r&#10;Definition&#10;    getDefaultValue(\ReflectionParameter $param)&#10;&#10;Description&#10;     Infer default parameter from the reflection object and format it as PHP (code) string&#10;&#10;Parameters:&#10;    \ReflectionParameter $param;;d4,131;;b3,0;;m\ReflectionParameter $param;;p">
</treenode>
<treenode node="getModules;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actor.php;f11;118;5;121;;;;vpos;;v;;r;;d4,119;;b1,0;;m">
</treenode>
<treenode node="getParamsString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actor.php;f14;100;5;111;;;;vpos;;varray;;r&#10;Definition&#10;    getParamsString(\ReflectionMethod $refMethod)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \ReflectionMethod $refMethod;;d4,101;;b2,0;;m\ReflectionMethod $refMethod;;p">
</treenode>
<treenode node="getScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Actor.php;f14;25;5;28;;;;vpos;;v;;r&#10;Definition&#10;    getScenario()&#10;&#10;Description&#10;      \Codeception\Scenario;;d4,26;;b2,0;;m">
</treenode>
<treenode node="phpEncodeArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actor.php;f12;178;5;195;;;;vpos;;vstring;;r&#10;Definition&#10;    phpEncodeArray(array $array)&#10;&#10;Description&#10;     Recursively PHP encode an array&#10;&#10;Parameters:&#10;    array $array;;d4,179;;b3,0;;marray $array;;p">
</treenode>
<treenode node="phpEncodeValue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actor.php;f12;158;5;169;;;;vpos;;vstring;;r&#10;Definition&#10;    phpEncodeValue($value)&#10;&#10;Description&#10;     PHP encoded a value&#10;&#10;Parameters:&#10;    mixed $value;;d4,159;;b3,0;;mmixed $value;;p">
</treenode>
<treenode node="prependAbstractActorDocBlocks;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actor.php;f14;67;5;94;;;;vpos;;v;;r;;d4,68;;b2,0;;m">
</treenode>
<treenode node="produce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Actor.php;f11;52;5;65;;;;vpos;;v;;r;;d4,53;;b1,0;;m">
</treenode>
<treenode node="wantTo;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Actor.php;f11;35;5;38;;;;vpos;;v;;r;;d4,36;;b1,0;;mtext;;p">
</treenode>
<treenode node="wantToTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Actor.php;f11;30;5;33;;;;vpos;;v;;r;;d4,31;;b1,0;;mtext;;p">
</treenode>
</treenode>
<treenode node="AmazonSQS;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\AmazonSQS.php;f0;8;1;151;;;;vpos;;vQueue;;c;;r;;d0,9;;b0,0;;m">
<treenode node="addMessageToQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\AmazonSQS.php;f11;51;5;57;;;;vpos;;v;;r&#10;Definition&#10;    addMessageToQueue($message, $queue)&#10;&#10;Description&#10;     Post/Put a message on to the queue server&#10;&#10;Parameters:&#10;    string $message - Message Body to be send&#10;    string $queue - Queue Name;;d4,52;;b1,0;;mstring $message;;pstring $queue;;p">
</treenode>
<treenode node="clearQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\AmazonSQS.php;f11;105;5;121;;;;vpos;;v;;r;;d4,106;;b1,0;;mqueue;;p">
</treenode>
<treenode node="getDefaultConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\AmazonSQS.php;f11;147;5;150;;;;vpos;;v;;r;;d4,148;;b1,0;;m">
</treenode>
<treenode node="getMessagesCurrentCountOnQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\AmazonSQS.php;f11;82;5;88;;;;vpos;;vint;;r&#10;Definition&#10;    getMessagesCurrentCountOnQueue($queue)&#10;&#10;Description&#10;     Count the current number of messages on the queue.&#10;&#10;Parameters:&#10;     $queue - Queue Name&#10;&#10;Return:&#10;   Count;;d4,83;;b1,0;;m $queue;;p">
</treenode>
<treenode node="getMessagesTotalCountOnQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\AmazonSQS.php;f11;97;5;103;;;;vpos;;vint;;r&#10;Definition&#10;    getMessagesTotalCountOnQueue($queue)&#10;&#10;Description&#10;     Count the total number of messages on the queue.&#10;&#10;Parameters:&#10;     $queue - Queue Name&#10;&#10;Return:&#10;   Count;;d4,98;;b1,0;;m $queue;;p">
</treenode>
<treenode node="getQueues;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\AmazonSQS.php;f11;64;5;73;;;;vpos;;varray;;r&#10;Definition&#10;    getQueues()&#10;&#10;Description&#10;     Return a list of queues/tubes on the queueing server&#10;&#10;Return:&#10;   Array of Queues;;d4,65;;b1,0;;m">
</treenode>
<treenode node="getQueueURL;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\AmazonSQS.php;f12;130;5;140;;;;vpos;;vstring;;r&#10;Definition&#10;    getQueueURL($queue)&#10;&#10;Description&#10;     Get the queue/tube URL from the queue name (AWS function only)&#10;&#10;Parameters:&#10;     $queue - Queue Name&#10;&#10;Return:&#10;   Queue URL;;d4,131;;b3,0;;m $queue;;p">
</treenode>
<treenode node="getRequiredConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\AmazonSQS.php;f11;142;5;145;;;;vpos;;v;;r;;d4,143;;b1,0;;m">
</treenode>
<treenode node="openConnection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\AmazonSQS.php;f11;17;5;43;;;;vpos;;v;;r&#10;Definition&#10;    openConnection($config)&#10;&#10;Description&#10;     Connect to the queueing server. (AWS, Iron.io and Beanstalkd)&#10;&#10;Parameters:&#10;    array $config;;d4,18;;b1,0;;marray $config;;p">
</treenode>
</treenode>
<treenode node="AMQP;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f0;48;1;389;;;;vpos;;vCodeceptionModule;;cRequiresPackage;;c;;r&#10;Definition&#10;    class AMQP extends CodeceptionModule implements RequiresPackage&#10;&#10;Description&#10;     This module interacts with message broker software that implements the Advanced Message Queuing Protocol (AMQP) standard. For example, RabbitMQ (tested).;;d0,49;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f11;92;5;97;;;;vpos;;v;;r;;d4,93;;b1,0;;mtest;;p">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f11;77;5;90;;;;vpos;;v;;r;;d4,78;;b1,0;;m">
</treenode>
<treenode node="_requires;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f11;72;5;75;;;;vpos;;v;;r;;d4,73;;b1,0;;m">
</treenode>
<treenode node="bindQueueToExchange;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f11;260;5;276;;;;vpos;;vmixed;;r&#10;Definition&#10;    bindQueueToExchange(&#10;        $queue,&#10;        $exchange,&#10;        $routing_key = &apos;&apos;,&#10;        $nowait = false,&#10;        $arguments = null,&#10;        $ticket = null&#10;    )&#10;&#10;Description&#10;     Binds a queue to an exchange&#10;&#10;Parameters:&#10;    string $queue&#10;    string $exchange&#10;    string $routing_key&#10;    bool $nowait&#10;    array $arguments&#10;    int $ticket&#10;&#10;Return:&#10;   |null;;d6,267;;b1,0;;mstring $queue;;pstring $exchange;;pstring $routing_key;;pbool $nowait;;parray $arguments;;pint $ticket;;p">
</treenode>
<treenode node="cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f14;370;5;388;;;;vpos;;v;;r;;d4,371;;b2,0;;m">
</treenode>
<treenode node="declareExchange;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f11;170;5;192;;;;vpos;;vmixed;;r&#10;Definition&#10;    declareExchange(&#10;        $exchange,&#10;        $type,&#10;        $passive = false,&#10;        $durable = false,&#10;        $auto_delete = true,&#10;        $internal = false,&#10;        $nowait = false,&#10;        $arguments = null,&#10;        $ticket = null&#10;    )&#10;&#10;Description&#10;     Declares an exchange&#10;&#10;Parameters:&#10;    string $exchange&#10;    string $type&#10;    bool $passive&#10;    bool $durable&#10;    bool $auto_delete&#10;    bool $internal&#10;    bool $nowait&#10;    array $arguments&#10;    int $ticket&#10;&#10;Return:&#10;   |null;;d6,180;;b1,0;;mstring $exchange;;pstring $type;;pbool $passive;;pbool $durable;;pbool $auto_delete;;pbool $internal;;pbool $nowait;;parray $arguments;;pint $ticket;;p">
</treenode>
<treenode node="declareQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f11;216;5;236;;;;vpos;;vmixed;;r&#10;Definition&#10;    declareQueue(&#10;        $queue = &apos;&apos;,&#10;        $passive = false,&#10;        $durable = false,&#10;        $exclusive = false,&#10;        $auto_delete = true,&#10;        $nowait = false,&#10;        $arguments = null,&#10;        $ticket = null&#10;    )&#10;&#10;Description&#10;     Declares queue, creates if needed&#10;&#10;Parameters:&#10;    string $queue&#10;    bool $passive&#10;    bool $durable&#10;    bool $exclusive&#10;    bool $auto_delete&#10;    bool $nowait&#10;    array $arguments&#10;    int $ticket&#10;&#10;Return:&#10;   |null;;d6,225;;b1,0;;mstring $queue;;pbool $passive;;pbool $durable;;pbool $exclusive;;pbool $auto_delete;;pbool $nowait;;parray $arguments;;pint $ticket;;p">
</treenode>
<treenode node="getChannel;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f14;362;5;368;;;;vpos;;v;;r&#10;Definition&#10;    getChannel()&#10;&#10;Description&#10;      \PhpAmqpLib\Channel\AMQPChannel;;d4,363;;b2,0;;m">
</treenode>
<treenode node="grabMessageFromQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f11;319;5;323;;;;vpos;;v;;r&#10;Definition&#10;    grabMessageFromQueue($queue)&#10;&#10;Description&#10;     Takes last message from queue.&#10;&#10;Parameters:&#10;    string $queue;;d4,320;;b1,0;;mstring $queue;;p">
</treenode>
<treenode node="purgeAllQueues;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f11;354;5;357;;;;vpos;;v;;r&#10;Definition&#10;    purgeAllQueues()&#10;&#10;Description&#10;     Purge all queues defined in config.;;d4,355;;b1,0;;m">
</treenode>
<treenode node="purgeQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f11;336;5;343;;;;vpos;;v;;r&#10;Definition&#10;    purgeQueue($queueName = &apos;&apos;)&#10;&#10;Description&#10;     Purge a specific queue defined in config.&#10;&#10;Parameters:&#10;    string $queueName;;d4,337;;b1,0;;mstring $queueName;;p">
</treenode>
<treenode node="pushToExchange;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f11;115;5;121;;;;vpos;;v;;r&#10;Definition&#10;    pushToExchange($exchange, $message, $routing_key = null)&#10;&#10;Description&#10;     Sends message to exchange by sending exchange name, message and (optionally) a routing key&#10;&#10;Parameters:&#10;    string $exchange&#10;    string|\PhpAmqpLib\Message\AMQPMessage $message&#10;    string $routing_key;;d4,116;;b1,0;;mstring $exchange;;pstring|\PhpAmqpLib\Message\AMQPMessage $message;;pstring $routing_key;;p">
</treenode>
<treenode node="pushToQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f11;136;5;144;;;;vpos;;v;;r&#10;Definition&#10;    pushToQueue($queue, $message)&#10;&#10;Description&#10;     Sends message to queue&#10;&#10;Parameters:&#10;    string $queue&#10;    string|\PhpAmqpLib\Message\AMQPMessage $message;;d4,137;;b1,0;;mstring $queue;;pstring|\PhpAmqpLib\Message\AMQPMessage $message;;p">
</treenode>
<treenode node="seeMessageInQueueContainsText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AMQP.php;f11;294;5;305;;;;vpos;;v;;r&#10;Definition&#10;    seeMessageInQueueContainsText($queue, $text)&#10;&#10;Description&#10;     Checks if message containing text received.&#10;&#10;Parameters:&#10;    string $queue&#10;    string $text;;d4,295;;b1,0;;mstring $queue;;pstring $text;;p">
</treenode>
</treenode>
<treenode node="AngularCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\angular\AngularCest.php;f0;2;1;68;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\angular\AngularCest.php;f11;4;5;7;;;;vpos;;v;;r;;d4,5;;b1,0;;mI;;p">
</treenode>
<treenode node="fillFieldByName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\angular\AngularCest.php;f11;20;5;29;;;;vpos;;v;;r;;d4,21;;b1,0;;mI;;p">
</treenode>
<treenode node="fillFieldByPlaceholder;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\angular\AngularCest.php;f11;35;5;40;;;;vpos;;v;;r&#10;Definition&#10;    fillFieldByPlaceholder(AngularGuy $I)&#10;&#10;Description&#10;      depends fillFieldByName&#10;&#10;Parameters:&#10;    AngularGuy $I;;d4,36;;b1,0;;mAngularGuy $I;;p">
</treenode>
<treenode node="fillInWysiwyg;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\angular\AngularCest.php;f11;53;5;60;;;;vpos;;v;;r;;d4,54;;b1,0;;mI;;p">
</treenode>
<treenode node="fillRadioByLabel;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\angular\AngularCest.php;f11;46;5;51;;;;vpos;;v;;r&#10;Definition&#10;    fillRadioByLabel(AngularGuy $I)&#10;&#10;Description&#10;      depends fillFieldByName&#10;&#10;Parameters:&#10;    AngularGuy - $;;d4,47;;b1,0;;mAngularGuy;;p">
</treenode>
<treenode node="fillSelect;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\angular\AngularCest.php;f11;62;5;67;;;;vpos;;v;;r;;d4,63;;b1,0;;mI;;p">
</treenode>
<treenode node="followLinks;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\angular\AngularCest.php;f11;9;5;18;;;;vpos;;v;;r;;d4,10;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="AngularJS;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AngularJS.php;f0;40;1;143;;;;vpos;;vWebDriver;;c;;r&#10;Definition&#10;    class AngularJS extends WebDriver&#10;&#10;Description&#10;     Module for AngularJS testing, based on [WebDriver module](http://codeception.com/docs/modules/WebDriver) and [Protractor](http://angular.github.io/protractor/).;;d0,41;;b0,0;;m">
<treenode node="_afterStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AngularJS.php;f11;111;5;132;;;;vpos;;v;;r;;d4,112;;b1,0;;mstep;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AngularJS.php;f11;86;5;90;;;;vpos;;v;;r;;d4,87;;b1,0;;mtest;;p">
</treenode>
<treenode node="_setConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AngularJS.php;f11;81;5;84;;;;vpos;;v;;r;;d4,82;;b1,0;;mconfig;;p">
</treenode>
<treenode node="amInsideAngularApp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AngularJS.php;f11;96;5;99;;;;vpos;;v;;r&#10;Definition&#10;    amInsideAngularApp()&#10;&#10;Description&#10;     Enables Angular mode (enabled by default). Waits for Angular to finish rendering after each action.;;d4,97;;b1,0;;m">
</treenode>
<treenode node="amOutsideAngularApp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AngularJS.php;f11;106;5;109;;;;vpos;;v;;r&#10;Definition&#10;    amOutsideAngularApp()&#10;&#10;Description&#10;     Disabled Angular mode.;;d4,107;;b1,0;;m">
</treenode>
<treenode node="getStrictLocator;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\AngularJS.php;f14;134;5;142;;;;vpos;;v;;r;;d4,135;;b2,0;;mby;;p">
</treenode>
</treenode>
<treenode node="Annotation;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Annotation.php;f0;6;1;174;;;;vpos;;v;;r&#10;Definition&#10;    class Annotation&#10;&#10;Description&#10;     Simple annotation parser. Take only key-value annotations for methods or class.;;d0,7;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Annotation.php;f11;98;5;101;;;;vpos;;v;;r;;d4,99;;b1,0;;mclass;;p">
</treenode>
<treenode node="arrayValue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Annotation.php;f18;153;5;173;;;;vpos;;varray;;r&#10;Definition&#10;    arrayValue($annotation)&#10;&#10;Description&#10;     Returns an associative array value of annotation Either JSON or Doctrine-annotation style allowed Returns null if not a valid array data&#10;&#10;Parameters:&#10;     $annotation&#10;&#10;Return:&#10;   |mixed|string;;d4,154;;b1,5;;m $annotation;;p">
</treenode>
<treenode node="fetch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Annotation.php;f11;118;5;125;;;;vpos;;vnull;;r&#10;Definition&#10;    fetch($annotation)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $annotation;;d4,119;;b1,0;;m $annotation;;p">
</treenode>
<treenode node="fetchAll;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Annotation.php;f11;131;5;138;;;;vpos;;varray;;r&#10;Definition&#10;    fetchAll($annotation)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $annotation;;d4,132;;b1,0;;m $annotation;;p">
</treenode>
<treenode node="fetchAllAnnotationsFromDocblock;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Annotation.php;f18;82;5;95;;;;vpos;;varray;;r&#10;Definition&#10;    fetchAllAnnotationsFromDocblock($docblock)&#10;&#10;Description&#10;     Fetches all available annotations&#10;&#10;Parameters:&#10;     $docblock;;d4,83;;b1,5;;m $docblock;;p">
</treenode>
<treenode node="fetchAnnotationsFromDocblock;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Annotation.php;f18;68;5;74;;;;vpos;;varray;;r&#10;Definition&#10;    fetchAnnotationsFromDocblock($annotation, $docblock)&#10;&#10;Description&#10;     Parses raw comment for annotations&#10;&#10;Parameters:&#10;     $docblock&#10;     $annotation;;d4,69;;b1,5;;m $docblock;;p $annotation;;p">
</treenode>
<treenode node="forClass;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Annotation.php;f18;37;5;48;;;;vpos;;v;;r&#10;Definition&#10;    forClass($class)&#10;&#10;Description&#10;     Grabs annotation values.&#10;&#10;Parameters:&#10;     $class;;d4,38;;b1,5;;m $class;;p">
</treenode>
<treenode node="forMethod;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Annotation.php;f18;56;5;59;;;;vpos;;v;;r&#10;Definition&#10;    forMethod($class, $method)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $class&#10;     $method;;d4,57;;b1,5;;m $class;;p $method;;p">
</treenode>
<treenode node="method;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Annotation.php;f11;108;5;112;;;;vpos;;v;;r&#10;Definition&#10;    method($method)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $method;;d4,109;;b1,0;;m $method;;p">
</treenode>
<treenode node="raw;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Annotation.php;f11;140;5;143;;;;vpos;;v;;r;;d4,141;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Apc;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Apc.php;f0;29;1;259;;;;vpos;;vModule;;c;;r&#10;Definition&#10;    class Apc extends Module&#10;&#10;Description&#10;     This module interacts with the [Alternative PHP Cache (APC)](http://php.net/manual/en/intro.apcu.php) using either _APCu_ or _APC_ extension.;;d0,30;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Apc.php;f11;59;5;62;;;;vpos;;v;;r&#10;Definition&#10;    _after(TestInterface $test)&#10;&#10;Description&#10;     Code to run after each test.&#10;&#10;Parameters:&#10;    TestInterface $test;;d4,60;;b1,0;;mTestInterface $test;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Apc.php;f11;37;5;52;;;;vpos;;v;;r&#10;Definition&#10;    _before(TestInterface $test)&#10;&#10;Description&#10;     Code to run before each test.&#10;&#10;Parameters:&#10;    TestInterface $test;;d4,38;;b1,0;;mTestInterface $test;;p">
</treenode>
<treenode node="clear;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Apc.php;f14;195;5;202;;;;vpos;;vbool;;r&#10;Definition&#10;    clear()&#10;&#10;Description&#10;     Clears the APC(u) cache.;;d4,196;;b2,0;;m">
</treenode>
<treenode node="dontSeeInApc;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Apc.php;f11;133;5;144;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeInApc($key, $value = null)&#10;&#10;Description&#10;     Checks item in APC(u) doesn&apos;t exist or is the same as expected.&#10;&#10;Parameters:&#10;    string|string[] $key&#10;    mixed $value;;d4,134;;b1,0;;mstring|string[] $key;;pmixed $value;;p">
</treenode>
<treenode node="exists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Apc.php;f14;211;5;218;;;;vpos;;vbool;;r&#10;Definition&#10;    exists($key)&#10;&#10;Description&#10;     Checks if entry exists&#10;&#10;Parameters:&#10;    string|string[] $key&#10;&#10;Return:&#10;   |\string[];;d4,212;;b2,0;;mstring|string[] $key;;p">
</treenode>
<treenode node="fetch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Apc.php;f14;227;5;240;;;;vpos;;vmixed;;r&#10;Definition&#10;    fetch($key)&#10;&#10;Description&#10;     Fetch a stored variable from the cache&#10;&#10;Parameters:&#10;    string|string[] $key;;d4,228;;b2,0;;mstring|string[] $key;;p">
</treenode>
<treenode node="flushApc;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Apc.php;f11;184;5;188;;;;vpos;;v;;r&#10;Definition&#10;    flushApc()&#10;&#10;Description&#10;     Clears the APC(u) cache;;d4,185;;b1,0;;m">
</treenode>
<treenode node="grabValueFromApc;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Apc.php;f11;78;5;84;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabValueFromApc($key)&#10;&#10;Description&#10;     Grabs value from APC(u) by key.&#10;&#10;Parameters:&#10;    string|string[] $key;;d4,79;;b1,0;;mstring|string[] $key;;p">
</treenode>
<treenode node="haveInApc;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Apc.php;f11;174;5;179;;;;vpos;;vmixed;;r&#10;Definition&#10;    haveInApc($key, $value, $expiration = null)&#10;&#10;Description&#10;     Stores an item `$value` with `$key` on the APC(u).&#10;&#10;Parameters:&#10;    string|array $key&#10;    mixed $value&#10;    int $expiration;;d4,175;;b1,0;;mstring|array $key;;pmixed $value;;pint $expiration;;p">
</treenode>
<treenode node="seeInApc;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Apc.php;f11;104;5;113;;;;vpos;;v;;r&#10;Definition&#10;    seeInApc($key, $value = null)&#10;&#10;Description&#10;     Checks item in APC(u) exists and the same as expected.&#10;&#10;Parameters:&#10;    string|string[] $key&#10;    mixed $value;;d4,105;;b1,0;;mstring|string[] $key;;pmixed $value;;p">
</treenode>
<treenode node="store;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Apc.php;f14;251;5;258;;;;vpos;;varray;;r&#10;Definition&#10;    store($key, $var, $ttl = 0)&#10;&#10;Description&#10;     Cache a variable in the data store.&#10;&#10;Parameters:&#10;    string|array $key&#10;    mixed $var&#10;    int $ttl&#10;&#10;Return:&#10;   |bool;;d4,252;;b2,0;;mstring|array $key;;pmixed $var;;pint $ttl;;p">
</treenode>
</treenode>
<treenode node="Api;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Api.php;f0;8;1;93;;;;vpos;;vInitTemplate;;c;;r;;d0,9;;b0,0;;m">
<treenode node="setup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Api.php;f11;47;5;92;;;;vpos;;v;;r;;d4,48;;b1,0;;m">
</treenode>
</treenode>
<treenode node="AppAsset;PHP:Class Name;H:\OSPanel\domains\yii\assets\AppAsset.php;f0;17;1;31;;;;vpos;;vAssetBundle;;c;;r&#10;Definition&#10;    class AppAsset extends AssetBundle&#10;&#10;Description&#10;     Main application asset bundle.;;d0,18;;b0,0;;m">
</treenode>
<treenode node="Application;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Application.php;f0;13;1;182;;;;vpos;;vBaseApplication;;c;;r;;d0,14;;b0,0;;m">
<treenode node="getCoreArguments;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Application.php;f14;135;5;162;;;;vpos;;vArgvInput;;r&#10;Definition&#10;    getCoreArguments()&#10;&#10;Description&#10;     Search for --config Option and if found will be loaded;;d4,136;;b2,0;;m">
</treenode>
<treenode node="getCustomCommandName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Application.php;f14;75;5;89;;;;vpos;;vstring;;r&#10;Definition&#10;    getCustomCommandName($commandClass)&#10;&#10;Description&#10;     Validate and get the name of the command&#10;&#10;Parameters:&#10;    CustomCommandInterface $commandClass;;d4,76;;b2,0;;mCustomCommandInterface $commandClass;;p">
</treenode>
<treenode node="getDefaultInputDefinition;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Application.php;f14;115;5;122;;;;vpos;;vInputDefinition;;r&#10;Definition&#10;    getDefaultInputDefinition()&#10;&#10;Description&#10;     Add global a --config option.;;d4,116;;b2,0;;m">
</treenode>
<treenode node="preloadConfiguration;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Application.php;f14;171;5;181;;;;vpos;;v;;r&#10;Definition&#10;    preloadConfiguration($configFile)&#10;&#10;Description&#10;     Pre load Configuration, the config option is use.&#10;&#10;Parameters:&#10;    string $configFile - Path to Configuration;;d4,172;;b2,0;;mstring $configFile;;p">
</treenode>
<treenode node="readCustomCommandsFromConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Application.php;f14;50;5;64;;;;vpos;;v;;r&#10;Definition&#10;    readCustomCommandsFromConfig()&#10;&#10;Description&#10;     Search custom commands and register them.;;d4,51;;b2,0;;m">
</treenode>
<treenode node="registerCustomCommands;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Application.php;f11;29;5;43;;;;vpos;;v;;r&#10;Definition&#10;    registerCustomCommands()&#10;&#10;Description&#10;     Register commands from config file;;d4,30;;b1,0;;m">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Application.php;f11;96;5;108;;;;vpos;;v;;r&#10;Definition&#10;    run(InputInterface $input = null, OutputInterface $output = null)&#10;&#10;Description&#10;     To cache Class ArgvInput;;d4,97;;b1,0;;minput;;poutput;;p">
</treenode>
</treenode>
<treenode node="ArrayContainsComparator;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ArrayContainsComparator.php;f0;3;1;147;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ArrayContainsComparator.php;f11;10;5;13;;;;vpos;;v;;r;;d4,11;;b1,0;;mhaystack;;p">
</treenode>
<treenode node="arrayIntersectRecursive;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ArrayContainsComparator.php;f12;38;5;48;;;;vpos;;varray;;r&#10;Definition&#10;    arrayIntersectRecursive($arr1, $arr2)&#10;&#10;Description&#10;      author nleippe integr8ted.com&#10;&#10;Parameters:&#10;    mixed $arr1&#10;    mixed $arr2&#10;&#10;Return:&#10;   |bool;;d4,39;;b3,0;;mmixed $arr1;;pmixed $arr2;;p">
</treenode>
<treenode node="arrayIsSequential;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ArrayContainsComparator.php;f12;57;5;60;;;;vpos;;vbool;;r&#10;Definition&#10;    arrayIsSequential(array $array)&#10;&#10;Description&#10;     This array has sequential keys?&#10;&#10;Parameters:&#10;    array $array;;d4,58;;b3,0;;marray $array;;p">
</treenode>
<treenode node="associativeArrayIntersect;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ArrayContainsComparator.php;f12;103;5;133;;;;vpos;;varray;;r&#10;Definition&#10;    associativeArrayIntersect(array $arr1, array $arr2)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    array $arr1&#10;    array $arr2&#10;&#10;Return:&#10;   |bool|null;;d4,104;;b3,0;;marray $arr1;;parray $arr2;;p">
</treenode>
<treenode node="containsArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ArrayContainsComparator.php;f11;23;5;26;;;;vpos;;v;;r;;d4,24;;b1,0;;mneedle;;p">
</treenode>
<treenode node="getHaystack;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ArrayContainsComparator.php;f11;18;5;21;;;;vpos;;varray;;r&#10;Definition&#10;    getHaystack()&#10;&#10;Description&#10;     ;;d4,19;;b1,0;;m">
</treenode>
<treenode node="isEqualValue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ArrayContainsComparator.php;f12;135;5;146;;;;vpos;;v;;r;;d4,136;;b3,0;;mval1;;pval2;;p">
</treenode>
<treenode node="sequentialArrayIntersect;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ArrayContainsComparator.php;f12;67;5;95;;;;vpos;;varray;;r&#10;Definition&#10;    sequentialArrayIntersect(array $arr1, array $arr2)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    array $arr1&#10;    array $arr2;;d4,68;;b3,0;;marray $arr1;;parray $arr2;;p">
</treenode>
</treenode>
<treenode node="ArrayKeywords;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f0;44;1;199;;;;vpos;;vKeywordsInterface;;c;;r&#10;Definition&#10;    class ArrayKeywords implements KeywordsInterface&#10;&#10;Description&#10;     Array initializable keywords holder.;;d0,45;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;55;5;58;;;;vpos;;v;;r&#10;Definition&#10;    __construct(array $keywords)&#10;&#10;Description&#10;     Initializes holder with keywords.&#10;&#10;Parameters:&#10;    array $keywords - Keywords array;;d4,56;;b1,0;;marray $keywords;;p">
</treenode>
<treenode node="getAndKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;159;5;162;;;;vpos;;vstring;;r&#10;Definition&#10;    getAndKeywords()&#10;&#10;Description&#10;     Returns And keywords (splitted by &quot;|&quot;).;;d4,160;;b1,0;;m">
</treenode>
<treenode node="getBackgroundKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;89;5;92;;;;vpos;;vstring;;r&#10;Definition&#10;    getBackgroundKeywords()&#10;&#10;Description&#10;     Returns Background keywords (splitted by &quot;|&quot;).;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getButKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;169;5;172;;;;vpos;;vstring;;r&#10;Definition&#10;    getButKeywords()&#10;&#10;Description&#10;     Returns But keywords (splitted by &quot;|&quot;).;;d4,170;;b1,0;;m">
</treenode>
<treenode node="getExamplesKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;119;5;122;;;;vpos;;vstring;;r&#10;Definition&#10;    getExamplesKeywords()&#10;&#10;Description&#10;     Returns Examples keywords (splitted by &quot;|&quot;).;;d4,120;;b1,0;;m">
</treenode>
<treenode node="getFeatureKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getFeatureKeywords()&#10;&#10;Description&#10;     Returns Feature keywords (splitted by &quot;|&quot;).;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getGivenKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;129;5;132;;;;vpos;;vstring;;r&#10;Definition&#10;    getGivenKeywords()&#10;&#10;Description&#10;     Returns Given keywords (splitted by &quot;|&quot;).;;d4,130;;b1,0;;m">
</treenode>
<treenode node="getOutlineKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;109;5;112;;;;vpos;;vstring;;r&#10;Definition&#10;    getOutlineKeywords()&#10;&#10;Description&#10;     Returns Scenario Outline keywords (splitted by &quot;|&quot;).;;d4,110;;b1,0;;m">
</treenode>
<treenode node="getScenarioKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;99;5;102;;;;vpos;;vstring;;r&#10;Definition&#10;    getScenarioKeywords()&#10;&#10;Description&#10;     Returns Scenario keywords (splitted by &quot;|&quot;).;;d4,100;;b1,0;;m">
</treenode>
<treenode node="getStepKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;179;5;198;;;;vpos;;vstring;;r&#10;Definition&#10;    getStepKeywords()&#10;&#10;Description&#10;     Returns all step keywords (Given, When, Then, And, But).;;d4,180;;b1,0;;m">
</treenode>
<treenode node="getThenKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;149;5;152;;;;vpos;;vstring;;r&#10;Definition&#10;    getThenKeywords()&#10;&#10;Description&#10;     Returns Then keywords (splitted by &quot;|&quot;).;;d4,150;;b1,0;;m">
</treenode>
<treenode node="getWhenKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;139;5;142;;;;vpos;;vstring;;r&#10;Definition&#10;    getWhenKeywords()&#10;&#10;Description&#10;     Returns When keywords (splitted by &quot;|&quot;).;;d4,140;;b1,0;;m">
</treenode>
<treenode node="setLanguage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\ArrayKeywords.php;f11;65;5;72;;;;vpos;;v;;r&#10;Definition&#10;    setLanguage($language)&#10;&#10;Description&#10;     Sets keywords holder language.&#10;&#10;Parameters:&#10;    string $language - Language name;;d4,66;;b1,0;;mstring $language;;p">
</treenode>
</treenode>
<treenode node="ArrayKeywordsTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\ArrayKeywordsTest.php;f0;7;1;47;;;;vpos;;vKeywordsTest;;c;;r;;d0,8;;b0,0;;m">
<treenode node="getKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\ArrayKeywordsTest.php;f14;9;5;12;;;;vpos;;v;;r;;d4,10;;b2,0;;m">
</treenode>
<treenode node="getKeywordsArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\ArrayKeywordsTest.php;f14;14;5;32;;;;vpos;;v;;r;;d4,15;;b2,0;;m">
</treenode>
<treenode node="getSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\ArrayKeywordsTest.php;f14;34;5;46;;;;vpos;;v;;r;;d4,35;;b2,0;;mkeywords;;ptext;;pline;;pkeywordType;;p">
</treenode>
</treenode>
<treenode node="ArrayLoader;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\ArrayLoader.php;f0;26;1;268;;;;vpos;;vLoaderInterface;;c;;r&#10;Definition&#10;    class ArrayLoader implements LoaderInterface&#10;&#10;Description&#10;     From-array loader.;;d0,27;;b0,0;;m">
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\ArrayLoader.php;f11;47;5;62;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    load($resource)&#10;&#10;Description&#10;     Loads features from provided resource.&#10;&#10;Parameters:&#10;    mixed $resource - Resource to load&#10;&#10;Return:&#10;   [];;d4,48;;b1,0;;mmixed $resource;;p">
</treenode>
<treenode node="loadBackgroundHash;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\ArrayLoader.php;f14;107;5;122;;;;vpos;;vBackgroundNode;;r&#10;Definition&#10;    loadBackgroundHash(array $hash)&#10;&#10;Description&#10;     Loads background from provided hash.&#10;&#10;Parameters:&#10;    array $hash - Background hash;;d4,108;;b2,0;;marray $hash;;p">
</treenode>
<treenode node="loadFeatureHash;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\ArrayLoader.php;f14;72;5;98;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    loadFeatureHash(array $hash, $line = 0)&#10;&#10;Description&#10;     Loads feature from provided feature hash.&#10;&#10;Parameters:&#10;    array $hash - Feature hash&#10;    integer $line;;d4,73;;b2,0;;marray $hash;;pinteger $line;;p">
</treenode>
<treenode node="loadOutlineHash;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\ArrayLoader.php;f14;158;5;184;;;;vpos;;vOutlineNode;;r&#10;Definition&#10;    loadOutlineHash(array $hash, $line = 0)&#10;&#10;Description&#10;     Loads outline from provided outline hash.&#10;&#10;Parameters:&#10;    array $hash - Outline hash&#10;    integer $line - Outline definition line;;d4,159;;b2,0;;marray $hash;;pinteger $line;;p">
</treenode>
<treenode node="loadPyStringHash;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\ArrayLoader.php;f14;257;5;267;;;;vpos;;vPyStringNode;;r&#10;Definition&#10;    loadPyStringHash(array $hash, $line = 0)&#10;&#10;Description&#10;     Loads PyString from provided hash.&#10;&#10;Parameters:&#10;    array $hash - PyString hash&#10;    integer $line;;d4,258;;b2,0;;marray $hash;;pinteger $line;;p">
</treenode>
<treenode node="loadScenarioHash;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\ArrayLoader.php;f14;132;5;148;;;;vpos;;vScenarioNode;;r&#10;Definition&#10;    loadScenarioHash(array $hash, $line = 0)&#10;&#10;Description&#10;     Loads scenario from provided scenario hash.&#10;&#10;Parameters:&#10;    array $hash - Scenario hash&#10;    integer $line - Scenario definition line;;d4,133;;b2,0;;marray $hash;;pinteger $line;;p">
</treenode>
<treenode node="loadStepHash;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\ArrayLoader.php;f14;211;5;235;;;;vpos;;vStepNode;;r&#10;Definition&#10;    loadStepHash(array $hash, $line = 0)&#10;&#10;Description&#10;     Loads step from provided hash.&#10;&#10;Parameters:&#10;    array $hash - Step hash&#10;    integer $line - Step definition line;;d4,212;;b2,0;;marray $hash;;pinteger $line;;p">
</treenode>
<treenode node="loadStepsHash;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\ArrayLoader.php;f12;193;5;201;;;;vpos;;vStepNode;;r&#10;Definition&#10;    loadStepsHash(array $hash)&#10;&#10;Description&#10;     Loads steps from provided hash.&#10;&#10;Parameters:&#10;    array $hash&#10;&#10;Return:&#10;   [];;d4,194;;b3,0;;marray $hash;;p">
</treenode>
<treenode node="loadTableHash;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\ArrayLoader.php;f14;244;5;247;;;;vpos;;vTableNode;;r&#10;Definition&#10;    loadTableHash(array $hash)&#10;&#10;Description&#10;     Loads table from provided hash.&#10;&#10;Parameters:&#10;    array $hash - Table hash;;d4,245;;b2,0;;marray $hash;;p">
</treenode>
<treenode node="supports;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\ArrayLoader.php;f11;35;5;38;;;;vpos;;vBoolean;;r&#10;Definition&#10;    supports($resource)&#10;&#10;Description&#10;     Checks if current loader supports provided resource.&#10;&#10;Parameters:&#10;    mixed $resource - Resource to load;;d4,36;;b1,0;;mmixed $resource;;p">
</treenode>
</treenode>
<treenode node="ArrayLoaderTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\ArrayLoaderTest.php;f0;6;1;378;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,7;;b0,0;;m">
<treenode node="setUp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\ArrayLoaderTest.php;f14;10;5;13;;;;vpos;;v;;r;;d4,11;;b2,0;;m">
</treenode>
<treenode node="testLoadBackground;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\ArrayLoaderTest.php;f11;184;5;208;;;;vpos;;v;;r;;d4,185;;b1,0;;m">
</treenode>
<treenode node="testLoadEmpty;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\ArrayLoaderTest.php;f11;26;5;29;;;;vpos;;v;;r;;d4,27;;b1,0;;m">
</treenode>
<treenode node="testLoadFeatures;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\ArrayLoaderTest.php;f11;31;5;62;;;;vpos;;v;;r;;d4,32;;b1,0;;m">
</treenode>
<treenode node="testLoadOutline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\ArrayLoaderTest.php;f11;109;5;145;;;;vpos;;v;;r;;d4,110;;b1,0;;m">
</treenode>
<treenode node="testLoadScenarios;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\ArrayLoaderTest.php;f11;64;5;107;;;;vpos;;v;;r;;d4,65;;b1,0;;m">
</treenode>
<treenode node="testLoadStepArguments;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\ArrayLoaderTest.php;f11;290;5;365;;;;vpos;;v;;r;;d4,291;;b1,0;;m">
</treenode>
<treenode node="testLoadSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\ArrayLoaderTest.php;f11;210;5;288;;;;vpos;;v;;r;;d4,211;;b1,0;;m">
</treenode>
<treenode node="testOutlineExamples;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\ArrayLoaderTest.php;f11;147;5;182;;;;vpos;;v;;r;;d4,148;;b1,0;;m">
</treenode>
<treenode node="testSingleFeatureArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\ArrayLoaderTest.php;f11;367;5;377;;;;vpos;;v;;r;;d4,368;;b1,0;;m">
</treenode>
<treenode node="testSupports;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\ArrayLoaderTest.php;f11;15;5;24;;;;vpos;;v;;r;;d4,16;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Assertion;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Assertion.php;f0;5;1;7;;;;vpos;;vCodeceptionStep;;c;;r;;d0,6;;b0,0;;m">
</treenode>
<treenode node="AssertionCounter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\AssertionCounter.php;f0;3;1;21;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="assertionCounterEnd;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\AssertionCounter.php;f14;17;5;20;;;;vpos;;v;;r;;d4,18;;b2,0;;m">
</treenode>
<treenode node="assertionCounterStart;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\AssertionCounter.php;f14;12;5;15;;;;vpos;;v;;r;;d4,13;;b2,0;;m">
</treenode>
<treenode node="getNumAssertions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\AssertionCounter.php;f11;7;5;10;;;;vpos;;v;;r;;d4,8;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Asserts;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f0;3;1;439;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="assert;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;5;5;19;;;;vpos;;v;;r;;d4,6;;b2,0;;marguments;;pnot;;p">
</treenode>
<treenode node="assertArrayHasKey;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;362;5;365;;;;vpos;;v;;r&#10;Definition&#10;    assertArrayHasKey($key, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $key&#10;     $actual&#10;     $description;;d4,363;;b2,0;;m $key;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertArrayNotHasKey;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;372;5;375;;;;vpos;;v;;r&#10;Definition&#10;    assertArrayNotHasKey($key, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $key&#10;     $actual&#10;     $description;;d4,373;;b2,0;;m $key;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertArraySubset;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;385;5;388;;;;vpos;;v;;r&#10;Definition&#10;    assertArraySubset($subset, $array, $strict = false, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that array contains subset.&#10;&#10;Parameters:&#10;    array $subset&#10;    array $array&#10;    bool $strict&#10;    string $message;;d4,386;;b2,0;;marray $subset;;parray $array;;pbool $strict;;pstring $message;;p">
</treenode>
<treenode node="assertContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;148;5;151;;;;vpos;;v;;r&#10;Definition&#10;    assertContains($needle, $haystack, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that haystack contains needle&#10;&#10;Parameters:&#10;     $needle&#10;     $haystack&#10;    string $message;;d4,149;;b2,0;;m $needle;;p $haystack;;pstring $message;;p">
</treenode>
<treenode node="assertCount;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;395;5;398;;;;vpos;;v;;r&#10;Definition&#10;    assertCount($expectedCount, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $expectedCount&#10;     $actual&#10;     $description;;d4,396;;b2,0;;m $expectedCount;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertEmpty;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;220;5;223;;;;vpos;;v;;r&#10;Definition&#10;    assertEmpty($actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that variable is empty.&#10;&#10;Parameters:&#10;     $actual&#10;    string $message;;d4,221;;b2,0;;m $actual;;pstring $message;;p">
</treenode>
<treenode node="assertEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;34;5;37;;;;vpos;;v;;r&#10;Definition&#10;    assertEquals($expected, $actual, $message = &apos;&apos;, $delta = 0.0)&#10;&#10;Description&#10;     Checks that two variables are equal.&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message&#10;    float $delta;;d4,35;;b2,0;;m $expected;;p $actual;;pstring $message;;pfloat $delta;;p">
</treenode>
<treenode node="assertFalse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;275;5;278;;;;vpos;;v;;r&#10;Definition&#10;    assertFalse($condition, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that condition is negative.&#10;&#10;Parameters:&#10;     $condition&#10;    string $message;;d4,276;;b2,0;;m $condition;;pstring $message;;p">
</treenode>
<treenode node="assertFileExists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;311;5;314;;;;vpos;;v;;r&#10;Definition&#10;    assertFileExists($filename, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks if file exists&#10;&#10;Parameters:&#10;    string $filename&#10;    string $message;;d4,312;;b2,0;;mstring $filename;;pstring $message;;p">
</treenode>
<treenode node="assertFileNotExists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;323;5;326;;;;vpos;;v;;r&#10;Definition&#10;    assertFileNotExists($filename, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks if file doesn&apos;t exist&#10;&#10;Parameters:&#10;    string $filename&#10;    string $message;;d4,324;;b2,0;;mstring $filename;;pstring $message;;p">
</treenode>
<treenode node="assertGreaterOrEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;333;5;336;;;;vpos;;v;;r&#10;Definition&#10;    assertGreaterOrEquals($expected, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;     $description;;d4,334;;b2,0;;m $expected;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertGreaterThan;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;83;5;86;;;;vpos;;v;;r&#10;Definition&#10;    assertGreaterThan($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that actual is greater than expected&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message;;d4,84;;b2,0;;m $expected;;p $actual;;pstring $message;;p">
</treenode>
<treenode node="assertGreaterThanOrEqual;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;103;5;106;;;;vpos;;v;;r&#10;Definition&#10;    assertGreaterThanOrEqual($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that actual is greater or equal than expected&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message;;d4,104;;b2,0;;m $expected;;p $actual;;pstring $message;;p">
</treenode>
<treenode node="assertGreaterThen;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;91;5;94;;;;vpos;;v;;r&#10;Definition&#10;    assertGreaterThen($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;      deprecated;;d4,92;;b2,0;;mexpected;;pactual;;pmessage;;p">
</treenode>
<treenode node="assertGreaterThenOrEqual;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;111;5;114;;;;vpos;;v;;r&#10;Definition&#10;    assertGreaterThenOrEqual($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;      deprecated;;d4,112;;b2,0;;mexpected;;pactual;;pmessage;;p">
</treenode>
<treenode node="assertInstanceOf;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;405;5;408;;;;vpos;;v;;r&#10;Definition&#10;    assertInstanceOf($class, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $class&#10;     $actual&#10;     $description;;d4,406;;b2,0;;m $class;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertInternalType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;425;5;428;;;;vpos;;v;;r&#10;Definition&#10;    assertInternalType($type, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $type&#10;     $actual&#10;     $description;;d4,426;;b2,0;;m $type;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertIsEmpty;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;352;5;355;;;;vpos;;v;;r&#10;Definition&#10;    assertIsEmpty($actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $actual&#10;     $description;;d4,353;;b2,0;;m $actual;;p $description;;p">
</treenode>
<treenode node="assertLessOrEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;343;5;346;;;;vpos;;v;;r&#10;Definition&#10;    assertLessOrEquals($expected, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;     $description;;d4,344;;b2,0;;m $expected;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertLessThan;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;123;5;126;;;;vpos;;v;;r&#10;Definition&#10;    assertLessThan($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that actual is less than expected&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message;;d4,124;;b2,0;;m $expected;;p $actual;;pstring $message;;p">
</treenode>
<treenode node="assertLessThanOrEqual;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;135;5;138;;;;vpos;;v;;r&#10;Definition&#10;    assertLessThanOrEqual($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that actual is less or equal than expected&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message;;d4,136;;b2,0;;m $expected;;p $actual;;pstring $message;;p">
</treenode>
<treenode node="assertNot;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;21;5;24;;;;vpos;;v;;r;;d4,22;;b2,0;;marguments;;p">
</treenode>
<treenode node="assertNotContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;160;5;163;;;;vpos;;v;;r&#10;Definition&#10;    assertNotContains($needle, $haystack, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that haystack doesn&apos;t contain needle.&#10;&#10;Parameters:&#10;     $needle&#10;     $haystack&#10;    string $message;;d4,161;;b2,0;;m $needle;;p $haystack;;pstring $message;;p">
</treenode>
<treenode node="assertNotEmpty;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;231;5;234;;;;vpos;;v;;r&#10;Definition&#10;    assertNotEmpty($actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that variable is not empty.&#10;&#10;Parameters:&#10;     $actual&#10;    string $message;;d4,232;;b2,0;;m $actual;;pstring $message;;p">
</treenode>
<treenode node="assertNotEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;47;5;50;;;;vpos;;v;;r&#10;Definition&#10;    assertNotEquals($expected, $actual, $message = &apos;&apos;, $delta = 0.0)&#10;&#10;Description&#10;     Checks that two variables are not equal&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message&#10;    float $delta;;d4,48;;b2,0;;m $expected;;p $actual;;pstring $message;;pfloat $delta;;p">
</treenode>
<treenode node="assertNotInstanceOf;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;415;5;418;;;;vpos;;v;;r&#10;Definition&#10;    assertNotInstanceOf($class, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $class&#10;     $actual&#10;     $description;;d4,416;;b2,0;;m $class;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertNotNull;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;253;5;256;;;;vpos;;v;;r&#10;Definition&#10;    assertNotNull($actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that variable is not NULL&#10;&#10;Parameters:&#10;     $actual&#10;    string $message;;d4,254;;b2,0;;m $actual;;pstring $message;;p">
</treenode>
<treenode node="assertNotRegExp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;184;5;187;;;;vpos;;v;;r&#10;Definition&#10;    assertNotRegExp($pattern, $string, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that string not match with pattern&#10;&#10;Parameters:&#10;    string $pattern&#10;    string $string&#10;    string $message;;d4,185;;b2,0;;mstring $pattern;;pstring $string;;pstring $message;;p">
</treenode>
<treenode node="assertNotSame;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;71;5;74;;;;vpos;;v;;r&#10;Definition&#10;    assertNotSame($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that two variables are not same&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message;;d4,72;;b2,0;;m $expected;;p $actual;;pstring $message;;p">
</treenode>
<treenode node="assertNull;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;242;5;245;;;;vpos;;v;;r&#10;Definition&#10;    assertNull($actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that variable is NULL&#10;&#10;Parameters:&#10;     $actual&#10;    string $message;;d4,243;;b2,0;;m $actual;;pstring $message;;p">
</treenode>
<treenode node="assertRegExp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;172;5;175;;;;vpos;;v;;r&#10;Definition&#10;    assertRegExp($pattern, $string, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that string match with pattern&#10;&#10;Parameters:&#10;    string $pattern&#10;    string $string&#10;    string $message;;d4,173;;b2,0;;mstring $pattern;;pstring $string;;pstring $message;;p">
</treenode>
<treenode node="assertSame;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;59;5;62;;;;vpos;;v;;r&#10;Definition&#10;    assertSame($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that two variables are same&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message;;d4,60;;b2,0;;m $expected;;p $actual;;pstring $message;;p">
</treenode>
<treenode node="assertStringStartsNotWith;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;208;5;211;;;;vpos;;v;;r&#10;Definition&#10;    assertStringStartsNotWith($prefix, $string, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that a string doesn&apos;t start with the given prefix.&#10;&#10;Parameters:&#10;    string $prefix&#10;    string $string&#10;    string $message;;d4,209;;b2,0;;mstring $prefix;;pstring $string;;pstring $message;;p">
</treenode>
<treenode node="assertStringStartsWith;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;196;5;199;;;;vpos;;v;;r&#10;Definition&#10;    assertStringStartsWith($prefix, $string, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that a string starts with the given prefix.&#10;&#10;Parameters:&#10;    string $prefix&#10;    string $string&#10;    string $message;;d4,197;;b2,0;;mstring $prefix;;pstring $string;;pstring $message;;p">
</treenode>
<treenode node="assertThat;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;286;5;289;;;;vpos;;v;;r&#10;Definition&#10;    assertThat($haystack, $constraint, $message = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $haystack&#10;     $constraint&#10;    string $message;;d4,287;;b2,0;;m $haystack;;p $constraint;;pstring $message;;p">
</treenode>
<treenode node="assertThatItsNot;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;298;5;302;;;;vpos;;v;;r&#10;Definition&#10;    assertThatItsNot($haystack, $constraint, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that haystack doesn&apos;t attend&#10;&#10;Parameters:&#10;     $haystack&#10;     $constraint&#10;    string $message;;d4,299;;b2,0;;m $haystack;;p $constraint;;pstring $message;;p">
</treenode>
<treenode node="assertTrue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;264;5;267;;;;vpos;;v;;r&#10;Definition&#10;    assertTrue($condition, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that condition is positive.&#10;&#10;Parameters:&#10;     $condition&#10;    string $message;;d4,265;;b2,0;;m $condition;;pstring $message;;p">
</treenode>
<treenode node="fail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Asserts.php;f14;435;5;438;;;;vpos;;v;;r&#10;Definition&#10;    fail($message)&#10;&#10;Description&#10;     Fails the test with message.&#10;&#10;Parameters:&#10;     $message;;d4,436;;b2,0;;m $message;;p">
</treenode>
</treenode>
<treenode node="Asserts;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f0;8;1;471;;;;vpos;;vCodeceptionModule;;c;;r&#10;Definition&#10;    class Asserts extends CodeceptionModule&#10;&#10;Description&#10;     Special module for using asserts in your tests.;;d0,9;;b0,0;;m">
<treenode node="assertArrayHasKey;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;332;5;335;;;;vpos;;v;;r&#10;Definition&#10;    assertArrayHasKey($key, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $key&#10;     $actual&#10;     $description;;d4,333;;b1,0;;m $key;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertArrayNotHasKey;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;342;5;345;;;;vpos;;v;;r&#10;Definition&#10;    assertArrayNotHasKey($key, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $key&#10;     $actual&#10;     $description;;d4,343;;b1,0;;m $key;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertArraySubset;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;355;5;358;;;;vpos;;v;;r&#10;Definition&#10;    assertArraySubset($subset, $array, $strict = false, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that array contains subset.&#10;&#10;Parameters:&#10;    array $subset&#10;    array $array&#10;    bool $strict&#10;    string $message;;d4,356;;b1,0;;marray $subset;;parray $array;;pbool $strict;;pstring $message;;p">
</treenode>
<treenode node="assertContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;144;5;147;;;;vpos;;v;;r&#10;Definition&#10;    assertContains($needle, $haystack, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that haystack contains needle&#10;&#10;Parameters:&#10;     $needle&#10;     $haystack&#10;    string $message;;d4,145;;b1,0;;m $needle;;p $haystack;;pstring $message;;p">
</treenode>
<treenode node="assertCount;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;365;5;368;;;;vpos;;v;;r&#10;Definition&#10;    assertCount($expectedCount, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $expectedCount&#10;     $actual&#10;     $description;;d4,366;;b1,0;;m $expectedCount;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertEmpty;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;216;5;219;;;;vpos;;v;;r&#10;Definition&#10;    assertEmpty($actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that variable is empty.&#10;&#10;Parameters:&#10;     $actual&#10;    string $message;;d4,217;;b1,0;;m $actual;;pstring $message;;p">
</treenode>
<treenode node="assertEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;33;5;36;;;;vpos;;v;;r&#10;Definition&#10;    assertEquals($expected, $actual, $message = &apos;&apos;, $delta = 0.0)&#10;&#10;Description&#10;     Checks that two variables are equal. If you&apos;re comparing floating-point values, you can specify the optional &quot;delta&quot; parameter which dictates how great of a precision error are you willing to tolerate in order to consider the two values equal.&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message&#10;    float $delta;;d4,34;;b1,0;;m $expected;;p $actual;;pstring $message;;pfloat $delta;;p">
</treenode>
<treenode node="assertFalse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;271;5;274;;;;vpos;;v;;r&#10;Definition&#10;    assertFalse($condition, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that condition is negative.&#10;&#10;Parameters:&#10;     $condition&#10;    string $message;;d4,272;;b1,0;;m $condition;;pstring $message;;p">
</treenode>
<treenode node="assertFileExists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;282;5;285;;;;vpos;;v;;r&#10;Definition&#10;    assertFileExists($filename, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks if file exists&#10;&#10;Parameters:&#10;    string $filename&#10;    string $message;;d4,283;;b1,0;;mstring $filename;;pstring $message;;p">
</treenode>
<treenode node="assertFileNotExists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;293;5;296;;;;vpos;;v;;r&#10;Definition&#10;    assertFileNotExists($filename, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks if file doesn&apos;t exist&#10;&#10;Parameters:&#10;    string $filename&#10;    string $message;;d4,294;;b1,0;;mstring $filename;;pstring $message;;p">
</treenode>
<treenode node="assertGreaterOrEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;303;5;306;;;;vpos;;v;;r&#10;Definition&#10;    assertGreaterOrEquals($expected, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;     $description;;d4,304;;b1,0;;m $expected;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertGreaterThan;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;96;5;99;;;;vpos;;v;;r&#10;Definition&#10;    assertGreaterThan($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that actual is greater than expected&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message;;d4,97;;b1,0;;m $expected;;p $actual;;pstring $message;;p">
</treenode>
<treenode node="assertGreaterThanOrEqual;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;108;5;111;;;;vpos;;v;;r&#10;Definition&#10;    assertGreaterThanOrEqual($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that actual is greater or equal than expected&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message;;d4,109;;b1,0;;m $expected;;p $actual;;pstring $message;;p">
</treenode>
<treenode node="assertInstanceOf;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;375;5;378;;;;vpos;;v;;r&#10;Definition&#10;    assertInstanceOf($class, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $class&#10;     $actual&#10;     $description;;d4,376;;b1,0;;m $class;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertInternalType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;395;5;398;;;;vpos;;v;;r&#10;Definition&#10;    assertInternalType($type, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $type&#10;     $actual&#10;     $description;;d4,396;;b1,0;;m $type;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertIsEmpty;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;322;5;325;;;;vpos;;v;;r&#10;Definition&#10;    assertIsEmpty($actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $actual&#10;     $description;;d4,323;;b1,0;;m $actual;;p $description;;p">
</treenode>
<treenode node="assertLessOrEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;313;5;316;;;;vpos;;v;;r&#10;Definition&#10;    assertLessOrEquals($expected, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;     $description;;d4,314;;b1,0;;m $expected;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertLessThan;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;120;5;123;;;;vpos;;v;;r&#10;Definition&#10;    assertLessThan($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that actual is less than expected&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message;;d4,121;;b1,0;;m $expected;;p $actual;;pstring $message;;p">
</treenode>
<treenode node="assertLessThanOrEqual;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;132;5;135;;;;vpos;;v;;r&#10;Definition&#10;    assertLessThanOrEqual($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that actual is less or equal than expected&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message;;d4,133;;b1,0;;m $expected;;p $actual;;pstring $message;;p">
</treenode>
<treenode node="assertNotContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;156;5;159;;;;vpos;;v;;r&#10;Definition&#10;    assertNotContains($needle, $haystack, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that haystack doesn&apos;t contain needle.&#10;&#10;Parameters:&#10;     $needle&#10;     $haystack&#10;    string $message;;d4,157;;b1,0;;m $needle;;p $haystack;;pstring $message;;p">
</treenode>
<treenode node="assertNotEmpty;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;227;5;230;;;;vpos;;v;;r&#10;Definition&#10;    assertNotEmpty($actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that variable is not empty.&#10;&#10;Parameters:&#10;     $actual&#10;    string $message;;d4,228;;b1,0;;m $actual;;pstring $message;;p">
</treenode>
<treenode node="assertNotEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;60;5;63;;;;vpos;;v;;r&#10;Definition&#10;    assertNotEquals($expected, $actual, $message = &apos;&apos;, $delta = 0.0)&#10;&#10;Description&#10;     Checks that two variables are not equal. If you&apos;re comparing floating-point values, you can specify the optional &quot;delta&quot; parameter which dictates how great of a precision error are you willing to tolerate in order to consider the two values not equal.&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message&#10;    float $delta;;d4,61;;b1,0;;m $expected;;p $actual;;pstring $message;;pfloat $delta;;p">
</treenode>
<treenode node="assertNotInstanceOf;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;385;5;388;;;;vpos;;v;;r&#10;Definition&#10;    assertNotInstanceOf($class, $actual, $description = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $class&#10;     $actual&#10;     $description;;d4,386;;b1,0;;m $class;;p $actual;;p $description;;p">
</treenode>
<treenode node="assertNotNull;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;249;5;252;;;;vpos;;v;;r&#10;Definition&#10;    assertNotNull($actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that variable is not NULL&#10;&#10;Parameters:&#10;     $actual&#10;    string $message;;d4,250;;b1,0;;m $actual;;pstring $message;;p">
</treenode>
<treenode node="assertNotRegExp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;180;5;183;;;;vpos;;v;;r&#10;Definition&#10;    assertNotRegExp($pattern, $string, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that string not match with pattern&#10;&#10;Parameters:&#10;    string $pattern&#10;    string $string&#10;    string $message;;d4,181;;b1,0;;mstring $pattern;;pstring $string;;pstring $message;;p">
</treenode>
<treenode node="assertNotSame;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;84;5;87;;;;vpos;;v;;r&#10;Definition&#10;    assertNotSame($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that two variables are not same&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message;;d4,85;;b1,0;;m $expected;;p $actual;;pstring $message;;p">
</treenode>
<treenode node="assertNull;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;238;5;241;;;;vpos;;v;;r&#10;Definition&#10;    assertNull($actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that variable is NULL&#10;&#10;Parameters:&#10;     $actual&#10;    string $message;;d4,239;;b1,0;;m $actual;;pstring $message;;p">
</treenode>
<treenode node="assertRegExp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;168;5;171;;;;vpos;;v;;r&#10;Definition&#10;    assertRegExp($pattern, $string, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that string match with pattern&#10;&#10;Parameters:&#10;    string $pattern&#10;    string $string&#10;    string $message;;d4,169;;b1,0;;mstring $pattern;;pstring $string;;pstring $message;;p">
</treenode>
<treenode node="assertSame;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;72;5;75;;;;vpos;;v;;r&#10;Definition&#10;    assertSame($expected, $actual, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that two variables are same&#10;&#10;Parameters:&#10;     $expected&#10;     $actual&#10;    string $message;;d4,73;;b1,0;;m $expected;;p $actual;;pstring $message;;p">
</treenode>
<treenode node="assertStringStartsNotWith;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;204;5;207;;;;vpos;;v;;r&#10;Definition&#10;    assertStringStartsNotWith($prefix, $string, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that a string doesn&apos;t start with the given prefix.&#10;&#10;Parameters:&#10;    string $prefix&#10;    string $string&#10;    string $message;;d4,205;;b1,0;;mstring $prefix;;pstring $string;;pstring $message;;p">
</treenode>
<treenode node="assertStringStartsWith;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;192;5;195;;;;vpos;;v;;r&#10;Definition&#10;    assertStringStartsWith($prefix, $string, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that a string starts with the given prefix.&#10;&#10;Parameters:&#10;    string $prefix&#10;    string $string&#10;    string $message;;d4,193;;b1,0;;mstring $prefix;;pstring $string;;pstring $message;;p">
</treenode>
<treenode node="assertTrue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;260;5;263;;;;vpos;;v;;r&#10;Definition&#10;    assertTrue($condition, $message = &apos;&apos;)&#10;&#10;Description&#10;     Checks that condition is positive.&#10;&#10;Parameters:&#10;     $condition&#10;    string $message;;d4,261;;b1,0;;m $condition;;pstring $message;;p">
</treenode>
<treenode node="expectException;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;436;5;470;;;;vpos;;v;;r&#10;Definition&#10;    expectException($exception, $callback)&#10;&#10;Description&#10;     Handles and checks exception called inside callback function. Either exception class name or exception instance should be provided.&#10;&#10;Parameters:&#10;     $exception - string or \Exception&#10;     $callback;;d4,437;;b1,0;;m $exception;;p $callback;;p">
</treenode>
<treenode node="fail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Asserts.php;f11;405;5;408;;;;vpos;;v;;r&#10;Definition&#10;    fail($message)&#10;&#10;Description&#10;     Fails the test with message.&#10;&#10;Parameters:&#10;     $message;;d4,406;;b1,0;;m $message;;p">
</treenode>
</treenode>
<treenode node="Autoload;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Autoload.php;f0;7;1;163;;;;vpos;;v;;r&#10;Definition&#10;    class Autoload&#10;&#10;Description&#10;     Autoloader, which is fully compatible with PSR-4, and can be used to autoload your `Helper`, `Page`, and `Step` classes.;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Autoload.php;f12;17;5;19;;;;vpos;;v;;r;;d4,18;;b3,0;;m">
</treenode>
<treenode node="addNamespace;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Autoload.php;f18;44;5;69;;;;vpos;;vvoid;;r&#10;Definition&#10;    addNamespace($prefix, $base_dir, $prepend = false)&#10;&#10;Description&#10;     Adds a base directory for a namespace prefix.&#10;&#10;Parameters:&#10;    string $prefix - The namespace prefix&#10;    string $base_dir - A base directory for class files in the namespace&#10;    bool $prepend - If true, prepend the base directory to the stack instead of appending it;s;;d4,45;;b1,5;;mstring $prefix;;pstring $base_dir;;pbool $prepend;;p">
</treenode>
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Autoload.php;f18;87;5;126;;;;vpos;;v;;r;;d4,88;;b1,5;;mclass;;p">
</treenode>
<treenode node="loadMappedFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Autoload.php;f21;135;5;153;;;;vpos;;vmixed;;r&#10;Definition&#10;    loadMappedFile($prefix, $relative_class)&#10;&#10;Description&#10;     Load the mapped file for a namespace prefix and relative class.&#10;&#10;Parameters:&#10;    string $prefix - The namespace prefix&#10;    string $relative_class - The relative class name&#10;&#10;Return:&#10;   Boolean false if no mapped file can be loaded, or the name of the mapped file that was loaded;;d4,136;;b2,5;;mstring $prefix;;pstring $relative_class;;p">
</treenode>
<treenode node="register;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Autoload.php;f18;74;5;77;;;;vpos;;v;;r&#10;Definition&#10;    register($namespace, $suffix, $path)&#10;&#10;Description&#10;      deprecated Use self::addNamespace() instead.;;d4,75;;b1,5;;mnamespace;;psuffix;;ppath;;p">
</treenode>
<treenode node="registerSuffix;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Autoload.php;f18;82;5;85;;;;vpos;;v;;r&#10;Definition&#10;    registerSuffix($suffix, $path)&#10;&#10;Description&#10;      deprecated Use self::addNamespace() instead.;;d4,83;;b1,5;;msuffix;;ppath;;p">
</treenode>
<treenode node="requireFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Autoload.php;f21;155;5;162;;;;vpos;;v;;r;;d4,156;;b2,5;;mfile;;p">
</treenode>
</treenode>
<treenode node="AutoRebuild;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\AutoRebuild.php;f0;9;1;65;;;;vpos;;vEventSubscriberInterface;;cStaticEvents;;c;;r;;d0,10;;b0,0;;m">
<treenode node="generateActorActions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\AutoRebuild.php;f14;56;5;64;;;;vpos;;v;;r;;d4,57;;b2,0;;mactorActionsFile;;psettings;;p">
</treenode>
<treenode node="updateActor;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\AutoRebuild.php;f11;17;5;54;;;;vpos;;v;;r;;d4,18;;b1,0;;me;;p">
</treenode>
</treenode>
<treenode node="BackgroundNode;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\BackgroundNode.php;f0;17;1;111;;;;vpos;;vScenarioLikeInterface;;c;;r&#10;Definition&#10;    class BackgroundNode implements ScenarioLikeInterface&#10;&#10;Description&#10;     Represents Gherkin Background.;;d0,18;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\BackgroundNode.php;f11;44;5;50;;;;vpos;;v;;r&#10;Definition&#10;    __construct($title, array $steps, $keyword, $line)&#10;&#10;Description&#10;     Initializes background.&#10;&#10;Parameters:&#10;    null|string $title&#10;    StepNode[] $steps&#10;    string $keyword&#10;    integer $line;;d4,45;;b1,0;;mnull|string $title;;pStepNode[] $steps;;pstring $keyword;;pinteger $line;;p">
</treenode>
<treenode node="getKeyword;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\BackgroundNode.php;f11;97;5;100;;;;vpos;;vstring;;r&#10;Definition&#10;    getKeyword()&#10;&#10;Description&#10;     Returns background keyword.;;d4,98;;b1,0;;m">
</treenode>
<treenode node="getLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\BackgroundNode.php;f11;107;5;110;;;;vpos;;vinteger;;r&#10;Definition&#10;    getLine()&#10;&#10;Description&#10;     Returns background declaration line number.;;d4,108;;b1,0;;m">
</treenode>
<treenode node="getNodeType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\BackgroundNode.php;f11;57;5;60;;;;vpos;;vstring;;r&#10;Definition&#10;    getNodeType()&#10;&#10;Description&#10;     Returns node type string;;d4,58;;b1,0;;m">
</treenode>
<treenode node="getSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\BackgroundNode.php;f11;87;5;90;;;;vpos;;vStepNode;;r&#10;Definition&#10;    getSteps()&#10;&#10;Description&#10;     Returns background steps.&#10;&#10;Return:&#10;   [];;d4,88;;b1,0;;m">
</treenode>
<treenode node="getTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\BackgroundNode.php;f11;67;5;70;;;;vpos;;vnull;;r&#10;Definition&#10;    getTitle()&#10;&#10;Description&#10;     Returns background title.&#10;&#10;Return:&#10;   |string;;d4,68;;b1,0;;m">
</treenode>
<treenode node="hasSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\BackgroundNode.php;f11;77;5;80;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasSteps()&#10;&#10;Description&#10;     Checks if background has steps.;;d4,78;;b1,0;;m">
</treenode>
</treenode>
<treenode node="BaseMarkdownTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\BaseMarkdownTest.php;f9;16;1;114;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r&#10;Definition&#10;    class BaseMarkdownTest extends \PHPUnit_Framework_TestCase&#10;&#10;Description&#10;     Base class for all Test cases.;;d0,17;;b0,0;;m">
<treenode node="createMarkdown;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\BaseMarkdownTest.php;f17;25;42;25;;;;vpos;;vParser;;r&#10;Description&#10;     ;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="dataFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\BaseMarkdownTest.php;f8;93;2;113;;;;vpos;;v;;r;;d1,94;;b1,0;;m">
</treenode>
<treenode node="getDataPaths;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\BaseMarkdownTest.php;f17;20;40;20;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getTestData;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\BaseMarkdownTest.php;f8;85;2;91;;;;vpos;;v;;r;;d1,86;;b1,0;;mpath;;pfile;;p">
</treenode>
<treenode node="pregData;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\BaseMarkdownTest.php;f8;60;2;74;;;;vpos;;v;;r;;d1,61;;b1,0;;m">
</treenode>
<treenode node="testInvalidUtf8;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\BaseMarkdownTest.php;f8;53;2;58;;;;vpos;;v;;r;;d1,54;;b1,0;;m">
</treenode>
<treenode node="testParse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\BaseMarkdownTest.php;f8;30;2;38;;;;vpos;;v;;r&#10;Definition&#10;    testParse($path, $file)&#10;&#10;Description&#10;      dataProvider dataFiles;;d1,31;;b1,0;;mpath;;pfile;;p">
</treenode>
<treenode node="testPregReplaceR;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\BaseMarkdownTest.php;f8;79;2;83;;;;vpos;;v;;r&#10;Definition&#10;    testPregReplaceR($input, $exptected, $pexpect = null)&#10;&#10;Description&#10;      dataProvider pregData;;d1,80;;b1,0;;minput;;pexptected;;ppexpect;;p">
</treenode>
<treenode node="testUtf8;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\BaseMarkdownTest.php;f8;40;2;51;;;;vpos;;v;;r;;d1,41;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Beanstalk;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Beanstalk.php;f0;7;1;89;;;;vpos;;vQueue;;c;;r;;d0,8;;b0,0;;m">
<treenode node="addMessageToQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Beanstalk.php;f11;26;5;29;;;;vpos;;v;;r&#10;Definition&#10;    addMessageToQueue($message, $queue)&#10;&#10;Description&#10;     Post/Put a message on to the queue server&#10;&#10;Parameters:&#10;    string $message - Message Body to be send&#10;    string $queue - Queue Name;;d4,27;;b1,0;;mstring $message;;pstring $queue;;p">
</treenode>
<treenode node="clearQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Beanstalk.php;f11;47;5;52;;;;vpos;;v;;r;;d4,48;;b1,0;;mqueue;;p">
</treenode>
<treenode node="getDefaultConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Beanstalk.php;f11;85;5;88;;;;vpos;;v;;r;;d4,86;;b1,0;;m">
</treenode>
<treenode node="getMessagesCurrentCountOnQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Beanstalk.php;f11;71;5;78;;;;vpos;;vint;;r&#10;Definition&#10;    getMessagesCurrentCountOnQueue($queue)&#10;&#10;Description&#10;     Count the current number of messages on the queue.&#10;&#10;Parameters:&#10;     $queue - Queue Name&#10;&#10;Return:&#10;   Count;;d4,72;;b1,0;;m $queue;;p">
</treenode>
<treenode node="getMessagesTotalCountOnQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Beanstalk.php;f11;38;5;45;;;;vpos;;vint;;r&#10;Definition&#10;    getMessagesTotalCountOnQueue($queue)&#10;&#10;Description&#10;     Count the total number of messages on the queue.&#10;&#10;Parameters:&#10;     $queue - Queue Name&#10;&#10;Return:&#10;   Count;;d4,39;;b1,0;;m $queue;;p">
</treenode>
<treenode node="getQueues;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Beanstalk.php;f11;59;5;62;;;;vpos;;varray;;r&#10;Definition&#10;    getQueues()&#10;&#10;Description&#10;     Return a list of queues/tubes on the queueing server&#10;&#10;Return:&#10;   Array of Queues;;d4,60;;b1,0;;m">
</treenode>
<treenode node="getRequiredConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Beanstalk.php;f11;80;5;83;;;;vpos;;v;;r;;d4,81;;b1,0;;m">
</treenode>
<treenode node="openConnection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Beanstalk.php;f11;15;5;18;;;;vpos;;v;;r;;d4,16;;b1,0;;mconfig;;p">
</treenode>
</treenode>
<treenode node="BeforeAfterTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\BeforeAfterTest.php;f0;7;1;51;;;;vpos;;vEventSubscriberInterface;;cStaticEvents;;c;;r;;d0,8;;b0,0;;m">
<treenode node="afterClass;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\BeforeAfterTest.php;f11;36;5;39;;;;vpos;;v;;r;;d4,37;;b1,0;;me;;p">
</treenode>
<treenode node="beforeClass;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\BeforeAfterTest.php;f11;20;5;33;;;;vpos;;v;;r;;d4,21;;b1,0;;me;;p">
</treenode>
<treenode node="runHooks;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\BeforeAfterTest.php;f14;41;5;50;;;;vpos;;v;;r;;d4,42;;b2,0;;mhookName;;p">
</treenode>
</treenode>
<treenode node="Bootstrap;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Bootstrap.php;f0;7;1;161;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Bootstrap.php;f0;8;1;35;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Bootstrap.php;f0;23;1;56;;;;vpos;;vInitTemplate;;c;;r;;d0,8;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Bootstrap.php;f14;26;5;41;;;;vpos;;v;;r;;d4,27;;b2,0;;m">
</treenode>
<treenode node="createAcceptanceSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Bootstrap.php;f14;94;5;111;;;;vpos;;v;;r;;d4,95;;b2,0;;mactor;;p">
</treenode>
<treenode node="createDirs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Bootstrap.php;f14;64;5;73;;;;vpos;;v;;r;;d4,65;;b2,0;;m">
</treenode>
<treenode node="createFunctionalSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Bootstrap.php;f14;75;5;92;;;;vpos;;v;;r;;d4,76;;b2,0;;mactor;;p">
</treenode>
<treenode node="createGlobalConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Bootstrap.php;f11;129;5;151;;;;vpos;;v;;r;;d4,130;;b1,0;;m">
</treenode>
<treenode node="createSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Bootstrap.php;f14;154;5;160;;;;vpos;;v;;r;;d4,155;;b2,0;;msuite;;pactor;;pconfig;;p">
</treenode>
<treenode node="createUnitSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Bootstrap.php;f14;113;5;127;;;;vpos;;v;;r;;d4,114;;b2,0;;mactor;;p">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Bootstrap.php;f11;48;5;55;;;;vpos;;v;;r;;d4,49;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Bootstrap.php;f11;43;5;46;;;;vpos;;v;;r;;d4,44;;b1,0;;m">
</treenode>
<treenode node="loadBootstrap;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Bootstrap.php;f11;16;5;34;;;;vpos;;v;;r;;d4,17;;b1,0;;me;;p">
</treenode>
<treenode node="setup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Bootstrap.php;f11;15;5;62;;;;vpos;;v;;r;;d4,16;;b1,0;;m">
</treenode>
</treenode>
<treenode node="BootstrapCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\BootstrapCest.php;f0;1;1;81;;;;vpos;;v;;r;;d0,2;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\BootstrapCest.php;f11;6;5;11;;;;vpos;;v;;r;;d4,7;;b1,0;;mI;;p">
</treenode>
<treenode node="bootstrap;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\BootstrapCest.php;f11;13;5;18;;;;vpos;;v;;r;;d4,14;;b1,0;;mI;;p">
</treenode>
<treenode node="bootstrapEmpty;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\BootstrapCest.php;f11;43;5;48;;;;vpos;;v;;r;;d4,44;;b1,0;;mI;;p">
</treenode>
<treenode node="bootstrapFromInit;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\BootstrapCest.php;f11;50;5;54;;;;vpos;;v;;r;;d4,51;;b1,0;;mI;;p">
</treenode>
<treenode node="bootstrapFromInitUsingClassName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\BootstrapCest.php;f11;56;5;60;;;;vpos;;v;;r;;d4,57;;b1,0;;mI;;p">
</treenode>
<treenode node="bootstrapWithActor;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\BootstrapCest.php;f11;36;5;40;;;;vpos;;v;;r;;d4,37;;b1,0;;mI;;p">
</treenode>
<treenode node="bootstrapWithNamespace;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\BootstrapCest.php;f11;20;5;34;;;;vpos;;v;;r;;d4,21;;b1,0;;mI;;p">
</treenode>
<treenode node="checkFilesCreated;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\BootstrapCest.php;f14;62;5;79;;;;vpos;;v;;r;;d4,63;;b2,0;;mI;;p">
</treenode>
</treenode>
<treenode node="Build;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Build.php;f0;18;1;107;;;;vpos;;vCommand;;cConfig;;cFileSystem;;c;;r&#10;Definition&#10;    class Build extends Command&#10;&#10;Description&#10;     Generates Actor classes (initially Guy classes) from suite configs. Starting from Codeception 2.0 actor classes are auto-generated. Use this command to generate them manually.;;d0,19;;b0,0;;m">
<treenode node="buildActions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Build.php;f12;60;5;73;;;;vpos;;v;;r;;d4,61;;b3,0;;msettings;;p">
</treenode>
<treenode node="buildActor;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Build.php;f12;42;5;58;;;;vpos;;v;;r;;d4,43;;b3,0;;msettings;;p">
</treenode>
<treenode node="buildActorsForConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Build.php;f14;95;5;106;;;;vpos;;v;;r;;d4,96;;b2,0;;mconfigFile;;p">
</treenode>
<treenode node="buildSuiteActors;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Build.php;f12;75;5;93;;;;vpos;;v;;r;;d4,76;;b3,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Build.php;f14;36;5;40;;;;vpos;;v;;r;;d4,37;;b2,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Build.php;f11;30;5;33;;;;vpos;;v;;r;;d4,31;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CachedArrayKeywords;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\CachedArrayKeywords.php;f0;19;1;30;;;;vpos;;vArrayKeywords;;c;;r&#10;Definition&#10;    class CachedArrayKeywords extends ArrayKeywords&#10;&#10;Description&#10;     File initializable keywords holder.;;d0,20;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\CachedArrayKeywords.php;f11;26;5;29;;;;vpos;;v;;r&#10;Definition&#10;    __construct($file)&#10;&#10;Description&#10;     Initializes holder with file.&#10;&#10;Parameters:&#10;    string $file - Cached array path;;d4,27;;b1,0;;mstring $file;;p">
</treenode>
</treenode>
<treenode node="CachedArrayKeywordsTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\CachedArrayKeywordsTest.php;f0;7;1;36;;;;vpos;;vKeywordsTest;;c;;r;;d0,8;;b0,0;;m">
<treenode node="getKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\CachedArrayKeywordsTest.php;f14;9;5;12;;;;vpos;;v;;r;;d4,10;;b2,0;;m">
</treenode>
<treenode node="getKeywordsArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\CachedArrayKeywordsTest.php;f14;14;5;17;;;;vpos;;v;;r;;d4,15;;b2,0;;m">
</treenode>
<treenode node="getSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\CachedArrayKeywordsTest.php;f14;19;5;35;;;;vpos;;v;;r;;d4,20;;b2,0;;mkeywords;;ptext;;pline;;pkeywordType;;p">
</treenode>
</treenode>
<treenode node="CacheException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Exception\CacheException.php;f0;19;1;21;;;;vpos;;vRuntimeException;;cException;;c;;r&#10;Definition&#10;    class CacheException extends RuntimeException implements Exception&#10;&#10;Description&#10;     Cache exception.;;d0,20;;b0,0;;m">
</treenode>
<treenode node="Cept;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Cept.php;f0;6;1;28;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cept.php;f0;11;1;83;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Cept.php;f0;6;1;40;;;;vpos;;vLoaderInterface;;c;;r;;d0,7;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cept.php;f11;20;5;28;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Cept.php;f11;18;5;21;;;;vpos;;v;;r;;d4,21;;b1,0;;mname;;pfile;;p">
</treenode>
<treenode node="getDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cept.php;f11;79;5;82;;;;vpos;;v;;r;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getParser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cept.php;f14;74;5;77;;;;vpos;;vParser;;r&#10;Definition&#10;    getParser()&#10;&#10;Description&#10;     ;;d4,75;;b2,0;;m">
</treenode>
<treenode node="getPattern;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Cept.php;f11;10;5;13;;;;vpos;;v;;r;;d4,11;;b1,0;;m">
</treenode>
<treenode node="getReportFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cept.php;f11;62;5;69;;;;vpos;;v;;r;;d4,63;;b1,0;;m">
</treenode>
<treenode node="getSignature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cept.php;f11;47;5;50;;;;vpos;;v;;r;;d4,48;;b1,0;;m">
</treenode>
<treenode node="getSourceCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cept.php;f11;57;5;60;;;;vpos;;v;;r;;d4,58;;b1,0;;m">
</treenode>
<treenode node="getTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Cept.php;f11;24;5;27;;;;vpos;;v;;r;;d4,25;;b1,0;;m">
</treenode>
<treenode node="loadTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Cept.php;f4;15;5;22;;;;vpos;;v;;r;;d4,16;;b0,0;;mfile;;p">
</treenode>
<treenode node="preload;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cept.php;f11;30;5;33;;;;vpos;;v;;r;;d4,31;;b1,0;;m">
</treenode>
<treenode node="produce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Cept.php;f11;23;5;39;;;;vpos;;v;;r;;d4,24;;b1,0;;m">
</treenode>
<treenode node="test;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cept.php;f11;35;5;45;;;;vpos;;v;;r;;d4,36;;b1,0;;m">
</treenode>
<treenode node="toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cept.php;f11;52;5;55;;;;vpos;;v;;r;;d4,53;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Cest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Cest.php;f0;9;1;101;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f0;15;1;217;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Cest.php;f0;7;1;68;;;;vpos;;vLoaderInterface;;c;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;29;5;39;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Cest.php;f11;37;5;41;;;;vpos;;v;;r;;d4,30;;b1,0;;mtestClass;;pmethodName;;pfileName;;p">
</treenode>
<treenode node="executeAfterMethods;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f14;109;5;117;;;;vpos;;v;;r;;d4,110;;b2,0;;mtestMethod;;pI;;p">
</treenode>
<treenode node="executeBeforeMethods;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f14;100;5;108;;;;vpos;;v;;r;;d4,101;;b2,0;;mtestMethod;;pI;;p">
</treenode>
<treenode node="executeContextMethod;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f14;119;5;130;;;;vpos;;v;;r;;d4,120;;b2,0;;mcontext;;pI;;p">
</treenode>
<treenode node="executeHook;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f14;93;5;98;;;;vpos;;v;;r;;d4,94;;b2,0;;mI;;phook;;p">
</treenode>
<treenode node="executeTestMethod;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f14;139;5;150;;;;vpos;;v;;r;;d4,140;;b2,0;;mI;;p">
</treenode>
<treenode node="getDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;190;5;200;;;;vpos;;v;;r;;d4,191;;b1,0;;m">
</treenode>
<treenode node="getLinesToBeCovered;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;202;5;208;;;;vpos;;v;;r;;d4,203;;b1,0;;m">
</treenode>
<treenode node="getLinesToBeUsed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;210;5;216;;;;vpos;;v;;r;;d4,211;;b1,0;;m">
</treenode>
<treenode node="getParser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f14;185;5;188;;;;vpos;;v;;r;;d4,186;;b2,0;;m">
</treenode>
<treenode node="getPattern;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Cest.php;f11;18;5;21;;;;vpos;;v;;r;;d4,19;;b1,0;;m">
</treenode>
<treenode node="getReportFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;175;5;183;;;;vpos;;varray;;r&#10;Definition&#10;    getReportFields()&#10;&#10;Description&#10;     ;;d4,176;;b1,0;;m">
</treenode>
<treenode node="getSignature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;157;5;160;;;;vpos;;v;;r;;d4,158;;b1,0;;m">
</treenode>
<treenode node="getSourceCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;56;5;63;;;;vpos;;v;;r;;d4,57;;b1,0;;m">
</treenode>
<treenode node="getSpecFromMethod;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;65;5;72;;;;vpos;;v;;r;;d4,66;;b1,0;;m">
</treenode>
<treenode node="getTestClass;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;162;5;165;;;;vpos;;v;;r;;d4,163;;b1,0;;m">
</treenode>
<treenode node="getTestMethod;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;167;5;170;;;;vpos;;v;;r;;d4,168;;b1,0;;m">
</treenode>
<treenode node="getTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Cest.php;f11;13;5;16;;;;vpos;;v;;r;;d4,14;;b1,0;;m">
</treenode>
<treenode node="invoke;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f14;132;5;138;;;;vpos;;v;;r;;d4,133;;b2,0;;mmethodName;;pcontext;;p">
</treenode>
<treenode node="loadTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Cest.php;f11;23;5;100;;;;vpos;;v;;r;;d4,24;;b1,0;;mfile;;p">
</treenode>
<treenode node="preload;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;41;5;54;;;;vpos;;v;;r;;d4,42;;b1,0;;m">
</treenode>
<treenode node="produce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Cest.php;f11;43;5;67;;;;vpos;;v;;r;;d4,44;;b1,0;;m">
</treenode>
<treenode node="test;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;74;5;91;;;;vpos;;v;;r;;d4,75;;b1,0;;m">
</treenode>
<treenode node="toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Cest.php;f11;152;5;155;;;;vpos;;v;;r;;d4,153;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Classname;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Shared\Classname.php;f0;3;1;10;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="removeSuffix;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Shared\Classname.php;f14;5;5;9;;;;vpos;;v;;r;;d4,6;;b2,0;;mclassname;;psuffix;;p">
</treenode>
</treenode>
<treenode node="Clean;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Clean.php;f0;15;1;44;;;;vpos;;vCommand;;cConfig;;c;;r&#10;Definition&#10;    class Clean extends Command&#10;&#10;Description&#10;     Recursively cleans `output` directory and generated code.;;d0,16;;b0,0;;m">
<treenode node="cleanProjectsRecursively;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Clean.php;f12;31;5;43;;;;vpos;;v;;r;;d4,32;;b3,0;;moutput;;pprojectDir;;p">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Clean.php;f14;24;5;29;;;;vpos;;v;;r;;d4,25;;b2,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Clean.php;f11;19;5;22;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Cli;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Cli.php;f0;16;1;116;;;;vpos;;vCodeceptionModule;;c;;r&#10;Definition&#10;    class Cli extends CodeceptionModule&#10;&#10;Description&#10;     Wrapper for basic shell commands and shell output;;d0,17;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Cli.php;f11;22;5;25;;;;vpos;;v;;r;;d4,23;;b1,0;;mtest;;p">
</treenode>
<treenode node="dontSeeInShellOutput;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Cli.php;f11;73;5;77;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeInShellOutput($text)&#10;&#10;Description&#10;     Checks that output from latest command doesn&apos;t contain text&#10;&#10;Parameters:&#10;     $text;;d4,74;;b1,0;;m $text;;p">
</treenode>
<treenode node="runShellCommand;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Cli.php;f11;42;5;55;;;;vpos;;v;;r&#10;Definition&#10;    runShellCommand($command, $failNonZero = true)&#10;&#10;Description&#10;     Executes a shell command. Fails If exit code is &gt; 0. You can disable this by setting second parameter to false&#10;&#10;Parameters:&#10;     $command&#10;    bool $failNonZero;;d4,43;;b1,0;;m $command;;pbool $failNonZero;;p">
</treenode>
<treenode node="seeInShellOutput;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Cli.php;f11;62;5;65;;;;vpos;;v;;r&#10;Definition&#10;    seeInShellOutput($text)&#10;&#10;Description&#10;     Checks that output from last executed command contains text&#10;&#10;Parameters:&#10;     $text;;d4,63;;b1,0;;m $text;;p">
</treenode>
<treenode node="seeResultCodeIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Cli.php;f11;97;5;100;;;;vpos;;v;;r&#10;Definition&#10;    seeResultCodeIs($code)&#10;&#10;Description&#10;     Checks result code&#10;&#10;Parameters:&#10;     $code;;d4,98;;b1,0;;m $code;;p">
</treenode>
<treenode node="seeResultCodeIsNot;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Cli.php;f11;112;5;115;;;;vpos;;v;;r&#10;Definition&#10;    seeResultCodeIsNot($code)&#10;&#10;Description&#10;     Checks result code&#10;&#10;Parameters:&#10;     $code;;d4,113;;b1,0;;m $code;;p">
</treenode>
<treenode node="seeShellOutputMatches;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Cli.php;f11;82;5;85;;;;vpos;;v;;r&#10;Definition&#10;    seeShellOutputMatches($regex)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $regex;;d4,83;;b1,0;;m $regex;;p">
</treenode>
</treenode>
<treenode node="Codecept;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f0;7;1;235;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
<treenode node="VERSION;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f9;9;17;9;;;;vpos;;v;;r&quot;2.4.1&quot;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f11;73;5;88;;;;vpos;;v;;r;;d4,74;;b1,0;;moptions;;p">
</treenode>
<treenode node="getDispatcher;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f11;224;5;227;;;;vpos;;vEventDispatcher;;r&#10;Definition&#10;    getDispatcher()&#10;&#10;Description&#10;     ;;d4,225;;b1,0;;m">
</treenode>
<treenode node="getOptions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f11;216;5;219;;;;vpos;;v;;r;;d4,217;;b1,0;;m">
</treenode>
<treenode node="getResult;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f11;211;5;214;;;;vpos;;v;;r&#10;Definition&#10;    getResult()&#10;&#10;Description&#10;      \PHPUnit\Framework\TestResult;;d4,212;;b1,0;;m">
</treenode>
<treenode node="mergeOptions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f14;97;5;102;;;;vpos;;varray;;r&#10;Definition&#10;    mergeOptions($options)&#10;&#10;Description&#10;     Merges given options with default values and current configuration&#10;&#10;Parameters:&#10;    array $options - options;;d4,98;;b2,0;;marray $options;;p">
</treenode>
<treenode node="printResult;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f11;197;5;206;;;;vpos;;v;;r;;d4,198;;b1,0;;m">
</treenode>
<treenode node="registerPHPUnitListeners;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f14;104;5;108;;;;vpos;;v;;r;;d4,105;;b2,0;;m">
</treenode>
<treenode node="registerPrinter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f14;229;5;234;;;;vpos;;v;;r;;d4,230;;b2,0;;m">
</treenode>
<treenode node="registerSubscribers;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f11;110;5;140;;;;vpos;;v;;r;;d4,111;;b1,0;;m">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f11;142;5;181;;;;vpos;;v;;r;;d4,143;;b1,0;;msuite;;ptest;;pconfig;;p">
</treenode>
<treenode node="runSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f11;183;5;190;;;;vpos;;v;;r;;d4,184;;b1,0;;msettings;;psuite;;ptest;;p">
</treenode>
<treenode node="versionString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Codecept.php;f18;192;5;195;;;;vpos;;v;;r;;d4,193;;b1,5;;m">
</treenode>
</treenode>
<treenode node="CodeceptionYmlInTestsDirCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\CodeceptionYmlInTestsDirCest.php;f0;1;1;15;;;;vpos;;v;;r;;d0,2;;b0,0;;m">
<treenode node="runTestPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\CodeceptionYmlInTestsDirCest.php;f11;6;5;14;;;;vpos;;v;;r&#10;Definition&#10;    runTestPath(\CliGuy $I)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    CliGuy $I;;d4,7;;b1,0;;mCliGuy $I;;p">
</treenode>
</treenode>
<treenode node="CodeCoverage;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\CodeCoverage.php;f0;6;1;45;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="codeCoverageEnd;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\CodeCoverage.php;f11;22;5;44;;;;vpos;;v;;r;;d4,23;;b1,0;;mstatus;;ptime;;p">
</treenode>
<treenode node="codeCoverageStart;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\CodeCoverage.php;f11;13;5;20;;;;vpos;;v;;r;;d4,14;;b1,0;;m">
</treenode>
<treenode node="getTestResultObject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\CodeCoverage.php;f20;11;50;11;;;;vpos;;v;;r&#10;Description&#10;      \PHPUnit\Framework\TestResult;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="CodeTrait;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\CodeTrait.php;f0;12;1;44;;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\CodeTrait.php;f0;12;1;65;;;;vpos;;v;;r&#10;Definition&#10;    trait CodeTrait&#10;&#10;Description&#10;     Adds inline code elements;;d0,13;;b0,0;;m">
<treenode node="consumeCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\CodeTrait.php;f11;26;2;55;;;;vpos;;v;;r&#10;Definition&#10;    consumeCode($lines, $current)&#10;&#10;Description&#10;     Consume lines for a code block element;;d1,27;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="identifyCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\CodeTrait.php;f11;17;2;21;;;;vpos;;v;;r&#10;Definition&#10;    identifyCode($line)&#10;&#10;Description&#10;     identify a line as the beginning of a code block.;;d1,18;;b2,0;;mline;;p">
</treenode>
<treenode node="parseInlineCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\CodeTrait.php;f11;18;2;38;;;;vpos;;v;;r&#10;Definition&#10;    parseInlineCode($text)&#10;&#10;Description&#10;     Parses an inline code span `` ` ``.;;d1,19;;b2,0;;mtext;;p">
</treenode>
<treenode node="renderCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\CodeTrait.php;f11;60;2;64;;;;vpos;;v;;r&#10;Definition&#10;    renderCode($block)&#10;&#10;Description&#10;     Renders a code block;;d1,61;;b2,0;;mblock;;p">
</treenode>
<treenode node="renderInlineCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\CodeTrait.php;f11;40;2;43;;;;vpos;;v;;r;;d1,41;;b2,0;;mblock;;p">
</treenode>
</treenode>
<treenode node="Colorizer;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Colorizer.php;f0;5;1;36;;;;vpos;;v;;r;;d0,6;;b0,0;;m">
<treenode node="colorize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Colorizer.php;f11;11;5;35;;;;vpos;;vstring;;r&#10;Definition&#10;    colorize($string = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $string;;d4,12;;b1,0;;mstring $string;;p">
</treenode>
</treenode>
<treenode node="Comment;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Actor\Shared\Comment.php;f0;3;1;46;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="am;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Actor\Shared\Comment.php;f11;25;5;34;;;;vpos;;v;;r;;d4,26;;b1,0;;mrole;;p">
</treenode>
<treenode node="amGoingTo;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Actor\Shared\Comment.php;f11;20;5;23;;;;vpos;;v;;r;;d4,21;;b1,0;;margumentation;;p">
</treenode>
<treenode node="comment;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Actor\Shared\Comment.php;f11;41;5;45;;;;vpos;;v;;r;;d4,42;;b1,0;;mdescription;;p">
</treenode>
<treenode node="expect;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Actor\Shared\Comment.php;f11;15;5;18;;;;vpos;;v;;r;;d4,16;;b1,0;;mprediction;;p">
</treenode>
<treenode node="expectTo;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Actor\Shared\Comment.php;f11;10;5;13;;;;vpos;;v;;r;;d4,11;;b1,0;;mprediction;;p">
</treenode>
<treenode node="getScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Actor\Shared\Comment.php;f23;8;45;8;;;;vpos;;v;;r&#10;Description&#10;      \Codeception\Scenario;;d-1,-1;;b2,0;;m">
</treenode>
<treenode node="lookForwardTo;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Actor\Shared\Comment.php;f11;36;5;39;;;;vpos;;v;;r;;d4,37;;b1,0;;machieveValue;;p">
</treenode>
</treenode>
<treenode node="Comment;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Comment.php;f0;6;1;37;;;;vpos;;vCodeceptionStep;;c;;r;;d0,7;;b0,0;;m">
<treenode node="__toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Comment.php;f11;8;5;11;;;;vpos;;v;;r;;d4,9;;b1,0;;m">
</treenode>
<treenode node="getHtml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Comment.php;f11;18;5;21;;;;vpos;;v;;r;;d4,19;;b1,0;;mhighlightColor;;p">
</treenode>
<treenode node="getPhpCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Comment.php;f11;23;5;26;;;;vpos;;v;;r;;d4,24;;b1,0;;mmaxLength;;p">
</treenode>
<treenode node="getPrefix;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Comment.php;f11;33;5;36;;;;vpos;;v;;r;;d4,34;;b1,0;;m">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Comment.php;f11;28;5;31;;;;vpos;;v;;r;;d4,29;;b1,0;;mcontainer;;p">
</treenode>
<treenode node="toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Comment.php;f11;13;5;16;;;;vpos;;v;;r;;d4,14;;b1,0;;mmaxLength;;p">
</treenode>
</treenode>
<treenode node="Completion;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Completion.php;f0;17;1;83;;;;vpos;;vCompletionCommand;;c;;r;;d0,18;;b0,0;;m">
<treenode node="configureCompletion;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Completion.php;f14;19;5;59;;;;vpos;;v;;r;;d4,20;;b2,0;;mhandler;;p">
</treenode>
<treenode node="createDefinition;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Completion.php;f14;71;5;82;;;;vpos;;v;;r;;d4,72;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Completion.php;f14;61;5;69;;;;vpos;;v;;r;;d4,62;;b2,0;;minput;;poutput;;p">
</treenode>
</treenode>
<treenode node="CompletionFallback;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\CompletionFallback.php;f0;14;1;39;;;;vpos;;vCommand;;c;;r;;d0,15;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\CompletionFallback.php;f14;16;5;34;;;;vpos;;v;;r;;d4,17;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\CompletionFallback.php;f14;35;5;38;;;;vpos;;v;;r;;d4,36;;b2,0;;minput;;poutput;;p">
</treenode>
</treenode>
<treenode node="ComplexFilter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\ComplexFilter.php;f9;19;1;51;;;;vpos;;vComplexFilterInterface;;c;;r&#10;Definition&#10;    class ComplexFilter implements ComplexFilterInterface&#10;&#10;Description&#10;     Abstract filter class.;;d0,20;;b0,0;;m">
<treenode node="filterFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\ComplexFilter.php;f11;28;5;50;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    filterFeature(FeatureNode $feature)&#10;&#10;Description&#10;     Filters feature according to the filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature;;d4,29;;b1,0;;mFeatureNode $feature;;p">
</treenode>
</treenode>
<treenode node="Condition;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Condition.php;f0;5;1;7;;;;vpos;;vCodeceptionStep;;c;;r;;d0,6;;b0,0;;m">
</treenode>
<treenode node="ConditionalAssertion;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\ConditionalAssertion.php;f0;6;1;28;;;;vpos;;vAssertion;;c;;r;;d0,7;;b0,0;;m">
<treenode node="getAction;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\ConditionalAssertion.php;f11;17;5;22;;;;vpos;;v;;r;;d4,18;;b1,0;;m">
</treenode>
<treenode node="getHumanizedAction;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\ConditionalAssertion.php;f11;24;5;27;;;;vpos;;v;;r;;d4,25;;b1,0;;m">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\ConditionalAssertion.php;f11;8;5;15;;;;vpos;;v;;r;;d4,9;;b1,0;;mcontainer;;p">
</treenode>
</treenode>
<treenode node="ConditionalAssertionFailed;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ConditionalAssertionFailed.php;f0;3;1;5;;;;vpos;;vAssertionFailedError;;c;;r;;d0,4;;b0,0;;m">
</treenode>
<treenode node="Config;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\Config.php;f0;8;1;65;;;;vpos;;v;;r;;d0,9;;b0,0;;m">
<treenode node="enableExtensions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\Config.php;f14;49;5;64;;;;vpos;;v;;r;;d4,50;;b2,0;;mextensions;;p">
</treenode>
<treenode node="getGlobalConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\Config.php;f14;15;5;18;;;;vpos;;v;;r;;d4,16;;b2,0;;mconf;;p">
</treenode>
<treenode node="getSuiteConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\Config.php;f14;10;5;13;;;;vpos;;v;;r;;d4,11;;b2,0;;msuite;;p">
</treenode>
<treenode node="getSuites;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\Config.php;f14;20;5;23;;;;vpos;;v;;r;;d4,21;;b2,0;;mconf;;p">
</treenode>
<treenode node="overrideConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\Config.php;f14;25;5;47;;;;vpos;;v;;r;;d4,26;;b2,0;;mconfigOptions;;p">
</treenode>
</treenode>
<treenode node="ConfigBundledSuitesCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigBundledSuitesCest.php;f0;2;1;35;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
<treenode node="generateTestsForBundledSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigBundledSuitesCest.php;f11;19;5;34;;;;vpos;;v;;r;;d4,20;;b1,0;;mI;;p">
</treenode>
<treenode node="runBundledSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigBundledSuitesCest.php;f11;4;5;10;;;;vpos;;v;;r;;d4,5;;b1,0;;mI;;p">
</treenode>
<treenode node="runTestByPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigBundledSuitesCest.php;f11;12;5;17;;;;vpos;;v;;r;;d4,13;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="ConfigNoActorCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigNoActorCest.php;f0;5;1;40;;;;vpos;;v;;r&#10;Definition&#10;    class ConfigNoActorCest&#10;&#10;Description&#10;      depends ConfigBundledSuitesCest:runBundledSuite;;d0,6;;b0,0;;m">
<treenode node="runSuitesWithoutActor;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigNoActorCest.php;f11;11;5;16;;;;vpos;;v;;r&#10;Definition&#10;    runSuitesWithoutActor(CliGuy $I)&#10;&#10;Description&#10;      depends ConfigBundledSuitesCest:runBundledSuite&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,12;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="suitesWithoutActorDontHaveActorFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigNoActorCest.php;f11;18;5;23;;;;vpos;;v;;r;;d4,19;;b1,0;;mI;;p">
</treenode>
<treenode node="suitesWithoutActorGenerators;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigNoActorCest.php;f11;25;5;38;;;;vpos;;v;;r;;d4,26;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="ConfigParamsCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigParamsCest.php;f0;2;1;39;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
<treenode node="checkComplexDotEnvParamsPassed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigParamsCest.php;f11;18;5;23;;;;vpos;;v;;r;;d4,19;;b1,0;;mI;;p">
</treenode>
<treenode node="checkDotEnvParamsPassed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigParamsCest.php;f11;11;5;16;;;;vpos;;v;;r;;d4,12;;b1,0;;mI;;p">
</treenode>
<treenode node="checkEnvParamsPassed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigParamsCest.php;f11;25;5;31;;;;vpos;;v;;r;;d4,26;;b1,0;;mI;;p">
</treenode>
<treenode node="checkParamsPassedInSelf;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigParamsCest.php;f11;33;5;38;;;;vpos;;v;;r;;d4,34;;b1,0;;mI;;p">
</treenode>
<treenode node="checkYamlParamsPassed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigParamsCest.php;f11;4;5;9;;;;vpos;;v;;r;;d4,5;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="Configuration;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f0;13;1;742;;;;vpos;;v;;r;;d0,14;;b0,0;;m">
<treenode node="append;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;601;5;619;;;;vpos;;varray;;r&#10;Definition&#10;    append(array $config = [])&#10;&#10;Description&#10;     Adds parameters to config&#10;&#10;Parameters:&#10;    array $config;;d4,602;;b1,5;;marray $config;;p">
</treenode>
<treenode node="config;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;131;5;241;;;;vpos;;varray;;r&#10;Definition&#10;    config($configFile = null)&#10;&#10;Description&#10;     Loads global config file which is `codeception.yml` by default. When config is already loaded - returns it.&#10;&#10;Parameters:&#10;    null $configFile;;d4,132;;b1,5;;mnull $configFile;;p">
</treenode>
<treenode node="dataDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;488;5;491;;;;vpos;;vstring;;r&#10;Definition&#10;    dataDir()&#10;&#10;Description&#10;     Returns current path to `_data` dir. Use it to store database fixtures, sql dumps, or other files required by your tests.;;d4,489;;b1,5;;m">
</treenode>
<treenode node="envsDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;576;5;582;;;;vpos;;vstring;;r&#10;Definition&#10;    envsDir()&#10;&#10;Description&#10;     Return current path to `_envs` dir. Use it to store environment specific configuration.;;d4,577;;b1,5;;m">
</treenode>
<treenode node="expandWildcardedIncludes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f21;689;5;699;;;;vpos;;varray;;r&#10;Definition&#10;    expandWildcardedIncludes(array $includes)&#10;&#10;Description&#10;     Replaces wildcarded items in include array with real paths.&#10;&#10;Parameters:&#10;     $includes;;d4,690;;b2,5;;m $includes;;p">
</treenode>
<treenode node="expandWildcardsFor;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f21;709;5;731;;;;vpos;;varray;;r&#10;Definition&#10;    expandWildcardsFor($include)&#10;&#10;Description&#10;     Finds config files in given wildcarded include path. Returns the expanded paths or the original if not a wildcard.&#10;&#10;Parameters:&#10;     $include;;d4,710;;b2,5;;m $include;;p">
</treenode>
<treenode node="getConfFromContents;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f21;384;5;403;;;;vpos;;varray;;r&#10;Definition&#10;    getConfFromContents($contents, $filename = &apos;(.yml)&apos;)&#10;&#10;Description&#10;     Loads configuration from Yaml data&#10;&#10;Parameters:&#10;    string $contents - Yaml config file contents&#10;    string $filename - which is supposed to be loaded;;d4,385;;b2,5;;mstring $contents;;pstring $filename;;p">
</treenode>
<treenode node="getConfFromFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f21;412;5;419;;;;vpos;;varray;;r&#10;Definition&#10;    getConfFromFile($filename, $nonExistentValue = [])&#10;&#10;Description&#10;     Loads configuration from Yaml file or returns given value if the file doesn&apos;t exist&#10;&#10;Parameters:&#10;    string $filename - filename&#10;    mixed $nonExistentValue - value used if filename is not found;;d4,413;;b2,5;;mstring $filename;;pmixed $nonExistentValue;;p">
</treenode>
<treenode node="isEmpty;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;590;5;593;;;;vpos;;vbool;;r&#10;Definition&#10;    isEmpty()&#10;&#10;Description&#10;     Is this a meta-configuration file that just points to other `codeception.yml`? If so, it may have no tests by itself.;;d4,591;;b1,5;;m">
</treenode>
<treenode node="isExtensionEnabled;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;476;5;480;;;;vpos;;v;;r;;d4,477;;b1,5;;mextensionName;;p">
</treenode>
<treenode node="loadBootstrap;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f21;243;5;252;;;;vpos;;v;;r;;d4,244;;b2,5;;mbootstrap;;p">
</treenode>
<treenode node="loadEnvConfigs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f21;338;5;374;;;;vpos;;varray;;r&#10;Definition&#10;    loadEnvConfigs($path)&#10;&#10;Description&#10;     Loads environments configuration from set directory&#10;&#10;Parameters:&#10;    string $path - path to the directory;;d4,339;;b2,5;;mstring $path;;p">
</treenode>
<treenode node="loadSuiteConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f21;665;5;681;;;;vpos;;varray;;r&#10;Definition&#10;    loadSuiteConfig($suite, $path, $settings)&#10;&#10;Description&#10;     Loads config from *.dist.suite.yml and *.suite.yml&#10;&#10;Parameters:&#10;     $suite&#10;     $path&#10;     $settings;;d4,666;;b2,5;;m $suite;;p $path;;p $settings;;p">
</treenode>
<treenode node="loadSuites;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f21;254;5;274;;;;vpos;;v;;r;;d4,255;;b2,5;;m">
</treenode>
<treenode node="logDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;543;5;546;;;;vpos;;vstring;;r&#10;Definition&#10;    logDir()&#10;&#10;Description&#10;     Compatibility alias to `Configuration::logDir()`;;d4,544;;b1,5;;m">
</treenode>
<treenode node="mergeConfigs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;621;5;655;;;;vpos;;v;;r;;d4,622;;b1,5;;ma1;;pa2;;p">
</treenode>
<treenode node="modules;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;457;5;474;;;;vpos;;varray;;r&#10;Definition&#10;    modules($settings)&#10;&#10;Description&#10;     Return list of enabled modules according suite config.&#10;&#10;Parameters:&#10;    array $settings - suite settings;;d4,458;;b1,5;;marray $settings;;p">
</treenode>
<treenode node="outputDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;511;5;537;;;;vpos;;vstring;;r&#10;Definition&#10;    outputDir()&#10;&#10;Description&#10;     Returns actual path to current `_output` dir. Use it in Helpers or Groups to save result or temporary files.;;d4,512;;b1,5;;m">
</treenode>
<treenode node="prepareParams;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f19;733;5;741;;;;vpos;;v;;r;;d4,734;;b3,5;;msettings;;p">
</treenode>
<treenode node="projectDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;554;5;557;;;;vpos;;vstring;;r&#10;Definition&#10;    projectDir()&#10;&#10;Description&#10;     Returns path to the root of your project. Basically returns path to current `codeception.yml` loaded. Use this method instead of `__DIR__`, `getcwd()` or anything else.;;d4,555;;b1,5;;m">
</treenode>
<treenode node="suiteEnvironments;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;428;5;444;;;;vpos;;varray;;r&#10;Definition&#10;    suiteEnvironments($suite)&#10;&#10;Description&#10;     Returns all possible suite configurations according environment rules. Suite configurations will contain `current_environment` key which specifies what environment used.&#10;&#10;Parameters:&#10;     $suite;;d4,429;;b1,5;;m $suite;;p">
</treenode>
<treenode node="suites;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;446;5;449;;;;vpos;;v;;r;;d4,447;;b1,5;;m">
</treenode>
<treenode node="suiteSettings;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;284;5;330;;;;vpos;;varray;;r&#10;Definition&#10;    suiteSettings($suite, $config)&#10;&#10;Description&#10;     Returns suite configuration. Requires suite name and global config used (Configuration::config)&#10;&#10;Parameters:&#10;    string $suite&#10;    array $config;;d4,285;;b1,5;;mstring $suite;;parray $config;;p">
</treenode>
<treenode node="supportDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;499;5;502;;;;vpos;;vstring;;r&#10;Definition&#10;    supportDir()&#10;&#10;Description&#10;     Return current path to `_helpers` dir. Helpers are custom modules.;;d4,500;;b1,5;;m">
</treenode>
<treenode node="testsDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Configuration.php;f18;565;5;568;;;;vpos;;vstring;;r&#10;Definition&#10;    testsDir()&#10;&#10;Description&#10;     Returns path to tests directory;;d4,566;;b1,5;;m">
</treenode>
</treenode>
<treenode node="ConfigurationException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ConfigurationException.php;f0;3;1;5;;;;vpos;;vException;;c;;r;;d0,4;;b0,0;;m">
</treenode>
<treenode node="ConfigValidate;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\ConfigValidate.php;f0;31;1;104;;;;vpos;;vCommand;;cConfig;;cStyle;;c;;r&#10;Definition&#10;    class ConfigValidate extends Command&#10;&#10;Description&#10;     Validates and prints Codeception config. Use it do debug Yaml configs;;d0,32;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\ConfigValidate.php;f14;36;5;46;;;;vpos;;v;;r;;d4,37;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\ConfigValidate.php;f11;54;5;97;;;;vpos;;v;;r;;d4,55;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="formatOutput;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\ConfigValidate.php;f14;99;5;103;;;;vpos;;v;;r;;d4,100;;b2,0;;mconfig;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\ConfigValidate.php;f11;48;5;51;;;;vpos;;v;;r;;d4,49;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ConfigValidateCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigValidateCest.php;f0;2;1;37;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigValidateCest.php;f11;4;5;7;;;;vpos;;v;;r;;d4,5;;b1,0;;mI;;p">
</treenode>
<treenode node="printsValidConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigValidateCest.php;f11;9;5;15;;;;vpos;;v;;r;;d4,10;;b1,0;;mI;;p">
</treenode>
<treenode node="validatesConfigWithOverrideOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigValidateCest.php;f11;31;5;35;;;;vpos;;v;;r;;d4,32;;b1,0;;mI;;p">
</treenode>
<treenode node="validatesInvalidConfigBeforeRun;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigValidateCest.php;f11;24;5;29;;;;vpos;;v;;r;;d4,25;;b1,0;;mI;;p">
</treenode>
<treenode node="validatesInvalidConfigOnParse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ConfigValidateCest.php;f11;17;5;22;;;;vpos;;v;;r;;d4,18;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="ConnectionException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ConnectionException.php;f0;3;1;5;;;;vpos;;vRuntimeException;;c;;r;;d0,4;;b0,0;;m">
</treenode>
<treenode node="Console;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f0;23;1;645;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Console.php;f0;27;1;158;;;;vpos;;vEventSubscriberInterface;;cStaticEvents;;c;;r;;d0,24;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;92;5;118;;;;vpos;;v;;r;;d4,93;;b1,0;;moptions;;p">
</treenode>
<treenode node="absolutePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f12;214;5;221;;;;vpos;;v;;r;;d4,215;;b3,0;;mpath;;p">
</treenode>
<treenode node="afterResult;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;203;5;212;;;;vpos;;v;;r&#10;Definition&#10;    afterResult(PrintResultEvent $event)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    PrintResultEvent $event;;d4,204;;b1,0;;mPrintResultEvent $event;;p">
</treenode>
<treenode node="afterStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;187;5;198;;;;vpos;;v;;r;;d4,188;;b1,0;;me;;p">
</treenode>
<treenode node="afterSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;339;5;349;;;;vpos;;v;;r;;d4,340;;b1,0;;me;;p">
</treenode>
<treenode node="beforeStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;300;5;315;;;;vpos;;v;;r;;d4,301;;b1,0;;me;;p">
</treenode>
<treenode node="beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;121;5;154;;;;vpos;;v;;r;;d4,122;;b1,0;;me;;p">
</treenode>
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Console.php;f14;35;5;43;;;;vpos;;v;;r;;d4,36;;b2,0;;m">
</treenode>
<treenode node="detectWidth;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;536;5;560;;;;vpos;;v;;r;;d4,537;;b1,0;;m">
</treenode>
<treenode node="endTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;233;5;237;;;;vpos;;v;;r;;d4,234;;b1,0;;me;;p">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Console.php;f11;50;5;112;;;;vpos;;v;;r;;d4,51;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="executeCommands;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Console.php;f14;114;5;148;;;;vpos;;v;;r;;d4,115;;b2,0;;minput;;poutput;;pI;;pbootstrap;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Console.php;f11;45;5;48;;;;vpos;;v;;r;;d4,46;;b1,0;;m">
</treenode>
<treenode node="isDetailed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f14;291;5;298;;;;vpos;;v;;r;;d4,292;;b2,0;;mtest;;p">
</treenode>
<treenode node="isWin;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f12;562;5;565;;;;vpos;;v;;r;;d4,563;;b3,0;;m">
</treenode>
<treenode node="listenToSignals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Console.php;f14;150;5;157;;;;vpos;;v;;r;;d4,151;;b2,0;;m">
</treenode>
<treenode node="message;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f12;614;5;617;;;;vpos;;vMessage;;r&#10;Definition&#10;    message($string = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $string;;d4,615;;b3,0;;m $string;;p">
</treenode>
<treenode node="prepareOptions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f12;638;5;644;;;;vpos;;v;;r&#10;Definition&#10;    prepareOptions($options)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $options;;d4,639;;b3,0;;m $options;;p">
</treenode>
<treenode node="printException;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;373;5;415;;;;vpos;;v;;r;;d4,374;;b1,0;;me;;pcause;;p">
</treenode>
<treenode node="printExceptionTrace;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;443;5;486;;;;vpos;;v;;r;;d4,444;;b1,0;;me;;p">
</treenode>
<treenode node="printFail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;351;5;371;;;;vpos;;v;;r;;d4,352;;b1,0;;me;;p">
</treenode>
<treenode node="printScenarioFail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;417;5;441;;;;vpos;;v;;r;;d4,418;;b1,0;;mfailedTest;;pfail;;p">
</treenode>
<treenode node="printScenarioTrace;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;492;5;534;;;;vpos;;v;;r&#10;Definition&#10;    printScenarioTrace(ScenarioDriven $failedTest)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $failedTest;;d4,493;;b1,0;;m $failedTest;;p">
</treenode>
<treenode node="printStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f12;317;5;337;;;;vpos;;v;;r;;d4,318;;b3,0;;mstep;;p">
</treenode>
<treenode node="startTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;157;5;185;;;;vpos;;v;;r;;d4,158;;b1,0;;me;;p">
</treenode>
<treenode node="testError;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;259;5;267;;;;vpos;;v;;r;;d4,260;;b1,0;;me;;p">
</treenode>
<treenode node="testFail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;249;5;257;;;;vpos;;v;;r;;d4,250;;b1,0;;me;;p">
</treenode>
<treenode node="testIncomplete;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;280;5;289;;;;vpos;;v;;r;;d4,281;;b1,0;;me;;p">
</treenode>
<treenode node="testSkipped;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;269;5;278;;;;vpos;;v;;r;;d4,270;;b1,0;;me;;p">
</treenode>
<treenode node="testSuccess;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;223;5;231;;;;vpos;;v;;r;;d4,224;;b1,0;;me;;p">
</treenode>
<treenode node="testWarning;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f11;239;5;247;;;;vpos;;v;;r;;d4,240;;b1,0;;me;;p">
</treenode>
<treenode node="writeCurrentTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f14;571;5;582;;;;vpos;;v;;r&#10;Definition&#10;    writeCurrentTest(\PHPUnit\Framework\SelfDescribing $test, $inProgress = true)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \PHPUnit\Framework\SelfDescribing $test&#10;    bool $inProgress;;d4,572;;b2,0;;m\PHPUnit\Framework\SelfDescribing $test;;pbool $inProgress;;p">
</treenode>
<treenode node="writelnFinishedTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f14;584;5;608;;;;vpos;;v;;r;;d4,585;;b2,0;;mevent;;presult;;p">
</treenode>
<treenode node="writeTimeInformation;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Console.php;f14;622;5;633;;;;vpos;;v;;r&#10;Definition&#10;    writeTimeInformation(TestEvent $event)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    TestEvent $event;;d4,623;;b2,0;;mTestEvent $event;;p">
</treenode>
</treenode>
<treenode node="ContactCest;PHP:Class Name;H:\OSPanel\domains\yii\tests\acceptance\ContactCest.php;f0;4;1;33;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\tests\acceptance\ContactCest.php;f11;6;5;9;;;;vpos;;v;;r;;d4,7;;b1,0;;mI;;p">
</treenode>
<treenode node="contactFormCanBeSubmitted;PHP:Function Name;H:\OSPanel\domains\yii\tests\acceptance\ContactCest.php;f11;17;5;32;;;;vpos;;v;;r;;d4,18;;b1,0;;mI;;p">
</treenode>
<treenode node="contactPageWorks;PHP:Function Name;H:\OSPanel\domains\yii\tests\acceptance\ContactCest.php;f11;11;5;15;;;;vpos;;v;;r;;d4,12;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="ContactForm;PHP:Class Name;H:\OSPanel\domains\yii\models\ContactForm.php;f0;10;1;63;;;;vpos;;vModel;;c;;r&#10;Definition&#10;    class ContactForm extends Model&#10;&#10;Description&#10;     ContactForm is the model behind the contact form.;;d0,11;;b0,0;;m">
<treenode node="attributeLabels;PHP:Function Name;H:\OSPanel\domains\yii\models\ContactForm.php;f11;37;5;42;;;;vpos;;varray;;r&#10;Definition&#10;    attributeLabels()&#10;&#10;Description&#10;      customized attribute labels&#10;&#10;Return:&#10;   customized attribute labels;;d4,38;;b1,0;;m">
</treenode>
<treenode node="contact;PHP:Function Name;H:\OSPanel\domains\yii\models\ContactForm.php;f11;49;5;62;;;;vpos;;vbool;;r&#10;Definition&#10;    contact($email)&#10;&#10;Description&#10;     Sends an email to the specified email address using the information collected by this model.&#10;&#10;Parameters:&#10;    string $email - the target email address&#10;&#10;Return:&#10;   whether the model passes validation;;d4,50;;b1,0;;mstring $email;;p">
</treenode>
<treenode node="rules;PHP:Function Name;H:\OSPanel\domains\yii\models\ContactForm.php;f11;22;5;32;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;      the validation rules.&#10;&#10;Return:&#10;   the validation rules;;d4,23;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ContactFormCest;PHP:Class Name;H:\OSPanel\domains\yii\tests\functional\ContactFormCest.php;f0;2;1;56;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\tests\functional\ContactFormCest.php;f11;4;5;7;;;;vpos;;v;;r;;d4,5;;b1,0;;mI;;p">
</treenode>
<treenode node="openContactPage;PHP:Function Name;H:\OSPanel\domains\yii\tests\functional\ContactFormCest.php;f11;9;5;12;;;;vpos;;v;;r;;d4,10;;b1,0;;mI;;p">
</treenode>
<treenode node="submitEmptyForm;PHP:Function Name;H:\OSPanel\domains\yii\tests\functional\ContactFormCest.php;f11;14;5;24;;;;vpos;;v;;r;;d4,15;;b1,0;;mI;;p">
</treenode>
<treenode node="submitFormSuccessfully;PHP:Function Name;H:\OSPanel\domains\yii\tests\functional\ContactFormCest.php;f11;43;5;55;;;;vpos;;v;;r;;d4,44;;b1,0;;mI;;p">
</treenode>
<treenode node="submitFormWithIncorrectEmail;PHP:Function Name;H:\OSPanel\domains\yii\tests\functional\ContactFormCest.php;f11;26;5;41;;;;vpos;;v;;r;;d4,27;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="ContactFormTest;PHP:Class Name;H:\OSPanel\domains\yii\tests\unit\models\ContactFormTest.php;f0;4;1;42;;;;vpos;;vUnit;;c;;r;;d0,5;;b0,0;;m">
<treenode node="testEmailIsSentOnContact;PHP:Function Name;H:\OSPanel\domains\yii\tests\unit\models\ContactFormTest.php;f11;12;5;41;;;;vpos;;v;;r;;d4,13;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ContentNotFound;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ContentNotFound.php;f0;3;1;5;;;;vpos;;vAssertionFailedError;;c;;r;;d0,4;;b0,0;;m">
</treenode>
<treenode node="CssSelectorConverter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;9;9;13;;;;vpos;;v;;r;;d35,9;;b0,0;;m">
<treenode node="toXPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f12;10;13;12;;;;vpos;;v;;r;;d73,10;;b0,0;;mcssExpr;;pprefix;;p">
</treenode>
</treenode>
<treenode node="CucumberKeywords;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\CucumberKeywords.php;f0;22;1;120;;;;vpos;;vArrayKeywords;;c;;r&#10;Definition&#10;    class CucumberKeywords extends ArrayKeywords&#10;&#10;Description&#10;     Cucumber-translations reader.;;d0,23;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\CucumberKeywords.php;f11;29;5;53;;;;vpos;;v;;r&#10;Definition&#10;    __construct($yaml)&#10;&#10;Description&#10;     Initializes holder with yaml string OR file.&#10;&#10;Parameters:&#10;    string $yaml - Yaml string or file path;;d4,30;;b1,0;;mstring $yaml;;p">
</treenode>
<treenode node="getAndKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\CucumberKeywords.php;f11;90;5;93;;;;vpos;;vstring;;r&#10;Definition&#10;    getAndKeywords()&#10;&#10;Description&#10;     Returns And keywords (splitted by &quot;|&quot;).;;d4,91;;b1,0;;m">
</treenode>
<treenode node="getButKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\CucumberKeywords.php;f11;100;5;103;;;;vpos;;vstring;;r&#10;Definition&#10;    getButKeywords()&#10;&#10;Description&#10;     Returns But keywords (splitted by &quot;|&quot;).;;d4,101;;b1,0;;m">
</treenode>
<treenode node="getGivenKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\CucumberKeywords.php;f11;60;5;63;;;;vpos;;vstring;;r&#10;Definition&#10;    getGivenKeywords()&#10;&#10;Description&#10;     Returns Feature keywords (splitted by &quot;|&quot;).;;d4,61;;b1,0;;m">
</treenode>
<treenode node="getThenKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\CucumberKeywords.php;f11;80;5;83;;;;vpos;;vstring;;r&#10;Definition&#10;    getThenKeywords()&#10;&#10;Description&#10;     Returns Then keywords (splitted by &quot;|&quot;).;;d4,81;;b1,0;;m">
</treenode>
<treenode node="getWhenKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\CucumberKeywords.php;f11;70;5;73;;;;vpos;;vstring;;r&#10;Definition&#10;    getWhenKeywords()&#10;&#10;Description&#10;     Returns When keywords (splitted by &quot;|&quot;).;;d4,71;;b1,0;;m">
</treenode>
<treenode node="prepareStepString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\CucumberKeywords.php;f12;112;5;119;;;;vpos;;vstring;;r&#10;Definition&#10;    prepareStepString($keywordsString)&#10;&#10;Description&#10;     Trim *| from the begining of the list.&#10;&#10;Parameters:&#10;    string $keywordsString - Keywords string;;d4,113;;b3,0;;mstring $keywordsString;;p">
</treenode>
</treenode>
<treenode node="CucumberKeywordsTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\CucumberKeywordsTest.php;f0;8;1;33;;;;vpos;;vKeywordsTest;;c;;r;;d0,9;;b0,0;;m">
<treenode node="getKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\CucumberKeywordsTest.php;f14;10;5;13;;;;vpos;;v;;r;;d4,11;;b2,0;;m">
</treenode>
<treenode node="getKeywordsArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\CucumberKeywordsTest.php;f14;15;5;18;;;;vpos;;v;;r;;d4,16;;b2,0;;m">
</treenode>
<treenode node="getSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\CucumberKeywordsTest.php;f14;20;5;32;;;;vpos;;v;;r;;d4,21;;b2,0;;mkeywords;;ptext;;pline;;pkeywordType;;p">
</treenode>
</treenode>
<treenode node="DataFactory;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\DataFactory.php;f0;122;1;283;;;;vpos;;vModule;;cDependsOnModule;;cRequiresPackage;;c;;r&#10;Definition&#10;    class DataFactory extends \Codeception\Module implements DependsOnModule, RequiresPackage&#10;&#10;Description&#10;     DataFactory allows you to easily generate and create test data using [**FactoryMuffin**](https://github.com/thephpleague/factory-muffin). DataFactory uses an ORM of your application to define, save and cleanup data. Thus, should be used with ORM or Framework modules.;;d0,123;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\DataFactory.php;f11;186;5;193;;;;vpos;;v;;r;;d4,187;;b1,0;;mtest;;p">
</treenode>
<treenode node="_beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\DataFactory.php;f11;155;5;169;;;;vpos;;v;;r;;d4,156;;b1,0;;msettings;;p">
</treenode>
<treenode node="_define;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\DataFactory.php;f11;218;5;221;;;;vpos;;v;;r&#10;Definition&#10;    _define($model, $fields)&#10;&#10;Description&#10;     Creates a model definition. This can be used from a helper:.&#10;&#10;Parameters:&#10;    string $model&#10;    array $fields;;d4,219;;b1,0;;mstring $model;;parray $fields;;p">
</treenode>
<treenode node="_depends;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\DataFactory.php;f11;195;5;198;;;;vpos;;v;;r;;d4,196;;b1,0;;m">
</treenode>
<treenode node="_inject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\DataFactory.php;f11;181;5;184;;;;vpos;;v;;r;;d4,182;;b1,0;;morm;;p">
</treenode>
<treenode node="_requires;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\DataFactory.php;f11;148;5;153;;;;vpos;;v;;r;;d4,149;;b1,0;;m">
</treenode>
<treenode node="getStore;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\DataFactory.php;f14;174;5;179;;;;vpos;;vStoreInterface;;r&#10;Definition&#10;    getStore()&#10;&#10;Description&#10;      |null&#10;&#10;Return:&#10;   |null;;d4,175;;b2,0;;m">
</treenode>
<treenode node="have;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\DataFactory.php;f11;238;5;241;;;;vpos;;vobject;;r&#10;Definition&#10;    have($name, array $extraAttrs = [])&#10;&#10;Description&#10;     Generates and saves a record,.&#10;&#10;Parameters:&#10;    string $name&#10;    array $extraAttrs;;d4,239;;b1,0;;mstring $name;;parray $extraAttrs;;p">
</treenode>
<treenode node="haveMultiple;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\DataFactory.php;f11;279;5;282;;;;vpos;;v;;r&#10;Definition&#10;    haveMultiple($name, $times, array $extraAttrs = [])&#10;&#10;Description&#10;     Generates and saves a record multiple times.&#10;&#10;Parameters:&#10;    string $name&#10;    int $times&#10;    array $extraAttrs;;d4,280;;b1,0;;mstring $name;;pint $times;;parray $extraAttrs;;p">
</treenode>
<treenode node="make;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\DataFactory.php;f11;260;5;263;;;;vpos;;vobject;;r&#10;Definition&#10;    make($name, array $extraAttrs = [])&#10;&#10;Description&#10;     Generates a record instance.&#10;&#10;Parameters:&#10;    string $name&#10;    array $extraAttrs;;d4,261;;b1,0;;mstring $name;;parray $extraAttrs;;p">
</treenode>
</treenode>
<treenode node="DataProviderFailuresAndExceptionsCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\DataProviderFailuresAndExceptionsCest.php;f0;2;1;169;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
<treenode node="moveToPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\DataProviderFailuresAndExceptionsCest.php;f14;8;5;11;;;;vpos;;v;;r&#10;Definition&#10;    moveToPath(\CliGuy $I)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    CliGuy $I;;d4,9;;b2,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestWithDataProvidersExceptionStderr;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\DataProviderFailuresAndExceptionsCest.php;f11;118;5;139;;;;vpos;;v;;r&#10;Definition&#10;    runTestWithDataProvidersExceptionStderr(\CliGuy $I)&#10;&#10;Description&#10;     This redirects stderr to stdout so that we can test the contents of stderr. Stderr is where all the interesting information should be when there is a failure.&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,119;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestWithDataProvidersExceptionStderrVerbose;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\DataProviderFailuresAndExceptionsCest.php;f11;147;5;168;;;;vpos;;v;;r&#10;Definition&#10;    runTestWithDataProvidersExceptionStderrVerbose(\CliGuy $I)&#10;&#10;Description&#10;     This adds the -v to the stderr test which should just add the Exception Trace to the output of stderr.&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,148;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestWithDataProvidersExceptionStdout;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\DataProviderFailuresAndExceptionsCest.php;f11;97;5;109;;;;vpos;;v;;r&#10;Definition&#10;    runTestWithDataProvidersExceptionStdout(\CliGuy $I)&#10;&#10;Description&#10;     This looks at only the contents of stdout when there is an exception thrown when executing a dataProvider function. When exception thrown all the useful information should go to stderr, so stdout is left with nothing.&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,98;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestWithDataProvidersFailureStderr;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\DataProviderFailuresAndExceptionsCest.php;f11;42;5;59;;;;vpos;;v;;r&#10;Definition&#10;    runTestWithDataProvidersFailureStderr(\CliGuy $I)&#10;&#10;Description&#10;     This redirects stderr to stdout so that we can test the contents of stderr. Stderr is where all the interesting information should be when there is a failure.&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,43;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestWithDataProvidersFailureStderrVerbose;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\DataProviderFailuresAndExceptionsCest.php;f11;68;5;87;;;;vpos;;v;;r&#10;Definition&#10;    runTestWithDataProvidersFailureStderrVerbose(\CliGuy $I)&#10;&#10;Description&#10;     This adds the -v to the stderr test which should just add the Exception Trace to the output.&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,69;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestWithDataProvidersFailureStdout;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\DataProviderFailuresAndExceptionsCest.php;f11;21;5;33;;;;vpos;;v;;r&#10;Definition&#10;    runTestWithDataProvidersFailureStdout(\CliGuy $I)&#10;&#10;Description&#10;     This looks at only the contents of stdout when there is a failure in parsing a dataProvider annotation. When there is a failure all the useful information should go to stderr, so stdout is left with only the version headers.&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,22;;b1,0;;mCliGuy $I;;p">
</treenode>
</treenode>
<treenode node="Db;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f0;183;1;616;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f0;6;1;363;;;;vpos;;vCodeceptionModule;;cDbInterface;;c;;r&#10;Definition&#10;    class Db extends CodeceptionModule implements DbInterface&#10;&#10;Description&#10;     Access a database.;;d0,184;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;92;5;101;;;;vpos;;v;;r&#10;Definition&#10;    __construct($dsn, $user, $password, $options = null)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $dsn&#10;     $user&#10;     $password&#10;    ;;d4,93;;b1,0;;m $dsn;;p $user;;p $password;;p;;p">
</treenode>
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;332;5;339;;;;vpos;;v;;r;;d4,333;;b1,0;;mtest;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;320;5;330;;;;vpos;;v;;r;;d4,321;;b1,0;;mtest;;p">
</treenode>
<treenode node="_beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;232;5;254;;;;vpos;;v;;r;;d4,233;;b1,0;;msettings;;p">
</treenode>
<treenode node="_cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;354;5;373;;;;vpos;;v;;r;;d4,355;;b1,0;;m">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;227;5;230;;;;vpos;;v;;r;;d4,228;;b1,0;;m">
</treenode>
<treenode node="_insertInDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;428;5;444;;;;vpos;;v;;r;;d4,429;;b1,0;;mtable;;pdata;;p">
</treenode>
<treenode node="_loadDump;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;380;5;387;;;;vpos;;v;;r;;d4,381;;b1,0;;m">
</treenode>
<treenode node="addInsertedRow;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f12;446;5;472;;;;vpos;;v;;r;;d4,447;;b3,0;;mtable;;prow;;pid;;p">
</treenode>
<treenode node="cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;119;5;121;;;;vpos;;v;;r;;d4,120;;b1,0;;m">
</treenode>
<treenode node="connect;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f12;278;5;311;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f18;35;5;41;;;;vpos;;v;;r;;d4,279;;b3,0;;m">
</treenode>
<treenode node="countInDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f14;531;5;534;;;;vpos;;vint;;r&#10;Definition&#10;    countInDatabase($table, array $criteria = [])&#10;&#10;Description&#10;     Count rows in a database&#10;&#10;Parameters:&#10;    string $table - Table name&#10;    array $criteria - Search criteria [Optional];;d4,532;;b2,0;;mstring $table;;parray $criteria;;p">
</treenode>
<treenode node="create;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f18;56;5;76;;;;vpos;;vDb;;r&#10;Definition&#10;    create($dsn, $user, $password, $options = null)&#10;&#10;Description&#10;      static&#10;&#10;Parameters:&#10;     $dsn&#10;     $user&#10;     $password&#10;    &#10;&#10;Return:&#10;   |SqlSrv|MySql|Oci|PostgreSql|Sqlite;;d4,57;;b1,5;;m $dsn;;p $user;;p $password;;p;;p">
</treenode>
<treenode node="deleteQuery;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;230;5;234;;;;vpos;;v;;r&#10;Definition&#10;    deleteQuery($table, $id, $primaryKey = &apos;id&apos;)&#10;&#10;Description&#10;      deprecated use deleteQueryByCriteria instead;;d4,231;;b1,0;;mtable;;pid;;pprimaryKey;;p">
</treenode>
<treenode node="deleteQueryByCriteria;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;236;5;242;;;;vpos;;v;;r;;d4,237;;b1,0;;mtable;;pcriteria;;p">
</treenode>
<treenode node="disconnect;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f12;313;5;318;;;;vpos;;v;;r;;d4,314;;b3,0;;m">
</treenode>
<treenode node="dontSeeInDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;513;5;521;;;;vpos;;v;;r;;d4,514;;b1,0;;mtable;;pcriteria;;p">
</treenode>
<treenode node="executeQuery;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;276;5;298;;;;vpos;;v;;r;;d4,277;;b1,0;;mquery;;pparams;;p">
</treenode>
<treenode node="flushPrimaryColumnCache;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f14;334;5;339;;;;vpos;;vbool;;r&#10;Definition&#10;    flushPrimaryColumnCache()&#10;&#10;Description&#10;     ;;d4,335;;b2,0;;m">
</treenode>
<treenode node="generateWhereClause;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f14;189;5;225;;;;vpos;;v;;r;;d4,190;;b2,0;;mcriteria;;p">
</treenode>
<treenode node="getDb;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;108;5;117;;;;vpos;;v;;r;;d4,109;;b1,0;;m">
</treenode>
<treenode node="getDbh;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;103;5;106;;;;vpos;;v;;r;;d4,104;;b1,0;;m">
</treenode>
<treenode node="getOptions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;359;5;362;;;;vpos;;v;;r;;d4,360;;b1,0;;m">
</treenode>
<treenode node="getPrimaryColumn;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;307;5;319;;;;vpos;;vstring;;r&#10;Definition&#10;    getPrimaryColumn($tableName)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $tableName;;d4,308;;b1,0;;mstring $tableName;;p">
</treenode>
<treenode node="getPrimaryKey;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;326;5;329;;;;vpos;;varray;;r&#10;Definition&#10;    getPrimaryKey($tableName)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $tableName&#10;&#10;Return:&#10;   [string];;d4,327;;b1,0;;mstring $tableName;;p">
</treenode>
<treenode node="getProvider;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f18;78;5;81;;;;vpos;;v;;r;;d4,79;;b1,5;;mdsn;;p">
</treenode>
<treenode node="getQuotedName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;249;5;252;;;;vpos;;v;;r;;d4,250;;b1,0;;mname;;p">
</treenode>
<treenode node="getSupportedOperators;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f12;177;5;187;;;;vpos;;v;;r;;d4,178;;b3,0;;m">
</treenode>
<treenode node="grabColumnFromDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;564;5;573;;;;vpos;;varray;;r&#10;Definition&#10;    grabColumnFromDatabase($table, $column, array $criteria = [])&#10;&#10;Description&#10;     Fetches all values from the column in database. Provide table name, desired column and criteria.&#10;&#10;Parameters:&#10;    string $table&#10;    string $column&#10;    array $criteria;;d4,565;;b1,0;;mstring $table;;pstring $column;;parray $criteria;;p">
</treenode>
<treenode node="grabFromDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;575;5;578;;;;vpos;;v;;r;;d4,576;;b1,0;;mtable;;pcolumn;;pcriteria;;p">
</treenode>
<treenode node="grabNumRecords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;588;5;591;;;;vpos;;vint;;r&#10;Definition&#10;    grabNumRecords($table, array $criteria = [])&#10;&#10;Description&#10;     Returns the number of rows in a database&#10;&#10;Parameters:&#10;    string $table - Table name&#10;    array $criteria - Search criteria [Optional];;d4,589;;b1,0;;mstring $table;;parray $criteria;;p">
</treenode>
<treenode node="haveInDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;419;5;426;;;;vpos;;vinteger;;r&#10;Definition&#10;    haveInDatabase($table, array $data)&#10;&#10;Description&#10;     Inserts an SQL record into a database. This record will be erased after the test.&#10;&#10;Parameters:&#10;    string $table&#10;    array $data&#10;&#10;Return:&#10;   $id;;d4,420;;b1,0;;mstring $table;;parray $data;;p">
</treenode>
<treenode node="insert;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;154;5;167;;;;vpos;;v;;r;;d4,155;;b1,0;;mtableName;;pdata;;p">
</treenode>
<treenode node="isPopulated;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;375;5;378;;;;vpos;;v;;r;;d4,376;;b1,0;;m">
</treenode>
<treenode node="lastInsertId;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;244;5;247;;;;vpos;;v;;r;;d4,245;;b1,0;;mtable;;p">
</treenode>
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;123;5;152;;;;vpos;;v;;r;;d4,124;;b1,0;;msql;;p">
</treenode>
<treenode node="loadDumpUsingDriver;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f14;395;5;403;;;;vpos;;v;;r;;d4,396;;b2,0;;m">
</treenode>
<treenode node="loadDumpUsingPopulator;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f14;389;5;393;;;;vpos;;v;;r;;d4,390;;b2,0;;m">
</treenode>
<treenode node="proceedSeeInDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f14;536;5;547;;;;vpos;;v;;r;;d4,537;;b2,0;;mtable;;pcolumn;;pcriteria;;p">
</treenode>
<treenode node="readSql;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f12;256;5;276;;;;vpos;;v;;r;;d4,257;;b3,0;;m">
</treenode>
<treenode node="removeInserted;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f14;341;5;352;;;;vpos;;v;;r;;d4,342;;b2,0;;m">
</treenode>
<treenode node="seeInDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;474;5;482;;;;vpos;;v;;r;;d4,475;;b1,0;;mtable;;pcriteria;;p">
</treenode>
<treenode node="seeNumRecords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;497;5;511;;;;vpos;;v;;r&#10;Definition&#10;    seeNumRecords($expectedNumber, $table, array $criteria = [])&#10;&#10;Description&#10;     Asserts that the given number of records were found in the database.&#10;&#10;Parameters:&#10;    int $expectedNumber - Expected number&#10;    string $table - Table name&#10;    array $criteria - Search criteria [Optional];;d4,498;;b1,0;;mint $expectedNumber;;pstring $table;;parray $criteria;;p">
</treenode>
<treenode node="select;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;169;5;175;;;;vpos;;v;;r;;d4,170;;b1,0;;mcolumn;;ptable;;pcriteria;;p">
</treenode>
<treenode node="sqlLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f14;254;5;262;;;;vpos;;v;;r;;d4,255;;b2,0;;msql;;p">
</treenode>
<treenode node="sqlQuery;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f14;264;5;274;;;;vpos;;v;;r;;d4,265;;b2,0;;mquery;;p">
</treenode>
<treenode node="update;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Db.php;f11;341;5;357;;;;vpos;;v;;r;;d4,342;;b1,0;;mtable;;pdata;;pcriteria;;p">
</treenode>
<treenode node="updateInDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Db.php;f11;606;5;615;;;;vpos;;v;;r&#10;Definition&#10;    updateInDatabase($table, array $data, array $criteria = [])&#10;&#10;Description&#10;     Update an SQL record into a database.&#10;&#10;Parameters:&#10;    string $table&#10;    array $data&#10;    array $criteria;;d4,607;;b1,0;;mstring $table;;parray $data;;parray $criteria;;p">
</treenode>
</treenode>
<treenode node="DbPopulator;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\DbPopulator.php;f0;7;1;104;;;;vpos;;v;;r&#10;Definition&#10;    class DbPopulator&#10;&#10;Description&#10;     Populates a db using a parameterized command built from the Db module configuration.;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\DbPopulator.php;f11;28;5;33;;;;vpos;;v;;r&#10;Definition&#10;    __construct($config)&#10;&#10;Description&#10;     Constructs a DbPopulator object for the given command and Db module.&#10;&#10;Parameters:&#10;     $config;;d4,29;;b1,0;;m $config;;p">
</treenode>
<treenode node="buildCommand;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\DbPopulator.php;f14;54;5;72;;;;vpos;;vstring;;r&#10;Definition&#10;    buildCommand($command)&#10;&#10;Description&#10;     Builds out a command replacing any found `$key` with its value if found in the given configuration.&#10;&#10;Parameters:&#10;    string $command - The command to be evaluated using the given config&#10;    array $config - The configuration values used to replace any found $keys with values from this array&#10;&#10;Return:&#10;   The resulting command string after evaluating any configuration&apos;s key;;d4,55;;b2,0;;mcommand;;p">
</treenode>
<treenode node="getBuiltCommand;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\DbPopulator.php;f11;100;5;103;;;;vpos;;v;;r;;d4,101;;b1,0;;m">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\DbPopulator.php;f11;81;5;98;;;;vpos;;vbool;;r&#10;Definition&#10;    run()&#10;&#10;Description&#10;     Executes the command built using the Db module configuration.;;d4,82;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Debug;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Debug.php;f0;9;1;49;;;;vpos;;v;;r&#10;Definition&#10;    class Debug&#10;&#10;Description&#10;     This class is used only when Codeception is executed in `--debug` mode. In other cases method of this class won&apos;t be seen.;;d0,10;;b0,0;;m">
<treenode node="debug;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Debug.php;f18;26;5;32;;;;vpos;;v;;r&#10;Definition&#10;    debug($message)&#10;&#10;Description&#10;     Prints data to screen. Message can be any time of data&#10;&#10;Parameters:&#10;     $message;;d4,27;;b1,5;;m $message;;p">
</treenode>
<treenode node="pause;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Debug.php;f18;37;5;48;;;;vpos;;v;;r&#10;Definition&#10;    pause()&#10;&#10;Description&#10;     Pauses execution and waits for user input to proceed.;;d4,38;;b1,5;;m">
</treenode>
<treenode node="setOutput;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Debug.php;f18;16;5;19;;;;vpos;;v;;r;;d4,17;;b1,5;;moutput;;p">
</treenode>
</treenode>
<treenode node="Dependencies;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Dependencies.php;f0;10;1;45;;;;vpos;;vEventSubscriberInterface;;cStaticEvents;;c;;r;;d0,11;;b0,0;;m">
<treenode node="testStart;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Dependencies.php;f11;21;5;35;;;;vpos;;v;;r;;d4,22;;b1,0;;mevent;;p">
</treenode>
<treenode node="testSuccess;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Dependencies.php;f11;37;5;44;;;;vpos;;v;;r;;d4,38;;b1,0;;mevent;;p">
</treenode>
</treenode>
<treenode node="Descriptor;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Descriptor.php;f0;7;1;106;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
<treenode node="getTestAsString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Descriptor.php;f18;45;5;58;;;;vpos;;v;;r;;d4,46;;b1,5;;mtestCase;;p">
</treenode>
<treenode node="getTestDataSetIndex;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Descriptor.php;f18;99;5;105;;;;vpos;;vint;;r&#10;Definition&#10;    getTestDataSetIndex(\PHPUnit\Framework\SelfDescribing $testCase)&#10;&#10;Description&#10;     Provides a test data set index&#10;&#10;Parameters:&#10;    \PHPUnit\Framework\SelfDescribing $testCase&#10;&#10;Return:&#10;   |null;;d4,100;;b1,5;;m\PHPUnit\Framework\SelfDescribing $testCase;;p">
</treenode>
<treenode node="getTestFileName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Descriptor.php;f18;66;5;72;;;;vpos;;vmixed;;r&#10;Definition&#10;    getTestFileName(\PHPUnit\Framework\SelfDescribing $testCase)&#10;&#10;Description&#10;     Provides a test file name relative to Codeception root&#10;&#10;Parameters:&#10;    \PHPUnit\Framework\SelfDescribing $testCase;;d4,67;;b1,5;;m\PHPUnit\Framework\SelfDescribing $testCase;;p">
</treenode>
<treenode node="getTestFullName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Descriptor.php;f18;78;5;91;;;;vpos;;vmixed;;r&#10;Definition&#10;    getTestFullName(\PHPUnit\Framework\SelfDescribing $testCase)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \PHPUnit\Framework\SelfDescribing $testCase&#10;&#10;Return:&#10;   |string;;d4,79;;b1,5;;m\PHPUnit\Framework\SelfDescribing $testCase;;p">
</treenode>
<treenode node="getTestSignature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Descriptor.php;f18;15;5;24;;;;vpos;;vstring;;r&#10;Definition&#10;    getTestSignature(\PHPUnit\Framework\SelfDescribing $testCase)&#10;&#10;Description&#10;     Provides a test name which can be located by&#10;&#10;Parameters:&#10;    \PHPUnit\Framework\SelfDescribing $testCase;;d4,16;;b1,5;;m\PHPUnit\Framework\SelfDescribing $testCase;;p">
</treenode>
<treenode node="getTestSignatureUnique;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Descriptor.php;f18;32;5;43;;;;vpos;;vstring;;r&#10;Definition&#10;    getTestSignatureUnique(\PHPUnit\Framework\SelfDescribing $testCase)&#10;&#10;Description&#10;     Provides a test name which is unique for individual iterations of tests using examples&#10;&#10;Parameters:&#10;    \PHPUnit\Framework\SelfDescribing $testCase;;d4,33;;b1,5;;m\PHPUnit\Framework\SelfDescribing $testCase;;p">
</treenode>
</treenode>
<treenode node="Di;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Di.php;f0;5;1;160;;;;vpos;;v;;r;;d0,6;;b0,0;;m">
<treenode node="DEFAULT_INJECT_METHOD_NAME;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Di.php;f9;7;36;7;;;;vpos;;v;;r&apos;_inject&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Di.php;f11;16;5;19;;;;vpos;;v;;r;;d4,17;;b1,0;;mfallback;;p">
</treenode>
<treenode node="get;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Di.php;f11;21;5;26;;;;vpos;;v;;r;;d4,22;;b1,0;;mclassName;;p">
</treenode>
<treenode node="injectDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Di.php;f11;99;5;127;;;;vpos;;v;;r&#10;Definition&#10;    injectDependencies($object, $injectMethodName = self::DEFAULT_INJECT_METHOD_NAME, $defaults = [])&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $object&#10;    string $injectMethodName - Method which will be invoked with resolved dependencies as its arguments;;d4,100;;b1,0;;mobject;;pinjectMethodName;;pdefaults;;p">
</treenode>
<treenode node="instantiate;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Di.php;f11;41;5;92;;;;vpos;;vnull;;r&#10;Definition&#10;    instantiate(&#10;        $className,&#10;        $constructorArgs = null,&#10;        $injectMethodName = self::DEFAULT_INJECT_METHOD_NAME&#10;    )&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $className&#10;    array $constructorArgs&#10;    string $injectMethodName - Method which will be invoked after object creation;s&#10;&#10;Return:&#10;   |object;;d6,45;;b1,0;;mstring $className;;parray $constructorArgs;;pstring $injectMethodName;;p">
</treenode>
<treenode node="prepareArgs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Di.php;f14;135;5;159;;;;vpos;;varray;;r&#10;Definition&#10;    prepareArgs(\ReflectionMethod $method, $defaults = [])&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \ReflectionMethod $method&#10;     $defaults;;d4,136;;b2,0;;m\ReflectionMethod $method;;p $defaults;;p">
</treenode>
<treenode node="set;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Di.php;f11;28;5;31;;;;vpos;;v;;r;;d4,29;;b1,0;;mclass;;p">
</treenode>
</treenode>
<treenode node="DiffFactory;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\DiffFactory.php;f0;9;1;40;;;;vpos;;v;;r&#10;Definition&#10;    class DiffFactory&#10;&#10;Description&#10;     DiffFactory;;d0,10;;b0,0;;m">
<treenode node="createDiff;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\DiffFactory.php;f11;15;5;23;;;;vpos;;vstring;;r&#10;Definition&#10;    createDiff(ComparisonFailure $failure)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    ComparisonFailure $failure&#10;&#10;Return:&#10;   |null;;d4,16;;b1,0;;mComparisonFailure $failure;;p">
</treenode>
<treenode node="getDiff;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\DiffFactory.php;f12;30;5;39;;;;vpos;;vstring;;r&#10;Definition&#10;    getDiff($expected = &apos;&apos;, $actual = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $expected&#10;    string $actual;;d4,31;;b3,0;;mstring $expected;;pstring $actual;;p">
</treenode>
</treenode>
<treenode node="DirectoryLoader;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\DirectoryLoader.php;f0;22;1;79;;;;vpos;;vAbstractFileLoader;;c;;r&#10;Definition&#10;    class DirectoryLoader extends AbstractFileLoader&#10;&#10;Description&#10;     Directory contents loader.;;d0,23;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\DirectoryLoader.php;f11;31;5;34;;;;vpos;;v;;r&#10;Definition&#10;    __construct(Gherkin $gherkin)&#10;&#10;Description&#10;     Initializes loader.&#10;&#10;Parameters:&#10;    Gherkin $gherkin - Gherkin manager;;d4,32;;b1,0;;mGherkin $gherkin;;p">
</treenode>
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\DirectoryLoader.php;f11;56;5;78;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    load($path)&#10;&#10;Description&#10;     Loads features from provided resource.&#10;&#10;Parameters:&#10;    string $path - Resource to load&#10;&#10;Return:&#10;   [];;d4,57;;b1,0;;mstring $path;;p">
</treenode>
<treenode node="supports;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\DirectoryLoader.php;f11;43;5;47;;;;vpos;;vBoolean;;r&#10;Definition&#10;    supports($path)&#10;&#10;Description&#10;     Checks if current loader supports provided resource.&#10;&#10;Parameters:&#10;    mixed $path - Resource to load;;d4,44;;b1,0;;mmixed $path;;p">
</treenode>
</treenode>
<treenode node="DirectoryLoaderTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\DirectoryLoaderTest.php;f0;6;1;91;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,7;;b0,0;;m">
<treenode node="createGherkinFileLoaderMock;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\DirectoryLoaderTest.php;f14;29;5;36;;;;vpos;;v;;r;;d4,30;;b2,0;;m">
</treenode>
<treenode node="createGherkinMock;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\DirectoryLoaderTest.php;f14;20;5;27;;;;vpos;;v;;r;;d4,21;;b2,0;;m">
</treenode>
<treenode node="setUp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\DirectoryLoaderTest.php;f14;12;5;18;;;;vpos;;v;;r;;d4,13;;b2,0;;m">
</treenode>
<treenode node="testBasePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\DirectoryLoaderTest.php;f11;60;5;71;;;;vpos;;v;;r;;d4,61;;b1,0;;m">
</treenode>
<treenode node="testDefinedFileLoad;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\DirectoryLoaderTest.php;f11;73;5;90;;;;vpos;;v;;r;;d4,74;;b1,0;;m">
</treenode>
<treenode node="testSupports;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\DirectoryLoaderTest.php;f11;38;5;47;;;;vpos;;v;;r;;d4,39;;b1,0;;m">
</treenode>
<treenode node="testUndefinedFileLoad;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\DirectoryLoaderTest.php;f11;49;5;58;;;;vpos;;v;;r;;d4,50;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Doctrine2;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f0;55;1;528;;;;vpos;;vCodeceptionModule;;cDependsOnModule;;cDataMapper;;c;;r&#10;Definition&#10;    class Doctrine2 extends CodeceptionModule implements DependsOnModule, DataMapper&#10;&#10;Description&#10;     Access the database using [Doctrine2 ORM](http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/).;;d0,56;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;150;5;164;;;;vpos;;v;;r;;d4,151;;b1,0;;mtest;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;108;5;115;;;;vpos;;v;;r;;d4,109;;b1,0;;mtest;;p">
</treenode>
<treenode node="_beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;103;5;106;;;;vpos;;v;;r;;d4,104;;b1,0;;msettings;;p">
</treenode>
<treenode node="_depends;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;90;5;96;;;;vpos;;v;;r;;d4,91;;b1,0;;m">
</treenode>
<treenode node="_getEntityManager;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;521;5;527;;;;vpos;;v;;r;;d4,522;;b1,0;;m">
</treenode>
<treenode node="_inject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;98;5;101;;;;vpos;;v;;r;;d4,99;;b1,0;;mdependentModule;;p">
</treenode>
<treenode node="buildAssociationQuery;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f14;490;5;519;;;;vpos;;v;;r&#10;Definition&#10;    buildAssociationQuery($qb, $assoc, $alias, $params)&#10;&#10;Description&#10;     It&apos;s Fuckin Recursive!&#10;&#10;Parameters:&#10;     $qb&#10;     $assoc&#10;     $alias&#10;     $params;;d4,491;;b2,0;;m $qb;;p $assoc;;p $alias;;p $params;;p">
</treenode>
<treenode node="clean;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f14;166;5;177;;;;vpos;;v;;r;;d4,167;;b2,0;;m">
</treenode>
<treenode node="dontSeeInRepository;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;368;5;372;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeInRepository($entity, $params = [])&#10;&#10;Description&#10;     Flushes changes to database and performs `findOneBy()` call for current repository.&#10;&#10;Parameters:&#10;     $entity&#10;    array $params;;d4,369;;b1,0;;m $entity;;parray $params;;p">
</treenode>
<treenode node="flushToDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;183;5;186;;;;vpos;;v;;r&#10;Definition&#10;    flushToDatabase()&#10;&#10;Description&#10;     Performs $em-&gt;flush();s;;d4,184;;b1,0;;m">
</treenode>
<treenode node="grabEntitiesFromRepository;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;436;5;447;;;;vpos;;varray;;r&#10;Definition&#10;    grabEntitiesFromRepository($entity, $params = [])&#10;&#10;Description&#10;     Selects entities from repository. It builds query based on array of parameters. You can use entity associations to build complex queries.&#10;&#10;Parameters:&#10;     $entity&#10;    array $params;;d4,437;;b1,0;;m $entity;;parray $params;;p">
</treenode>
<treenode node="grabEntityFromRepository;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;467;5;478;;;;vpos;;vobject;;r&#10;Definition&#10;    grabEntityFromRepository($entity, $params = [])&#10;&#10;Description&#10;     Selects a single entity from repository. It builds query based on array of parameters. You can use entity associations to build complex queries.&#10;&#10;Parameters:&#10;     $entity&#10;    array $params;;d4,468;;b1,0;;m $entity;;parray $params;;p">
</treenode>
<treenode node="grabFromRepository;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;406;5;416;;;;vpos;;varray;;r&#10;Definition&#10;    grabFromRepository($entity, $field, $params = [])&#10;&#10;Description&#10;     Selects field value from repository. It builds query based on array of parameters. You can use entity associations to build complex queries.&#10;&#10;Parameters:&#10;     $entity&#10;     $field&#10;    array $params;;d4,407;;b1,0;;m $entity;;p $field;;parray $params;;p">
</treenode>
<treenode node="haveFakeRepository;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;239;5;303;;;;vpos;;v;;r&#10;Definition&#10;    haveFakeRepository($classname, $methods = [])&#10;&#10;Description&#10;     Mocks the repository.&#10;&#10;Parameters:&#10;     $classname&#10;    array $methods;;d4,240;;b1,0;;m $classname;;parray $methods;;p">
</treenode>
<treenode node="haveInRepository;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;315;5;335;;;;vpos;;v;;r&#10;Definition&#10;    haveInRepository($entity, array $data)&#10;&#10;Description&#10;     Persists record into repository. This method crates an entity, and sets its properties directly (via reflection). Setters of entity won&apos;t be executed, but you can create almost any entity and save it to database. Returns id using `getId` of newly created entity.;;d4,316;;b1,0;;mentity;;pdata;;p">
</treenode>
<treenode node="persistEntity;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;203;5;216;;;;vpos;;v;;r&#10;Definition&#10;    persistEntity($obj, $values = [])&#10;&#10;Description&#10;     Adds entity to repository and flushes. You can redefine it&apos;s properties with the second parameter.&#10;&#10;Parameters:&#10;     $obj&#10;    array $values;;d4,204;;b1,0;;m $obj;;parray $values;;p">
</treenode>
<treenode node="proceedSeeInRepository;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f14;374;5;385;;;;vpos;;v;;r;;d4,375;;b2,0;;mentity;;pparams;;p">
</treenode>
<treenode node="retrieveEntityManager;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f14;117;5;148;;;;vpos;;v;;r;;d4,118;;b2,0;;m">
</treenode>
<treenode node="seeInRepository;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Doctrine2.php;f11;356;5;360;;;;vpos;;v;;r&#10;Definition&#10;    seeInRepository($entity, $params = [])&#10;&#10;Description&#10;     Flushes changes to database, and executes a query with parameters defined in an array. You can use entity associations to build complex queries.&#10;&#10;Parameters:&#10;     $entity&#10;    array $params;;d4,357;;b1,0;;m $entity;;parray $params;;p">
</treenode>
</treenode>
<treenode node="DotReporter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\DotReporter.php;f0;39;1;109;;;;vpos;;vExtension;;c;;r&#10;Definition&#10;    class DotReporter extends Extension&#10;&#10;Description&#10;     DotReporter provides less verbose output for test execution. Like PHPUnit printer it prints dots &quot;.&quot; for successful testes and &quot;F&quot; for failures.;;d0,40;;b0,0;;m">
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\DotReporter.php;f11;52;5;58;;;;vpos;;v;;r;;d4,53;;b1,0;;m">
</treenode>
<treenode node="beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\DotReporter.php;f11;70;5;73;;;;vpos;;v;;r;;d4,71;;b1,0;;m">
</treenode>
<treenode node="error;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\DotReporter.php;f11;85;5;88;;;;vpos;;v;;r;;d4,86;;b1,0;;me;;p">
</treenode>
<treenode node="fail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\DotReporter.php;f11;80;5;83;;;;vpos;;v;;r;;d4,81;;b1,0;;me;;p">
</treenode>
<treenode node="printChar;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\DotReporter.php;f14;95;5;103;;;;vpos;;v;;r;;d4,96;;b2,0;;mchar;;p">
</treenode>
<treenode node="printFailed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\DotReporter.php;f11;105;5;108;;;;vpos;;v;;r;;d4,106;;b1,0;;mevent;;p">
</treenode>
<treenode node="skipped;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\DotReporter.php;f11;90;5;93;;;;vpos;;v;;r;;d4,91;;b1,0;;m">
</treenode>
<treenode node="success;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\DotReporter.php;f11;75;5;78;;;;vpos;;v;;r;;d4,76;;b1,0;;m">
</treenode>
</treenode>
<treenode node="DryRun;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\DryRun.php;f0;29;1;133;;;;vpos;;vCommand;;cConfig;;cStyle;;c;;r&#10;Definition&#10;    class DryRun extends Command&#10;&#10;Description&#10;     Shows step by step execution process for scenario driven tests without actually running them.;;d0,30;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\DryRun.php;f14;34;5;43;;;;vpos;;v;;r;;d4,35;;b2,0;;m">
</treenode>
<treenode node="dryRunTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\DryRun.php;f14;112;5;132;;;;vpos;;v;;r&#10;Definition&#10;    dryRunTest(OutputInterface $output, EventDispatcher $dispatcher, Test $test)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    OutputInterface $output&#10;     $dispatcher&#10;     $test;;d4,113;;b2,0;;mOutputInterface $output;;p $dispatcher;;p $test;;p">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\DryRun.php;f11;50;5;93;;;;vpos;;v;;r;;d4,51;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\DryRun.php;f11;45;5;48;;;;vpos;;v;;r;;d4,46;;b1,0;;m">
</treenode>
<treenode node="matchTestFromFilename;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\DryRun.php;f14;96;5;105;;;;vpos;;v;;r;;d4,97;;b2,0;;mfilename;;ptests_path;;p">
</treenode>
</treenode>
<treenode node="DryRunCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\DryRunCest.php;f0;1;1;24;;;;vpos;;v;;r;;d0,2;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\DryRunCest.php;f11;3;5;6;;;;vpos;;v;;r;;d4,4;;b1,0;;mI;;p">
</treenode>
<treenode node="runCestWithExamples;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\DryRunCest.php;f11;8;5;12;;;;vpos;;v;;r;;d4,9;;b1,0;;mI;;p">
</treenode>
<treenode node="runFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\DryRunCest.php;f11;14;5;23;;;;vpos;;v;;r;;d4,15;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="DummyKernel;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Lumen\DummyKernel.php;f0;9;1;15;;;;vpos;;vHttpKernelInterface;;c;;r&#10;Definition&#10;    class DummyKernel implements HttpKernelInterface&#10;&#10;Description&#10;     Dummy kernel to satisfy the parent constructor of the LumenConnector class.;;d0,10;;b0,0;;m">
<treenode node="handle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Lumen\DummyKernel.php;f11;11;5;14;;;;vpos;;v;;r;;d4,12;;b1,0;;mrequest;;ptype;;pcatch;;p">
</treenode>
</treenode>
<treenode node="ElementNotFound;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ElementNotFound.php;f0;5;1;12;;;;vpos;;vAssertionFailedError;;c;;r;;d0,6;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ElementNotFound.php;f11;7;5;11;;;;vpos;;v;;r;;d4,8;;b1,0;;mselector;;pmessage;;p">
</treenode>
</treenode>
<treenode node="EmphStrongTrait;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\EmphStrongTrait.php;f0;12;1;79;;;;vpos;;v;;r&#10;Definition&#10;    trait EmphStrongTrait&#10;&#10;Description&#10;     Adds inline emphasizes and strong elements;;d0,13;;b0,0;;m">
<treenode node="parseEmphStrong;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\EmphStrongTrait.php;f11;19;2;68;;;;vpos;;v;;r&#10;Definition&#10;    parseEmphStrong($text)&#10;&#10;Description&#10;     Parses empathized and strong elements.;;d1,20;;b2,0;;mtext;;p">
</treenode>
<treenode node="renderEmph;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\EmphStrongTrait.php;f11;75;2;78;;;;vpos;;v;;r;;d1,76;;b2,0;;mblock;;p">
</treenode>
<treenode node="renderStrong;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\EmphStrongTrait.php;f11;70;2;73;;;;vpos;;v;;r;;d1,71;;b2,0;;mblock;;p">
</treenode>
</treenode>
<treenode node="ErrorHandler;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ErrorHandler.php;f0;8;1;150;;;;vpos;;vEventSubscriberInterface;;cStaticEvents;;c;;r;;d0,9;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ErrorHandler.php;f11;37;5;40;;;;vpos;;v;;r;;d4,38;;b1,0;;m">
</treenode>
<treenode node="errorHandler;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ErrorHandler.php;f11;66;5;83;;;;vpos;;v;;r;;d4,67;;b1,0;;merrno;;perrstr;;perrfile;;perrline;;pcontext;;p">
</treenode>
<treenode node="handle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ErrorHandler.php;f11;47;5;64;;;;vpos;;v;;r;;d4,48;;b1,0;;me;;p">
</treenode>
<treenode node="handleDeprecationError;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ErrorHandler.php;f12;139;5;149;;;;vpos;;v;;r;;d4,140;;b3,0;;mtype;;pmessage;;pfile;;pline;;pcontext;;p">
</treenode>
<treenode node="onFinish;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ErrorHandler.php;f11;42;5;45;;;;vpos;;v;;r;;d4,43;;b1,0;;me;;p">
</treenode>
<treenode node="registerDeprecationErrorHandler;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ErrorHandler.php;f12;116;5;137;;;;vpos;;v;;r;;d4,117;;b3,0;;m">
</treenode>
<treenode node="shutdownHandler;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ErrorHandler.php;f11;85;5;114;;;;vpos;;v;;r;;d4,86;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ErrorLogger;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\ErrorLogger.php;f0;5;1;25;;;;vpos;;v;;r;;d0,6;;b0,0;;m">
<treenode node="errorLoggerEnd;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\ErrorLogger.php;f11;12;5;24;;;;vpos;;v;;r;;d4,13;;b1,0;;mstatus;;ptime;;pexception;;p">
</treenode>
<treenode node="getTestResultObject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\ErrorLogger.php;f20;10;50;10;;;;vpos;;v;;r&#10;Description&#10;      \PHPUnit\Framework\TestResult;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Events;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f6;8;1;126;;;;vpos;;v;;r&#10;Definition&#10;    class Events&#10;&#10;Description&#10;     Contains all events dispatched by Codeception.;;d0,9;;b0,0;;m">
<treenode node="MODULE_INIT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;22;21;22;;;;vpos;;v;;r&#10;Description&#10;     The &lt;b&gt;MODULE_INIT&lt;/b&gt; event occurs before modules are initialized.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="RESULT_PRINT_AFTER;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;125;28;125;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\PrintResultEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STEP_AFTER;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;64;20;64;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\StepEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STEP_BEFORE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;59;21;59;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\StepEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SUITE_AFTER;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;44;21;44;;;;vpos;;v;;r&#10;Description&#10;     The &lt;b&gt;SUITE_AFTER&lt;/b&gt; event occurs after suite has been executed.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SUITE_BEFORE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;37;22;37;;;;vpos;;v;;r&#10;Description&#10;     The &lt;b&gt;SUITE_BEFORE&lt;/b&gt; event occurs before suite is executed.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SUITE_INIT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;30;20;30;;;;vpos;;v;;r&#10;Description&#10;     The &lt;b&gt;SUITE_INIT&lt;/b&gt; event occurs when suite is initialized. Modules are created and initialized, but Actor class is not loaded.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEST_AFTER;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;110;20;110;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\TestEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEST_BEFORE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;54;21;54;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\TestEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEST_END;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;115;18;115;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\TestEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEST_ERROR;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;78;20;78;;;;vpos;;v;;r&#10;Description&#10;     The &lt;b&gt;TEST_ERROR&lt;/b&gt; event occurs whenever test got an error while being executed.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEST_FAIL;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;71;19;71;;;;vpos;;v;;r&#10;Description&#10;     The &lt;b&gt;TEST_FAIL&lt;/b&gt; event occurs whenever test has failed.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEST_FAIL_PRINT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;120;25;120;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\FailEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEST_INCOMPLETE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;88;25;88;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\FailEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEST_PARSED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;83;21;83;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\TestEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEST_SKIPPED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;93;22;93;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\FailEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEST_START;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;49;20;49;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\TestEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEST_SUCCESS;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;105;22;105;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\TestEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEST_WARNING;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f9;99;22;99;;;;vpos;;v;;r&#10;Description&#10;     The event listener method receives a { link Codeception\Event\FailEvent} instance.;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Events.php;f12;13;5;15;;;;vpos;;v;;r&#10;Definition&#10;    __construct()&#10;&#10;Description&#10;     Private constructor. This class cannot be instantiated.;;d4,14;;b3,0;;m">
</treenode>
</treenode>
<treenode node="Example;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Example.php;f0;5;1;104;;;;vpos;;vArrayAccess;;cCountable;;cIteratorAggregate;;c;;r;;d0,6;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Example.php;f11;9;5;12;;;;vpos;;v;;r;;d4,10;;b1,0;;mdata;;p">
</treenode>
<treenode node="count;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Example.php;f11;88;5;91;;;;vpos;;vint;;r&#10;Definition&#10;    count()&#10;&#10;Description&#10;     Count elements of an object&#10;&#10;Return:&#10;   The custom count as an integer;;d4,89;;b1,0;;m">
</treenode>
<treenode node="getIterator;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Example.php;f11;100;5;103;;;;vpos;;vTraversable;;r&#10;Definition&#10;    getIterator()&#10;&#10;Description&#10;     Retrieve an external iterator&#10;&#10;Return:&#10;   An instance of an object implementing &lt;b&gt;Iterator&lt;/b&gt; or;;d4,101;;b1,0;;m">
</treenode>
<treenode node="offsetExists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Example.php;f11;26;5;29;;;;vpos;;vboolean;;r&#10;Definition&#10;    offsetExists($offset)&#10;&#10;Description&#10;     Whether a offset exists&#10;&#10;Parameters:&#10;    mixed $offset - &lt;p&gt;&#10;&#10;Return:&#10;   true on success or false on failure;;d4,27;;b1,0;;mmixed $offset;;p">
</treenode>
<treenode node="offsetGet;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Example.php;f11;40;5;46;;;;vpos;;vmixed;;r&#10;Definition&#10;    offsetGet($offset)&#10;&#10;Description&#10;     Offset to retrieve&#10;&#10;Parameters:&#10;    mixed $offset - &lt;p&gt;&#10;&#10;Return:&#10;   Can return all value types;;d4,41;;b1,0;;mmixed $offset;;p">
</treenode>
<treenode node="offsetSet;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Example.php;f11;60;5;63;;;;vpos;;vvoid;;r&#10;Definition&#10;    offsetSet($offset, $value)&#10;&#10;Description&#10;     Offset to set&#10;&#10;Parameters:&#10;    mixed $offset - &lt;p&gt;&#10;    mixed $value - &lt;p&gt;;;d4,61;;b1,0;;mmixed $offset;;pmixed $value;;p">
</treenode>
<treenode node="offsetUnset;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Example.php;f11;74;5;77;;;;vpos;;vvoid;;r&#10;Definition&#10;    offsetUnset($offset)&#10;&#10;Description&#10;     Offset to unset&#10;&#10;Parameters:&#10;    mixed $offset - &lt;p&gt;;;d4,75;;b1,0;;mmixed $offset;;p">
</treenode>
</treenode>
<treenode node="ExampleNode;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f0;17;1;273;;;;vpos;;vScenarioInterface;;c;;r&#10;Definition&#10;    class ExampleNode implements ScenarioInterface&#10;&#10;Description&#10;     Represents Gherkin Outline Example.;;d0,18;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f11;58;5;66;;;;vpos;;v;;r&#10;Definition&#10;    __construct($title, array $tags, $outlineSteps, array $tokens, $line, $outlineTitle = null)&#10;&#10;Description&#10;     Initializes outline.&#10;&#10;Parameters:&#10;    string $title&#10;    string[] $tags&#10;    StepNode[] $outlineSteps&#10;    string[] $tokens&#10;    integer $line&#10;    string|null $outlineTitle;;d4,59;;b1,0;;mstring $title;;pstring[] $tags;;pStepNode[] $outlineSteps;;pstring[] $tokens;;pinteger $line;;pstring|null $outlineTitle;;p">
</treenode>
<treenode node="createExampleSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f14;185;5;199;;;;vpos;;vStepNode;;r&#10;Definition&#10;    createExampleSteps()&#10;&#10;Description&#10;     Creates steps for this example from abstract outline steps.&#10;&#10;Return:&#10;   [];;d4,186;;b2,0;;m">
</treenode>
<treenode node="getKeyword;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f11;83;5;86;;;;vpos;;vstring;;r&#10;Definition&#10;    getKeyword()&#10;&#10;Description&#10;     Returns node keyword.;;d4,84;;b1,0;;m">
</treenode>
<treenode node="getLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f11;165;5;168;;;;vpos;;vinteger;;r&#10;Definition&#10;    getLine()&#10;&#10;Description&#10;     Returns outline declaration line number.;;d4,166;;b1,0;;m">
</treenode>
<treenode node="getNodeType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f11;73;5;76;;;;vpos;;vstring;;r&#10;Definition&#10;    getNodeType()&#10;&#10;Description&#10;     Returns node type string;;d4,74;;b1,0;;m">
</treenode>
<treenode node="getOutlineTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f11;175;5;178;;;;vpos;;vstring;;r&#10;Definition&#10;    getOutlineTitle()&#10;&#10;Description&#10;     Returns outline title.;;d4,176;;b1,0;;m">
</treenode>
<treenode node="getSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f11;145;5;148;;;;vpos;;vStepNode;;r&#10;Definition&#10;    getSteps()&#10;&#10;Description&#10;     Returns outline steps.&#10;&#10;Return:&#10;   [];;d4,146;;b1,0;;m">
</treenode>
<treenode node="getTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f11;125;5;128;;;;vpos;;vstring;;r&#10;Definition&#10;    getTags()&#10;&#10;Description&#10;     Returns outline tags (including inherited from feature).&#10;&#10;Return:&#10;   [];;d4,126;;b1,0;;m">
</treenode>
<treenode node="getTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f11;93;5;96;;;;vpos;;vstring;;r&#10;Definition&#10;    getTitle()&#10;&#10;Description&#10;     Returns example title.;;d4,94;;b1,0;;m">
</treenode>
<treenode node="getTokens;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f11;155;5;158;;;;vpos;;vstring;;r&#10;Definition&#10;    getTokens()&#10;&#10;Description&#10;     Returns example tokens.&#10;&#10;Return:&#10;   [];;d4,156;;b1,0;;m">
</treenode>
<treenode node="hasSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f11;135;5;138;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasSteps()&#10;&#10;Description&#10;     Checks if outline has steps.;;d4,136;;b1,0;;m">
</treenode>
<treenode node="hasTag;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f11;105;5;108;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasTag($tag)&#10;&#10;Description&#10;     Checks if outline is tagged with tag.&#10;&#10;Parameters:&#10;    string $tag;;d4,106;;b1,0;;mstring $tag;;p">
</treenode>
<treenode node="hasTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f11;115;5;118;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasTags()&#10;&#10;Description&#10;     Checks if outline has tags (both inherited from feature and own).;;d4,116;;b1,0;;m">
</treenode>
<treenode node="replaceArgumentsTokens;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f14;208;5;220;;;;vpos;;vArgumentInterface;;r&#10;Definition&#10;    replaceArgumentsTokens(array $arguments)&#10;&#10;Description&#10;     Replaces tokens in arguments with row values.&#10;&#10;Parameters:&#10;    ArgumentInterface[] $arguments&#10;&#10;Return:&#10;   [];;d4,209;;b2,0;;mArgumentInterface[] $arguments;;p">
</treenode>
<treenode node="replacePyStringArgumentTokens;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f14;248;5;256;;;;vpos;;vPyStringNode;;r&#10;Definition&#10;    replacePyStringArgumentTokens(PyStringNode $argument)&#10;&#10;Description&#10;     Replaces tokens in PyString with row values.&#10;&#10;Parameters:&#10;    PyStringNode $argument;;d4,249;;b2,0;;mPyStringNode $argument;;p">
</treenode>
<treenode node="replaceTableArgumentTokens;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f14;229;5;239;;;;vpos;;vTableNode;;r&#10;Definition&#10;    replaceTableArgumentTokens(TableNode $argument)&#10;&#10;Description&#10;     Replaces tokens in table with row values.&#10;&#10;Parameters:&#10;    TableNode $argument;;d4,230;;b2,0;;mTableNode $argument;;p">
</treenode>
<treenode node="replaceTextTokens;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleNode.php;f14;265;5;272;;;;vpos;;vstring;;r&#10;Definition&#10;    replaceTextTokens($text)&#10;&#10;Description&#10;     Replaces tokens in text with row values.&#10;&#10;Parameters:&#10;    string $text;;d4,266;;b2,0;;mstring $text;;p">
</treenode>
</treenode>
<treenode node="ExampleNodeTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\ExampleNodeTest.php;f0;10;1;91;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,11;;b0,0;;m">
<treenode node="testCreateExampleSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\ExampleNodeTest.php;f11;12;5;59;;;;vpos;;v;;r;;d4,13;;b1,0;;m">
</treenode>
<treenode node="testCreateExampleStepsWithArguments;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\ExampleNodeTest.php;f11;61;5;90;;;;vpos;;v;;r;;d4,62;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ExampleTableNode;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleTableNode.php;f0;17;1;56;;;;vpos;;vTableNode;;c;;r&#10;Definition&#10;    class ExampleTableNode extends TableNode&#10;&#10;Description&#10;     Represents Gherkin Outline Example Table.;;d0,18;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleTableNode.php;f11;30;5;35;;;;vpos;;v;;r&#10;Definition&#10;    __construct(array $table, $keyword)&#10;&#10;Description&#10;     Initializes example table.&#10;&#10;Parameters:&#10;    array $table - Table in form of [$rowLineNumber =&gt; [$val1, $val2, $val3]]&#10;    string $keyword;;d4,31;;b1,0;;marray $table;;pstring $keyword;;p">
</treenode>
<treenode node="getKeyword;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleTableNode.php;f11;52;5;55;;;;vpos;;vstring;;r&#10;Definition&#10;    getKeyword()&#10;&#10;Description&#10;     Returns example table keyword.;;d4,53;;b1,0;;m">
</treenode>
<treenode node="getNodeType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ExampleTableNode.php;f11;42;5;45;;;;vpos;;vstring;;r&#10;Definition&#10;    getNodeType()&#10;&#10;Description&#10;     Returns node type string;;d4,43;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ExceptionHandlerDecorator;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5\ExceptionHandlerDecorator.php;f0;11;1;105;;;;vpos;;vExceptionHandlerContract;;c;;r&#10;Definition&#10;    class ExceptionHandlerDecorator implements ExceptionHandlerContract&#10;&#10;Description&#10;     Class ExceptionHandlerDecorator;;d0,12;;b0,0;;m">
<treenode node="__call;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5\ExceptionHandlerDecorator.php;f11;101;5;104;;;;vpos;;vmixed;;r&#10;Definition&#10;    __call($method, $args)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $method&#10;    array $args;;d4,102;;b1,0;;mstring $method;;parray $args;;p">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5\ExceptionHandlerDecorator.php;f11;28;5;31;;;;vpos;;v;;r&#10;Definition&#10;    __construct($laravelExceptionHandler)&#10;&#10;Description&#10;     ExceptionHandlerDecorator constructor.&#10;&#10;Parameters:&#10;    object $laravelExceptionHandler;;d4,29;;b1,0;;mobject $laravelExceptionHandler;;p">
</treenode>
<treenode node="exceptionHandlingDisabled;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5\ExceptionHandlerDecorator.php;f11;36;5;39;;;;vpos;;v;;r&#10;Definition&#10;    exceptionHandlingDisabled($exceptionHandlingDisabled)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    boolean $exceptionHandlingDisabled;;d4,37;;b1,0;;mboolean $exceptionHandlingDisabled;;p">
</treenode>
<treenode node="isSymfonyExceptionHandlerOutput;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5\ExceptionHandlerDecorator.php;f12;78;5;82;;;;vpos;;vbool;;r&#10;Definition&#10;    isSymfonyExceptionHandlerOutput($content)&#10;&#10;Description&#10;     Check if the response content is HTML output of the Symfony exception handler class.&#10;&#10;Parameters:&#10;    string $content;;d4,79;;b3,0;;mstring $content;;p">
</treenode>
<treenode node="render;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5\ExceptionHandlerDecorator.php;f11;58;5;70;;;;vpos;;v;;r&#10;Definition&#10;    render($request, Exception $e)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $request&#10;    Exception $e;;d4,59;;b1,0;;m $request;;pException $e;;p">
</treenode>
<treenode node="renderForConsole;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5\ExceptionHandlerDecorator.php;f11;91;5;94;;;;vpos;;vvoid;;r&#10;Definition&#10;    renderForConsole($output, Exception $e)&#10;&#10;Description&#10;     Render an exception to the console.&#10;&#10;Parameters:&#10;    \Symfony\Component\Console\Output\OutputInterface $output&#10;    \Exception $e;;d4,92;;b1,0;;m\Symfony\Component\Console\Output\OutputInterface $output;;p\Exception $e;;p">
</treenode>
<treenode node="report;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5\ExceptionHandlerDecorator.php;f11;47;5;50;;;;vpos;;vvoid;;r&#10;Definition&#10;    report(Exception $e)&#10;&#10;Description&#10;     Report or log an exception.&#10;&#10;Parameters:&#10;    \Exception $e;;d4,48;;b1,0;;m\Exception $e;;p">
</treenode>
</treenode>
<treenode node="Executor;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Executor.php;f0;6;1;24;;;;vpos;;vCodeceptionStep;;c;;r;;d0,7;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Executor.php;f11;11;5;16;;;;vpos;;v;;r;;d4,12;;b1,0;;mcallable;;parguments;;p">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Executor.php;f11;18;5;23;;;;vpos;;v;;r;;d4,19;;b1,0;;mcontainer;;p">
</treenode>
</treenode>
<treenode node="Extension;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f9;18;1;133;;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f13;42;5;44;;;;vpos;;vEventSubscriberInterface;;c;;r&#10;Definition&#10;    class Extension implements EventSubscriberInterface&#10;&#10;Description&#10;     A base class for all Codeception Extensions and GroupObjects;;d0,19;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f11;26;5;32;;;;vpos;;v;;r;;d4,27;;b1,0;;mconfig;;poptions;;p">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f11;72;5;75;;;;vpos;;v;;r&#10;Definition&#10;    _initialize()&#10;&#10;Description&#10;     You can do all preparations here. No need to override constructor. Also you can skip calling `_reconfigure` if you don&apos;t need to.;;d4,73;;b1,0;;m">
</treenode>
<treenode node="_reconfigure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f11;61;5;66;;;;vpos;;v;;r&#10;Definition&#10;    _reconfigure($config = [])&#10;&#10;Description&#10;     Pass config variables that should be injected into global config.&#10;&#10;Parameters:&#10;    array $config;;d4,62;;b1,0;;marray $config;;p">
</treenode>
<treenode node="getCurrentModuleNames;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f11;96;5;99;;;;vpos;;v;;r;;d4,97;;b1,0;;m">
</treenode>
<treenode node="getDataDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f11;119;5;122;;;;vpos;;v;;r;;d4,120;;b1,0;;m">
</treenode>
<treenode node="getGlobalConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f11;129;5;132;;;;vpos;;v;;r;;d4,130;;b1,0;;m">
</treenode>
<treenode node="getLogDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f11;114;5;117;;;;vpos;;v;;r;;d4,115;;b1,0;;m">
</treenode>
<treenode node="getModule;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f11;101;5;107;;;;vpos;;v;;r;;d4,102;;b1,0;;mname;;p">
</treenode>
<treenode node="getRootDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f11;124;5;127;;;;vpos;;v;;r;;d4,125;;b1,0;;m">
</treenode>
<treenode node="getSubscribedEvents;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f18;35;5;49;;;;vpos;;v;;r;;d4,36;;b1,5;;m">
</treenode>
<treenode node="getTestsDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f11;109;5;112;;;;vpos;;v;;r;;d4,110;;b1,0;;m">
</treenode>
<treenode node="hasModule;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f11;91;5;94;;;;vpos;;v;;r;;d4,92;;b1,0;;mname;;p">
</treenode>
<treenode node="receiveModuleContainer;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f11;51;5;54;;;;vpos;;v;;r;;d4,52;;b1,0;;me;;p">
</treenode>
<treenode node="write;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f14;77;5;82;;;;vpos;;v;;r;;d4,78;;b2,0;;mmessage;;p">
</treenode>
<treenode node="writeln;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Extension.php;f14;84;5;89;;;;vpos;;v;;r;;d4,85;;b2,0;;mmessage;;p">
</treenode>
</treenode>
<treenode node="ExtensionException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ExtensionException.php;f0;3;1;13;;;;vpos;;vException;;c;;r;;d0,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ExtensionException.php;f11;5;5;12;;;;vpos;;v;;r;;d4,6;;b1,0;;mextension;;pmessage;;pprevious;;p">
</treenode>
</treenode>
<treenode node="ExtensionLoader;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ExtensionLoader.php;f0;10;1;127;;;;vpos;;vEventSubscriberInterface;;cStaticEvents;;c;;r;;d0,11;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ExtensionLoader.php;f11;30;5;34;;;;vpos;;v;;r;;d4,31;;b1,0;;mdispatcher;;p">
</treenode>
<treenode node="bootExtensions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ExtensionLoader.php;f14;73;5;98;;;;vpos;;v;;r;;d4,74;;b2,0;;mconfig;;p">
</treenode>
<treenode node="bootGlobalExtensions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ExtensionLoader.php;f11;36;5;40;;;;vpos;;v;;r;;d4,37;;b1,0;;moptions;;p">
</treenode>
<treenode node="getExtensionConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ExtensionLoader.php;f12;100;5;126;;;;vpos;;v;;r;;d4,101;;b3,0;;mextension;;pconfig;;p">
</treenode>
<treenode node="registerGlobalExtensions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ExtensionLoader.php;f11;42;5;47;;;;vpos;;v;;r;;d4,43;;b1,0;;m">
</treenode>
<treenode node="registerSuiteExtensions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ExtensionLoader.php;f11;49;5;63;;;;vpos;;v;;r;;d4,50;;b1,0;;me;;p">
</treenode>
<treenode node="stopSuiteExtensions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\ExtensionLoader.php;f11;65;5;71;;;;vpos;;v;;r;;d4,66;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ExtensionsCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ExtensionsCest.php;f0;2;1;91;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
<treenode node="checkIfExtensionsReceiveCorrectOptions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ExtensionsCest.php;f11;53;5;65;;;;vpos;;v;;r;;d4,54;;b1,0;;mI;;p">
</treenode>
<treenode node="dynamicallyEnablingExtensions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ExtensionsCest.php;f11;23;5;30;;;;vpos;;v;;r;;d4,24;;b1,0;;mI;;p">
</treenode>
<treenode node="loadExtensionByOverride;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ExtensionsCest.php;f11;15;5;21;;;;vpos;;v;;r;;d4,16;;b1,0;;mI;;p">
</treenode>
<treenode node="reRunFailedTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ExtensionsCest.php;f11;32;5;51;;;;vpos;;v;;r;;d4,33;;b1,0;;mI;;p">
</treenode>
<treenode node="runPerSuiteExtensions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ExtensionsCest.php;f11;67;5;78;;;;vpos;;v;;r;;d4,68;;b1,0;;mI;;p">
</treenode>
<treenode node="runPerSuiteExtensionsInEnvironment;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ExtensionsCest.php;f11;80;5;88;;;;vpos;;v;;r;;d4,81;;b1,0;;mI;;p">
</treenode>
<treenode node="useAlternativeFormatter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\ExtensionsCest.php;f11;5;5;13;;;;vpos;;v;;r;;d4,6;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="ExternalUrlException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ExternalUrlException.php;f0;4;1;6;;;;vpos;;vException;;c;;r;;d0,5;;b0,0;;m">
</treenode>
<treenode node="Facebook;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f0;83;1;324;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Facebook.php;f0;9;1;175;;;;vpos;;vBaseModule;;cDependsOnModule;;cRequiresPackage;;c;;r&#10;Definition&#10;    class Facebook extends BaseModule implements DependsOnModule, RequiresPackage&#10;&#10;Description&#10;     Provides testing for projects integrated with Facebook API. Relies on Facebook&apos;s tool Test User API.;;d0,84;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Facebook.php;f11;42;5;59;;;;vpos;;v;;r&#10;Definition&#10;    __construct($config, $logCallback = null)&#10;&#10;Description&#10;     Facebook constructor.&#10;&#10;Parameters:&#10;    array $config&#10;    callable|null $logCallback;;d4,43;;b1,0;;marray $config;;pcallable|null $logCallback;;p">
</treenode>
<treenode node="_afterSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;168;5;171;;;;vpos;;v;;r;;d4,169;;b1,0;;m">
</treenode>
<treenode node="_depends;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;122;5;125;;;;vpos;;v;;r;;d4,123;;b1,0;;m">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;141;5;166;;;;vpos;;v;;r;;d4,142;;b1,0;;m">
</treenode>
<treenode node="_inject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;127;5;130;;;;vpos;;v;;r;;d4,128;;b1,0;;mbrowserModule;;p">
</treenode>
<treenode node="_requires;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;117;5;120;;;;vpos;;v;;r;;d4,118;;b1,0;;m">
</treenode>
<treenode node="createTestUser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Facebook.php;f11;67;5;80;;;;vpos;;varray;;r&#10;Definition&#10;    createTestUser($name, array $permissions)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $name&#10;    array $permissions;;d4,68;;b1,0;;mstring $name;;parray $permissions;;p">
</treenode>
<treenode node="deleteTestUser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f14;132;5;139;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Facebook.php;f11;82;5;85;;;;vpos;;v;;r;;d4,133;;b2,0;;m">
</treenode>
<treenode node="executeFacebookRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Facebook.php;f12;143;5;174;;;;vpos;;v;;r&#10;Definition&#10;    executeFacebookRequest($method, $endpoint, array $parameters = [], $token = null)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $method&#10;    string $endpoint&#10;    array $parameters&#10;    string $token;;d4,144;;b3,0;;mstring $method;;pstring $endpoint;;parray $parameters;;pstring $token;;p">
</treenode>
<treenode node="getLastPostsForTestUser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Facebook.php;f11;99;5;109;;;;vpos;;v;;r;;d4,100;;b1,0;;mtestUserAccessToken;;p">
</treenode>
<treenode node="getTestUserInfo;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Facebook.php;f11;87;5;97;;;;vpos;;v;;r;;d4,88;;b1,0;;mtestUserAccessToken;;p">
</treenode>
<treenode node="getVisitedPlaceTagForTestUser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Facebook.php;f11;111;5;121;;;;vpos;;v;;r;;d4,112;;b1,0;;mplaceId;;ptestUserAccessToken;;p">
</treenode>
<treenode node="grabFacebookTestUserAccessToken;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;226;5;229;;;;vpos;;vstring;;r&#10;Definition&#10;    grabFacebookTestUserAccessToken()&#10;&#10;Description&#10;     Returns the test user access token.;;d4,227;;b1,0;;m">
</treenode>
<treenode node="grabFacebookTestUserEmail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;246;5;249;;;;vpos;;vstring;;r&#10;Definition&#10;    grabFacebookTestUserEmail()&#10;&#10;Description&#10;     Returns the test user email.;;d4,247;;b1,0;;m">
</treenode>
<treenode node="grabFacebookTestUserId;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;236;5;239;;;;vpos;;vstring;;r&#10;Definition&#10;    grabFacebookTestUserId()&#10;&#10;Description&#10;     Returns the test user id.;;d4,237;;b1,0;;m">
</treenode>
<treenode node="grabFacebookTestUserLoginUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;256;5;259;;;;vpos;;vstring;;r&#10;Definition&#10;    grabFacebookTestUserLoginUrl()&#10;&#10;Description&#10;     Returns URL for test user auto-login.;;d4,257;;b1,0;;m">
</treenode>
<treenode node="grabFacebookTestUserName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;271;5;278;;;;vpos;;vstring;;r&#10;Definition&#10;    grabFacebookTestUserName()&#10;&#10;Description&#10;     Returns the test user name.;;d4,272;;b1,0;;m">
</treenode>
<treenode node="grabFacebookTestUserPassword;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;261;5;264;;;;vpos;;v;;r;;d4,262;;b1,0;;m">
</treenode>
<treenode node="haveFacebookTestUserAccount;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;180;5;193;;;;vpos;;v;;r&#10;Definition&#10;    haveFacebookTestUserAccount($renew = false)&#10;&#10;Description&#10;     Get facebook test user be created.&#10;&#10;Parameters:&#10;    bool $renew - true if the test user should be recreated;;d4,181;;b1,0;;mbool $renew;;p">
</treenode>
<treenode node="haveTestUserLoggedInOnFacebook;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;201;5;219;;;;vpos;;v;;r&#10;Definition&#10;    haveTestUserLoggedInOnFacebook()&#10;&#10;Description&#10;     Get facebook test user be logged in on facebook. This is done by going to facebook.com;;d4,202;;b1,0;;m">
</treenode>
<treenode node="postToFacebookAsTestUser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;285;5;288;;;;vpos;;v;;r&#10;Definition&#10;    postToFacebookAsTestUser($params)&#10;&#10;Description&#10;     Please, note that you must have publish_actions permission to be able to publish to user&apos;s feed.&#10;&#10;Parameters:&#10;    array $params;;d4,286;;b1,0;;marray $params;;p">
</treenode>
<treenode node="seePostOnFacebookWithAttachedPlace;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;296;5;302;;;;vpos;;v;;r&#10;Definition&#10;    seePostOnFacebookWithAttachedPlace($placeId)&#10;&#10;Description&#10;      Please, note that you must have publish_actions permission to be able to publish to user&apos;s feed.&#10;&#10;Parameters:&#10;    string $placeId - Place identifier to be verified against user published posts;;d4,297;;b1,0;;mstring $placeId;;p">
</treenode>
<treenode node="seePostOnFacebookWithMessage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Facebook.php;f11;310;5;323;;;;vpos;;v;;r&#10;Definition&#10;    seePostOnFacebookWithMessage($message)&#10;&#10;Description&#10;      Please, note that you must have publish_actions permission to be able to publish to user&apos;s feed.&#10;&#10;Parameters:&#10;    string $message - published post to be verified against the actual post on facebook;;d4,311;;b1,0;;mstring $message;;p">
</treenode>
<treenode node="sendPostToFacebook;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Facebook.php;f11;123;5;133;;;;vpos;;v;;r;;d4,124;;b1,0;;mtestUserAccessToken;;pparameters;;p">
</treenode>
</treenode>
<treenode node="Fail;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\Fail.php;f0;3;1;6;;;;vpos;;vAssertionFailedError;;c;;r;;d0,4;;b0,0;;m">
</treenode>
<treenode node="FailEvent;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\FailEvent.php;f0;3;1;31;;;;vpos;;vTestEvent;;c;;r;;d0,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\FailEvent.php;f11;15;5;20;;;;vpos;;v;;r;;d4,16;;b1,0;;mtest;;ptime;;pe;;pcount;;p">
</treenode>
<treenode node="getCount;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\FailEvent.php;f11;22;5;25;;;;vpos;;v;;r;;d4,23;;b1,0;;m">
</treenode>
<treenode node="getFail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\FailEvent.php;f11;27;5;30;;;;vpos;;v;;r;;d4,28;;b1,0;;m">
</treenode>
</treenode>
<treenode node="FailFast;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\FailFast.php;f0;7;1;20;;;;vpos;;vEventSubscriberInterface;;cStaticEvents;;c;;r;;d0,8;;b0,0;;m">
<treenode node="stopOnFail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\FailFast.php;f11;15;5;19;;;;vpos;;v;;r;;d4,16;;b1,0;;me;;p">
</treenode>
</treenode>
<treenode node="Feature;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Feature.php;f0;5;1;30;;;;vpos;;v;;r;;d0,6;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Feature.php;f11;19;5;22;;;;vpos;;v;;r;;d4,20;;b1,0;;mname;;p">
</treenode>
<treenode node="produce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Feature.php;f11;24;5;29;;;;vpos;;v;;r;;d4,25;;b1,0;;m">
</treenode>
</treenode>
<treenode node="FeatureNode;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f0;17;1;242;;;;vpos;;vKeywordNodeInterface;;cTaggedNodeInterface;;c;;r&#10;Definition&#10;    class FeatureNode implements KeywordNodeInterface, TaggedNodeInterface&#10;&#10;Description&#10;     Represents Gherkin Feature.;;d0,18;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;69;5;89;;;;vpos;;v;;r&#10;Definition&#10;    __construct(&#10;        $title,&#10;        $description,&#10;        array $tags,&#10;        BackgroundNode $background = null,&#10;        array $scenarios,&#10;        $keyword,&#10;        $language,&#10;        $file,&#10;        $line&#10;    )&#10;&#10;Description&#10;     Initializes feature.&#10;&#10;Parameters:&#10;    null|string $title&#10;    null|string $description&#10;    string[] $tags&#10;    null|BackgroundNode $background&#10;    ScenarioInterface[] $scenarios&#10;    string $keyword&#10;    string $language&#10;    null|string $file&#10;    integer $line;;d6,79;;b1,0;;mnull|string $title;;pnull|string $description;;pstring[] $tags;;pnull|BackgroundNode $background;;pScenarioInterface[] $scenarios;;pstring $keyword;;pstring $language;;pnull|string $file;;pinteger $line;;p">
</treenode>
<treenode node="getBackground;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;178;5;181;;;;vpos;;vnull;;r&#10;Definition&#10;    getBackground()&#10;&#10;Description&#10;     Returns feature background.&#10;&#10;Return:&#10;   |BackgroundNode;;d4,179;;b1,0;;m">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;126;5;129;;;;vpos;;vnull;;r&#10;Definition&#10;    getDescription()&#10;&#10;Description&#10;     Returns feature description.&#10;&#10;Return:&#10;   |string;;d4,127;;b1,0;;m">
</treenode>
<treenode node="getFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;228;5;231;;;;vpos;;vnull;;r&#10;Definition&#10;    getFile()&#10;&#10;Description&#10;     Returns feature file.&#10;&#10;Return:&#10;   |string;;d4,229;;b1,0;;m">
</treenode>
<treenode node="getKeyword;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;208;5;211;;;;vpos;;vstring;;r&#10;Definition&#10;    getKeyword()&#10;&#10;Description&#10;     Returns feature keyword.;;d4,209;;b1,0;;m">
</treenode>
<treenode node="getLanguage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;218;5;221;;;;vpos;;vstring;;r&#10;Definition&#10;    getLanguage()&#10;&#10;Description&#10;     Returns feature language.;;d4,219;;b1,0;;m">
</treenode>
<treenode node="getLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;238;5;241;;;;vpos;;vinteger;;r&#10;Definition&#10;    getLine()&#10;&#10;Description&#10;     Returns feature declaration line number.;;d4,239;;b1,0;;m">
</treenode>
<treenode node="getNodeType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;96;5;99;;;;vpos;;vstring;;r&#10;Definition&#10;    getNodeType()&#10;&#10;Description&#10;     Returns node type string;;d4,97;;b1,0;;m">
</treenode>
<treenode node="getScenarios;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;198;5;201;;;;vpos;;vScenarioInterface;;r&#10;Definition&#10;    getScenarios()&#10;&#10;Description&#10;     Returns feature scenarios.&#10;&#10;Return:&#10;   [];;d4,199;;b1,0;;m">
</treenode>
<treenode node="getTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;158;5;161;;;;vpos;;vstring;;r&#10;Definition&#10;    getTags()&#10;&#10;Description&#10;     Returns feature tags.&#10;&#10;Return:&#10;   [];;d4,159;;b1,0;;m">
</treenode>
<treenode node="getTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;106;5;109;;;;vpos;;vnull;;r&#10;Definition&#10;    getTitle()&#10;&#10;Description&#10;     Returns feature title.&#10;&#10;Return:&#10;   |string;;d4,107;;b1,0;;m">
</treenode>
<treenode node="hasBackground;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;168;5;171;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasBackground()&#10;&#10;Description&#10;     Checks if feature has background.;;d4,169;;b1,0;;m">
</treenode>
<treenode node="hasDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;116;5;119;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasDescription()&#10;&#10;Description&#10;     Checks if feature has a description.;;d4,117;;b1,0;;m">
</treenode>
<treenode node="hasScenarios;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;188;5;191;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasScenarios()&#10;&#10;Description&#10;     Checks if feature has scenarios.;;d4,189;;b1,0;;m">
</treenode>
<treenode node="hasTag;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;138;5;141;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasTag($tag)&#10;&#10;Description&#10;     Checks if feature is tagged with tag.&#10;&#10;Parameters:&#10;    string $tag;;d4,139;;b1,0;;mstring $tag;;p">
</treenode>
<treenode node="hasTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\FeatureNode.php;f11;148;5;151;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasTags()&#10;&#10;Description&#10;     Checks if feature has tags.;;d4,149;;b1,0;;m">
</treenode>
</treenode>
<treenode node="FencedCodeTrait;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\FencedCodeTrait.php;f0;14;1;53;;;;vpos;;vCodeTrait;;c;;r&#10;Definition&#10;    trait FencedCodeTrait&#10;&#10;Description&#10;     Adds the fenced code blocks;;d0,15;;b0,0;;m">
<treenode node="consumeFencedCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\FencedCodeTrait.php;f11;30;2;52;;;;vpos;;v;;r&#10;Definition&#10;    consumeFencedCode($lines, $current)&#10;&#10;Description&#10;     Consume lines for a fenced code block;;d1,31;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="identifyFencedCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\FencedCodeTrait.php;f11;21;2;25;;;;vpos;;v;;r&#10;Definition&#10;    identifyFencedCode($line)&#10;&#10;Description&#10;     identify a line as the beginning of a fenced code block.;;d1,22;;b2,0;;mline;;p">
</treenode>
</treenode>
<treenode node="FileCache;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\FileCache.php;f0;22;1;108;;;;vpos;;vCacheInterface;;c;;r&#10;Definition&#10;    class FileCache implements CacheInterface&#10;&#10;Description&#10;     File cache. Caches feature into a file.;;d0,23;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\FileCache.php;f11;33;5;44;;;;vpos;;v;;r&#10;Definition&#10;    __construct($path)&#10;&#10;Description&#10;     Initializes file cache.&#10;&#10;Parameters:&#10;    string $path - Path to the folder where to store caches;;d4,34;;b1,0;;mstring $path;;p">
</treenode>
<treenode node="getCachePathFor;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\FileCache.php;f14;104;5;107;;;;vpos;;vstring;;r&#10;Definition&#10;    getCachePathFor($path)&#10;&#10;Description&#10;     Returns feature cache file path from features path.&#10;&#10;Parameters:&#10;    string $path - Feature path;;d4,105;;b2,0;;mstring $path;;p">
</treenode>
<treenode node="isFresh;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\FileCache.php;f11;54;5;63;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isFresh($path, $timestamp)&#10;&#10;Description&#10;     Checks that cache for feature exists and is fresh.&#10;&#10;Parameters:&#10;    string $path - Feature path&#10;    integer $timestamp - The last time feature was updated;;d4,55;;b1,0;;mstring $path;;pinteger $timestamp;;p">
</treenode>
<treenode node="read;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\FileCache.php;f11;74;5;84;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    read($path)&#10;&#10;Description&#10;     Reads feature cache from path.&#10;&#10;Parameters:&#10;    string $path - Feature path;;d4,75;;b1,0;;mstring $path;;p">
</treenode>
<treenode node="write;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\FileCache.php;f11;92;5;95;;;;vpos;;v;;r&#10;Definition&#10;    write($path, FeatureNode $feature)&#10;&#10;Description&#10;     Caches feature node.&#10;&#10;Parameters:&#10;    string $path - Feature path&#10;    FeatureNode $feature - Feature instance;;d4,93;;b1,0;;mstring $path;;pFeatureNode $feature;;p">
</treenode>
</treenode>
<treenode node="FileCacheTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\FileCacheTest.php;f0;9;1;74;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,10;;b0,0;;m">
<treenode node="setUp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\FileCacheTest.php;f14;63;5;66;;;;vpos;;v;;r;;d4,64;;b2,0;;m">
</treenode>
<treenode node="tearDown;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\FileCacheTest.php;f14;68;5;73;;;;vpos;;v;;r;;d4,69;;b2,0;;m">
</treenode>
<treenode node="testBrokenCacheRead;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\FileCacheTest.php;f11;48;5;54;;;;vpos;;v;;r;;d4,49;;b1,0;;m">
</treenode>
<treenode node="testCacheAndRead;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\FileCacheTest.php;f11;37;5;46;;;;vpos;;v;;r;;d4,38;;b1,0;;m">
</treenode>
<treenode node="testIsFreshOnFreshFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\FileCacheTest.php;f11;19;5;26;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
</treenode>
<treenode node="testIsFreshOnOutdated;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\FileCacheTest.php;f11;28;5;35;;;;vpos;;v;;r;;d4,29;;b1,0;;m">
</treenode>
<treenode node="testIsFreshWhenThereIsNoFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\FileCacheTest.php;f11;14;5;17;;;;vpos;;v;;r;;d4,15;;b1,0;;m">
</treenode>
<treenode node="testUnwriteableCacheDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\FileCacheTest.php;f11;56;5;61;;;;vpos;;v;;r;;d4,57;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Filesystem;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f0;21;1;342;;;;vpos;;vCodeceptionModule;;c;;r&#10;Definition&#10;    class Filesystem extends CodeceptionModule&#10;&#10;Description&#10;     Module for testing local filesystem. Fork it to extend the module for FTP, Amazon S3, others.;;d0,22;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;28;5;31;;;;vpos;;v;;r;;d4,29;;b1,0;;mtest;;p">
</treenode>
<treenode node="absolutizePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f14;49;5;61;;;;vpos;;vstring;;r&#10;Definition&#10;    absolutizePath($path)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $path;;d4,50;;b2,0;;mstring $path;;p">
</treenode>
<treenode node="amInPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;39;5;43;;;;vpos;;v;;r&#10;Definition&#10;    amInPath($path)&#10;&#10;Description&#10;     Enters a directory In local filesystem. Project root directory is used by default&#10;&#10;Parameters:&#10;    string $path;;d4,40;;b1,0;;mstring $path;;p">
</treenode>
<treenode node="cleanDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;326;5;330;;;;vpos;;v;;r&#10;Definition&#10;    cleanDir($dirname)&#10;&#10;Description&#10;     Erases directory contents&#10;&#10;Parameters:&#10;    string $dirname;;d4,327;;b1,0;;mstring $dirname;;p">
</treenode>
<treenode node="copyDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;131;5;134;;;;vpos;;v;;r&#10;Definition&#10;    copyDir($src, $dst)&#10;&#10;Description&#10;     Copies directory with all contents&#10;&#10;Parameters:&#10;    string $src&#10;    string $dst;;d4,132;;b1,0;;mstring $src;;pstring $dst;;p">
</treenode>
<treenode node="deleteDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;113;5;117;;;;vpos;;v;;r&#10;Definition&#10;    deleteDir($dirname)&#10;&#10;Description&#10;     Deletes directory with all subdirectories&#10;&#10;Parameters:&#10;    string $dirname;;d4,114;;b1,0;;mstring $dirname;;p">
</treenode>
<treenode node="deleteFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;94;5;100;;;;vpos;;v;;r&#10;Definition&#10;    deleteFile($filename)&#10;&#10;Description&#10;     Deletes a file&#10;&#10;Parameters:&#10;    string $filename;;d4,95;;b1,0;;mstring $filename;;p">
</treenode>
<treenode node="deleteThisFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;229;5;232;;;;vpos;;v;;r&#10;Definition&#10;    deleteThisFile()&#10;&#10;Description&#10;     Deletes a file;;d4,230;;b1,0;;m">
</treenode>
<treenode node="dontSeeFileFound;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;271;5;287;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeFileFound($filename, $path = &apos;&apos;)&#10;&#10;Description&#10;     Checks if file does not exist in path&#10;&#10;Parameters:&#10;    string $filename&#10;    string $path;;d4,272;;b1,0;;mstring $filename;;pstring $path;;p">
</treenode>
<treenode node="dontSeeInThisFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;221;5;224;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeInThisFile($text)&#10;&#10;Description&#10;     Checks If opened file doesn&apos;t contain `text` in it&#10;&#10;Parameters:&#10;    string $text;;d4,222;;b1,0;;mstring $text;;p">
</treenode>
<treenode node="findFileInPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f12;297;5;312;;;;vpos;;vstring;;r&#10;Definition&#10;    findFileInPath($filename, $path)&#10;&#10;Description&#10;     Finds the first matching file&#10;&#10;Parameters:&#10;    string $filename&#10;    string $path&#10;&#10;Return:&#10;   |false Path to the first matching file;;d4,298;;b3,0;;mstring $filename;;pstring $path;;p">
</treenode>
<treenode node="openFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;77;5;81;;;;vpos;;v;;r&#10;Definition&#10;    openFile($filename)&#10;&#10;Description&#10;     Opens a file and stores it&apos;s content.&#10;&#10;Parameters:&#10;    string $filename;;d4,78;;b1,0;;mstring $filename;;p">
</treenode>
<treenode node="seeFileContentsEqual;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;203;5;207;;;;vpos;;v;;r&#10;Definition&#10;    seeFileContentsEqual($text)&#10;&#10;Description&#10;     Checks the strict matching of file contents. Unlike `seeInThisFile` will fail if file has something more than expected lines. Better to use with HEREDOC strings. Matching is done after removing &quot;\r&quot; chars from file content.&#10;&#10;Parameters:&#10;    string $text;;d4,204;;b1,0;;mstring $text;;p">
</treenode>
<treenode node="seeFileFound;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;247;5;263;;;;vpos;;v;;r&#10;Definition&#10;    seeFileFound($filename, $path = &apos;&apos;)&#10;&#10;Description&#10;     Checks if file exists in path. Opens a file when it&apos;s exists&#10;&#10;Parameters:&#10;    string $filename&#10;    string $path;;d4,248;;b1,0;;mstring $filename;;pstring $path;;p">
</treenode>
<treenode node="seeInThisFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;150;5;153;;;;vpos;;v;;r&#10;Definition&#10;    seeInThisFile($text)&#10;&#10;Description&#10;     Checks If opened file has `text` in it.&#10;&#10;Parameters:&#10;    string $text;;d4,151;;b1,0;;mstring $text;;p">
</treenode>
<treenode node="seeNumberNewLines;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;169;5;177;;;;vpos;;v;;r&#10;Definition&#10;    seeNumberNewLines($number)&#10;&#10;Description&#10;     Checks If opened file has the `number` of new lines.&#10;&#10;Parameters:&#10;    int $number - New lines;;d4,170;;b1,0;;mint $number;;p">
</treenode>
<treenode node="seeThisFileMatches;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;183;5;186;;;;vpos;;v;;r&#10;Definition&#10;    seeThisFileMatches($regex)&#10;&#10;Description&#10;     Checks that contents of currently opened file matches $regex&#10;&#10;Parameters:&#10;    string $regex;;d4,184;;b1,0;;mstring $regex;;p">
</treenode>
<treenode node="writeToFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Filesystem.php;f11;338;5;341;;;;vpos;;v;;r&#10;Definition&#10;    writeToFile($filename, $contents)&#10;&#10;Description&#10;     Saves contents to file&#10;&#10;Parameters:&#10;    string $filename&#10;    string $contents;;d4,339;;b1,0;;mstring $filename;;pstring $contents;;p">
</treenode>
</treenode>
<treenode node="FileSystem;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\FileSystem.php;f0;5;1;53;;;;vpos;;vNamespaces;;c;;r;;d0,6;;b0,0;;m">
<treenode node="completeSuffix;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\FileSystem.php;f14;24;5;37;;;;vpos;;v;;r;;d4,25;;b2,0;;mfilename;;psuffix;;p">
</treenode>
<treenode node="createDirectoryFor;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\FileSystem.php;f14;9;5;22;;;;vpos;;v;;r;;d4,10;;b2,0;;mbasePath;;pclassName;;p">
</treenode>
<treenode node="createFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\FileSystem.php;f14;45;5;52;;;;vpos;;v;;r;;d4,46;;b2,0;;mfilename;;pcontents;;pforce;;pflags;;p">
</treenode>
<treenode node="removeSuffix;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\FileSystem.php;f14;39;5;43;;;;vpos;;v;;r;;d4,40;;b2,0;;mclassname;;psuffix;;p">
</treenode>
</treenode>
<treenode node="FileSystem;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\FileSystem.php;f0;7;1;89;;;;vpos;;v;;r&#10;Definition&#10;    class FileSystem&#10;&#10;Description&#10;     Set of functions to work with Filesystem;;d0,8;;b0,0;;m">
<treenode node="copyDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\FileSystem.php;f18;74;5;88;;;;vpos;;v;;r&#10;Definition&#10;    copyDir($src, $dst)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $src&#10;     $dst;;d4,75;;b1,5;;m $src;;p $dst;;p">
</treenode>
<treenode node="deleteDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\FileSystem.php;f18;38;5;68;;;;vpos;;vbool;;r&#10;Definition&#10;    deleteDir($dir)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $dir;;d4,39;;b1,5;;m $dir;;p">
</treenode>
<treenode node="doEmptyDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\FileSystem.php;f18;12;5;32;;;;vpos;;v;;r&#10;Definition&#10;    doEmptyDir($path)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $path;;d4,13;;b1,5;;m $path;;p">
</treenode>
</treenode>
<treenode node="Filter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Filter.php;f0;8;1;174;;;;vpos;;v;;r;;d0,9;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Filter.php;f11;25;5;32;;;;vpos;;v;;r;;d4,26;;b1,0;;mphpCoverage;;p">
</treenode>
<treenode node="blackList;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Filter.php;f11;109;5;146;;;;vpos;;vFilter;;r&#10;Definition&#10;    blackList($config)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $config;;d4,110;;b1,0;;m $config;;p">
</treenode>
<treenode node="getFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Filter.php;f11;170;5;173;;;;vpos;;v;;r&#10;Definition&#10;    getFilter()&#10;&#10;Description&#10;      \SebastianBergmann\CodeCoverage\Filter;;d4,171;;b1,0;;m">
</treenode>
<treenode node="getPhpCodeCoverage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Filter.php;f11;47;5;50;;;;vpos;;vnull;;r&#10;Definition&#10;    getPhpCodeCoverage()&#10;&#10;Description&#10;      |\SebastianBergmann\CodeCoverage\CodeCoverage&#10;&#10;Return:&#10;   |\SebastianBergmann\CodeCoverage\CodeCoverage;;d4,48;;b1,0;;m">
</treenode>
<treenode node="matchWildcardPattern;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Filter.php;f14;148;5;165;;;;vpos;;v;;r;;d4,149;;b2,0;;mpattern;;p">
</treenode>
<treenode node="setup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Filter.php;f18;38;5;42;;;;vpos;;vFilter;;r&#10;Definition&#10;    setup(\SebastianBergmann\CodeCoverage\CodeCoverage $phpCoverage)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \SebastianBergmann\CodeCoverage\CodeCoverage $phpCoverage;;d4,39;;b1,5;;m\SebastianBergmann\CodeCoverage\CodeCoverage $phpCoverage;;p">
</treenode>
<treenode node="whiteList;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Filter.php;f11;56;5;103;;;;vpos;;vFilter;;r&#10;Definition&#10;    whiteList($config)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $config;;d4,57;;b1,0;;m $config;;p">
</treenode>
</treenode>
<treenode node="FilterTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\FilterTest.php;f9;8;1;63;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,9;;b0,0;;m">
<treenode node="getGherkinFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\FilterTest.php;f14;32;5;57;;;;vpos;;v;;r;;d4,33;;b2,0;;m">
</treenode>
<treenode node="getParsedFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\FilterTest.php;f14;59;5;62;;;;vpos;;v;;r;;d4,60;;b2,0;;m">
</treenode>
<treenode node="getParser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\FilterTest.php;f14;10;5;30;;;;vpos;;v;;r;;d4,11;;b2,0;;m">
</treenode>
</treenode>
<treenode node="Fixtures;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Fixtures.php;f0;16;1;43;;;;vpos;;v;;r&#10;Definition&#10;    class Fixtures&#10;&#10;Description&#10;     Really basic class to store data in global array and use it in Cests/Tests.;;d0,17;;b0,0;;m">
<treenode node="add;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Fixtures.php;f18;20;5;23;;;;vpos;;v;;r;;d4,21;;b1,5;;mname;;pdata;;p">
</treenode>
<treenode node="cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Fixtures.php;f18;34;5;37;;;;vpos;;v;;r;;d4,35;;b1,5;;m">
</treenode>
<treenode node="exists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Fixtures.php;f18;39;5;42;;;;vpos;;v;;r;;d4,40;;b1,5;;mname;;p">
</treenode>
<treenode node="get;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Fixtures.php;f18;25;5;32;;;;vpos;;v;;r;;d4,26;;b1,5;;mname;;p">
</treenode>
</treenode>
<treenode node="FixturesStore;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2\FixturesStore.php;f0;6;1;34;;;;vpos;;vFixtureTrait;;c;;r;;d0,7;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2\FixturesStore.php;f11;18;5;21;;;;vpos;;v;;r&#10;Definition&#10;    __construct($data)&#10;&#10;Description&#10;     Expects fixtures config&#10;&#10;Parameters:&#10;     $data;;d4,19;;b1,0;;m $data;;p">
</treenode>
<treenode node="fixtures;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2\FixturesStore.php;f11;23;5;26;;;;vpos;;v;;r;;d4,24;;b1,0;;m">
</treenode>
<treenode node="globalFixtures;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2\FixturesStore.php;f11;28;5;33;;;;vpos;;v;;r;;d4,29;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Framework;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Framework.php;f9;10;1;29;;;;vpos;;vInnerBrowser;;c;;r&#10;Definition&#10;    class Framework extends InnerBrowser&#10;&#10;Description&#10;     Abstract module for PHP frameworks connected via Symfony BrowserKit components Each framework is connected with it&apos;s own connector defined in \Codeception\Lib\Connector Each module for framework should extend this class.;;d0,11;;b0,0;;m">
<treenode node="_beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Framework.php;f11;22;5;28;;;;vpos;;v;;r;;d4,23;;b1,0;;msettings;;p">
</treenode>
<treenode node="getInternalDomains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Framework.php;f14;17;5;20;;;;vpos;;varray;;r&#10;Definition&#10;    getInternalDomains()&#10;&#10;Description&#10;     Returns a list of recognized domain names;;d4,18;;b2,0;;m">
</treenode>
</treenode>
<treenode node="Friend;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Actor\Shared\Friend.php;f0;6;1;28;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="getScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Actor\Shared\Friend.php;f23;13;45;13;;;;vpos;;vScenario;;r&#10;Description&#10;     ;;d-1,-1;;b2,0;;m">
</treenode>
<treenode node="haveFriend;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Actor\Shared\Friend.php;f11;20;5;27;;;;vpos;;v;;r&#10;Definition&#10;    haveFriend($name, $actorClass = null)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $name&#10;     $actorClass;;d4,21;;b1,0;;m $name;;p $actorClass;;p">
</treenode>
</treenode>
<treenode node="Friend;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Friend.php;f0;6;1;77;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Friend.php;f11;13;5;25;;;;vpos;;v;;r;;d4,14;;b1,0;;mname;;pactor;;pmodules;;p">
</treenode>
<treenode node="does;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Friend.php;f11;27;5;52;;;;vpos;;v;;r;;d4,28;;b1,0;;mclosure;;p">
</treenode>
<treenode node="expects;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Friend.php;f11;59;5;62;;;;vpos;;v;;r;;d4,60;;b1,0;;mprediction;;p">
</treenode>
<treenode node="expectsTo;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Friend.php;f11;64;5;67;;;;vpos;;v;;r;;d4,65;;b1,0;;mprediction;;p">
</treenode>
<treenode node="isGoingTo;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Friend.php;f11;54;5;57;;;;vpos;;v;;r;;d4,55;;b1,0;;margumentation;;p">
</treenode>
<treenode node="leave;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Friend.php;f11;69;5;76;;;;vpos;;v;;r;;d4,70;;b1,0;;m">
</treenode>
</treenode>
<treenode node="FTP;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f0;90;1;882;;;;vpos;;vFilesystem;;c;;r&#10;Definition&#10;    class FTP extends Filesystem&#10;&#10;Description&#10;      Works with SFTP/FTP servers.;;d0,91;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;137;5;147;;;;vpos;;v;;r&#10;Definition&#10;    _after(TestInterface $test)&#10;&#10;Description&#10;     Close the FTP connection &amp; Clear up;;d4,138;;b1,0;;mtest;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;128;5;132;;;;vpos;;v;;r&#10;Definition&#10;    _before(TestInterface $test)&#10;&#10;Description&#10;     Setup connection and login with config settings&#10;&#10;Parameters:&#10;    \Codeception\TestInterface $test;;d4,129;;b1,0;;m\Codeception\TestInterface $test;;p">
</treenode>
<treenode node="_changeDirectory;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;624;5;634;;;;vpos;;v;;r&#10;Definition&#10;    _changeDirectory($path)&#10;&#10;Description&#10;     Change the working directory on the FTP/SFTP server&#10;&#10;Parameters:&#10;     $path;;d4,625;;b3,0;;m $path;;p">
</treenode>
<treenode node="_closeConnection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;571;5;580;;;;vpos;;v;;r&#10;Definition&#10;    _closeConnection()&#10;&#10;Description&#10;     Close open FTP/SFTP connection;;d4,572;;b3,0;;m">
</treenode>
<treenode node="_directory;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;606;5;617;;;;vpos;;vstring;;r&#10;Definition&#10;    _directory()&#10;&#10;Description&#10;     Get the current directory for the FTP/SFTP connection;;d4,607;;b3,0;;m">
</treenode>
<treenode node="_listFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;588;5;599;;;;vpos;;varray;;r&#10;Definition&#10;    _listFiles($path)&#10;&#10;Description&#10;     Get the file listing for FTP/SFTP connection&#10;&#10;Parameters:&#10;    String $path;;d4,589;;b3,0;;mString $path;;p">
</treenode>
<treenode node="_openConnection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;556;5;566;;;;vpos;;v;;r&#10;Definition&#10;    _openConnection($user = &apos;anonymous&apos;, $password = &apos;&apos;)&#10;&#10;Description&#10;     Open a new FTP/SFTP connection and authenticate user.&#10;&#10;Parameters:&#10;    string $user&#10;    string $password;;d4,557;;b3,0;;mstring $user;;pstring $password;;p">
</treenode>
<treenode node="_openFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;641;5;666;;;;vpos;;v;;r&#10;Definition&#10;    _openFile($filename)&#10;&#10;Description&#10;     Download remote file to local tmp directory and open contents.&#10;&#10;Parameters:&#10;     $filename;;d4,642;;b3,0;;m $filename;;p">
</treenode>
<treenode node="_writeToFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;674;5;698;;;;vpos;;v;;r&#10;Definition&#10;    _writeToFile($filename, $contents)&#10;&#10;Description&#10;     Write data to local tmp file and upload to server&#10;&#10;Parameters:&#10;     $filename&#10;     $contents;;d4,675;;b3,0;;m $filename;;p $contents;;p">
</treenode>
<treenode node="absolutizePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f14;188;5;194;;;;vpos;;vstring;;r&#10;Definition&#10;    absolutizePath($path)&#10;&#10;Description&#10;     Resolve path&#10;&#10;Parameters:&#10;     $path;;d4,189;;b2,0;;m $path;;p">
</treenode>
<treenode node="amInPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;176;5;180;;;;vpos;;v;;r&#10;Definition&#10;    amInPath($path)&#10;&#10;Description&#10;     Enters a directory on the ftp system - FTP root directory is used by default&#10;&#10;Parameters:&#10;     $path;;d4,177;;b1,0;;m $path;;p">
</treenode>
<treenode node="cleanDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;419;5;422;;;;vpos;;v;;r&#10;Definition&#10;    cleanDir($dirname)&#10;&#10;Description&#10;     Erases directory contents on the FTP/SFTP server&#10;&#10;Parameters:&#10;     $dirname;;d4,420;;b1,0;;m $dirname;;p">
</treenode>
<treenode node="clearDirectory;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;785;5;790;;;;vpos;;v;;r&#10;Definition&#10;    clearDirectory($path)&#10;&#10;Description&#10;     Clear directory on server of all content&#10;&#10;Parameters:&#10;     $path;;d4,786;;b3,0;;m $path;;p">
</treenode>
<treenode node="copyDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;337;5;340;;;;vpos;;v;;r&#10;Definition&#10;    copyDir($src, $dst)&#10;&#10;Description&#10;     Currently not supported in this module, overwrite inherited method&#10;&#10;Parameters:&#10;     $src&#10;     $dst;;d4,338;;b1,0;;m $src;;p $dst;;p">
</treenode>
<treenode node="delete;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;742;5;753;;;;vpos;;v;;r&#10;Definition&#10;    delete($filename, $isDir = false)&#10;&#10;Description&#10;     Delete file on server&#10;&#10;Parameters:&#10;     $filename;;d4,743;;b3,0;;mfilename;;pisDir;;p">
</treenode>
<treenode node="deleteDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;403;5;406;;;;vpos;;v;;r&#10;Definition&#10;    deleteDir($dirname)&#10;&#10;Description&#10;     Deletes directory with all subdirectories on the remote FTP/SFTP server&#10;&#10;Parameters:&#10;     $dirname;;d4,404;;b1,0;;m $dirname;;p">
</treenode>
<treenode node="deleteFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;387;5;390;;;;vpos;;v;;r&#10;Definition&#10;    deleteFile($filename)&#10;&#10;Description&#10;     Deletes a file on the remote FTP/SFTP system&#10;&#10;Parameters:&#10;     $filename;;d4,388;;b1,0;;m $filename;;p">
</treenode>
<treenode node="dontSeeFileFound;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;249;5;254;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeFileFound($filename, $path = &apos;&apos;)&#10;&#10;Description&#10;     Checks if file does not exist in path on the remote FTP/SFTP system&#10;&#10;Parameters:&#10;     $filename&#10;    string $path;;d4,250;;b1,0;;m $filename;;pstring $path;;p">
</treenode>
<treenode node="dontSeeFileFoundMatches;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;263;5;273;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeFileFoundMatches($regex, $path = &apos;&apos;)&#10;&#10;Description&#10;     Checks if file does not exist in path on the remote FTP/SFTP system, using regular expression as filename. DOES NOT OPEN the file when it&apos;s exists&#10;&#10;Parameters:&#10;     $regex&#10;    string $path;;d4,264;;b1,0;;m $regex;;pstring $path;;p">
</treenode>
<treenode node="ftpConnect;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f14;859;5;876;;;;vpos;;v;;r&#10;Definition&#10;    ftpConnect($user, $password)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $user&#10;     $password;;d4,860;;b2,0;;m $user;;p $password;;p">
</treenode>
<treenode node="ftpDelete;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;762;5;778;;;;vpos;;vbool;;r&#10;Definition&#10;    ftpDelete($directory)&#10;&#10;Description&#10;     Function to recursively delete folder, used for PHP FTP build in client.&#10;&#10;Parameters:&#10;     $directory;;d4,763;;b3,0;;m $directory;;p">
</treenode>
<treenode node="grabDirectory;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;541;5;546;;;;vpos;;vstring;;r&#10;Definition&#10;    grabDirectory()&#10;&#10;Description&#10;     Grabber method to return current working directory;;d4,542;;b1,0;;m">
</treenode>
<treenode node="grabFileCount;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;485;5;490;;;;vpos;;vint;;r&#10;Definition&#10;    grabFileCount($path = &apos;&apos;, $ignore = true)&#10;&#10;Description&#10;     Grabber method for returning file/folders count in directory&#10;&#10;Parameters:&#10;    string $path&#10;    bool $ignore - - suppress &apos;;;d4,486;;b1,0;;mstring $path;;pbool $ignore;;p">
</treenode>
<treenode node="grabFileList;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;441;5;469;;;;vpos;;varray;;r&#10;Definition&#10;    grabFileList($path = &apos;&apos;, $ignore = true)&#10;&#10;Description&#10;     Grabber method for returning file/folders listing in an array&#10;&#10;Parameters:&#10;    string $path&#10;    bool $ignore - - suppress &apos;;;d4,442;;b1,0;;mstring $path;;pbool $ignore;;p">
</treenode>
<treenode node="grabFileModified;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;523;5;528;;;;vpos;;vbool;;r&#10;Definition&#10;    grabFileModified($filename)&#10;&#10;Description&#10;     Grabber method to return last modified timestamp&#10;&#10;Parameters:&#10;     $filename;;d4,524;;b1,0;;m $filename;;p">
</treenode>
<treenode node="grabFileSize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;504;5;509;;;;vpos;;vbool;;r&#10;Definition&#10;    grabFileSize($filename)&#10;&#10;Description&#10;     Grabber method to return file size&#10;&#10;Parameters:&#10;     $filename;;d4,505;;b1,0;;m $filename;;p">
</treenode>
<treenode node="isSFTP;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f14;878;5;881;;;;vpos;;v;;r;;d4,879;;b2,0;;m">
</treenode>
<treenode node="loginAs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;166;5;169;;;;vpos;;v;;r&#10;Definition&#10;    loginAs($user = &apos;anonymous&apos;, $password = &apos;&apos;)&#10;&#10;Description&#10;     Change the logged in user mid-way through your test, this closes the current connection to the server and initialises and new connection.&#10;&#10;Parameters:&#10;    String $user&#10;    String $password;;d4,167;;b1,0;;mString $user;;pString $password;;p">
</treenode>
<treenode node="makeDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;326;5;329;;;;vpos;;v;;r&#10;Definition&#10;    makeDir($dirname)&#10;&#10;Description&#10;     Create a directory on the server&#10;&#10;Parameters:&#10;     $dirname;;d4,327;;b1,0;;m $dirname;;p">
</treenode>
<treenode node="makeDirectory;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;705;5;716;;;;vpos;;v;;r&#10;Definition&#10;    makeDirectory($path)&#10;&#10;Description&#10;     Make new directory on server&#10;&#10;Parameters:&#10;     $path;;d4,706;;b3,0;;m $path;;p">
</treenode>
<treenode node="modified;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;817;5;830;;;;vpos;;vbool;;r&#10;Definition&#10;    modified($filename)&#10;&#10;Description&#10;     Return the last modified time of a given file&#10;&#10;Parameters:&#10;     $filename;;d4,818;;b3,0;;m $filename;;p">
</treenode>
<treenode node="openFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;292;5;295;;;;vpos;;v;;r&#10;Definition&#10;    openFile($filename)&#10;&#10;Description&#10;     Opens a file (downloads from the remote FTP/SFTP system to a tmp directory for processing) and stores it&apos;s content.&#10;&#10;Parameters:&#10;     $filename;;d4,293;;b1,0;;m $filename;;p">
</treenode>
<treenode node="renameDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;371;5;374;;;;vpos;;v;;r&#10;Definition&#10;    renameDir($dirname, $rename)&#10;&#10;Description&#10;     Rename/Move directory on the FTP/SFTP server&#10;&#10;Parameters:&#10;     $dirname&#10;     $rename;;d4,372;;b1,0;;m $dirname;;p $rename;;p">
</treenode>
<treenode node="renameDirectory;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;724;5;735;;;;vpos;;v;;r&#10;Definition&#10;    renameDirectory($path, $rename)&#10;&#10;Description&#10;     Rename/Move directory/file on server&#10;&#10;Parameters:&#10;     $path&#10;     $rename;;d4,725;;b3,0;;m $path;;p $rename;;p">
</treenode>
<treenode node="renameFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;354;5;357;;;;vpos;;v;;r&#10;Definition&#10;    renameFile($filename, $rename)&#10;&#10;Description&#10;     Rename/Move file on the FTP/SFTP server&#10;&#10;Parameters:&#10;     $filename&#10;     $rename;;d4,355;;b1,0;;m $filename;;p $rename;;p">
</treenode>
<treenode node="seeFileFound;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;211;5;216;;;;vpos;;v;;r&#10;Definition&#10;    seeFileFound($filename, $path = &apos;&apos;)&#10;&#10;Description&#10;     Checks if file exists in path on the remote FTP/SFTP system. DOES NOT OPEN the file when it&apos;s exists&#10;&#10;Parameters:&#10;     $filename&#10;    string $path;;d4,212;;b1,0;;m $filename;;pstring $path;;p">
</treenode>
<treenode node="seeFileFoundMatches;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;231;5;241;;;;vpos;;v;;r&#10;Definition&#10;    seeFileFoundMatches($regex, $path = &apos;&apos;)&#10;&#10;Description&#10;     Checks if file exists in path on the remote FTP/SFTP system, using regular expression as filename. DOES NOT OPEN the file when it&apos;s exists&#10;&#10;Parameters:&#10;     $regex&#10;    string $path;;d4,232;;b1,0;;m $regex;;pstring $path;;p">
</treenode>
<treenode node="sftpConnect;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f14;836;5;853;;;;vpos;;v;;r&#10;Definition&#10;    sftpConnect($user, $password)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $user&#10;     $password;;d4,837;;b2,0;;m $user;;p $password;;p">
</treenode>
<treenode node="size;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f12;798;5;809;;;;vpos;;vbool;;r&#10;Definition&#10;    size($filename)&#10;&#10;Description&#10;     Return the size of a given file&#10;&#10;Parameters:&#10;     $filename;;d4,799;;b3,0;;m $filename;;p">
</treenode>
<treenode node="writeToFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\FTP.php;f11;310;5;313;;;;vpos;;v;;r&#10;Definition&#10;    writeToFile($filename, $contents)&#10;&#10;Description&#10;     Saves contents to tmp file and uploads the FTP/SFTP system. Overwrites current file on server if exists.&#10;&#10;Parameters:&#10;     $filename&#10;     $contents;;d4,311;;b1,0;;m $filename;;p $contents;;p">
</treenode>
</treenode>
<treenode node="FunctionalTester;PHP:Class Name;H:\OSPanel\domains\yii\tests\_support\FunctionalTester.php;f0;18;1;22;;;;vpos;;vActor;;cFunctionalTesterActions;;c;;r&#10;Definition&#10;    class FunctionalTester extends \Codeception\Actor&#10;&#10;Description&#10;     Inherited Methods;;d0,19;;b0,0;;m">
</treenode>
<treenode node="GenerateCept;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateCept.php;f0;17;1;54;;;;vpos;;vCommand;;cFileSystem;;cConfig;;c;;r&#10;Definition&#10;    class GenerateCept extends Command&#10;&#10;Description&#10;     Generates Cept (scenario-driven test) file:;;d0,18;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateCept.php;f14;22;5;28;;;;vpos;;v;;r;;d4,23;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateCept.php;f11;35;5;53;;;;vpos;;v;;r;;d4,36;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateCept.php;f11;30;5;33;;;;vpos;;v;;r;;d4,31;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GenerateCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateCest.php;f0;18;1;61;;;;vpos;;vCommand;;cFileSystem;;cConfig;;c;;r&#10;Definition&#10;    class GenerateCest extends Command&#10;&#10;Description&#10;     Generates Cest (scenario-driven object-oriented test) file:;;d0,19;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateCest.php;f14;23;5;29;;;;vpos;;v;;r;;d4,24;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateCest.php;f11;36;5;60;;;;vpos;;v;;r;;d4,37;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateCest.php;f11;31;5;34;;;;vpos;;v;;r;;d4,32;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GenerateEnvironment;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateEnvironment.php;f0;17;1;57;;;;vpos;;vCommand;;cFileSystem;;cConfig;;c;;r&#10;Definition&#10;    class GenerateEnvironment extends Command&#10;&#10;Description&#10;     Generates empty environment configuration file into envs dir:;;d0,18;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateEnvironment.php;f14;22;5;27;;;;vpos;;v;;r;;d4,23;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateEnvironment.php;f11;34;5;56;;;;vpos;;v;;r;;d4,35;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateEnvironment.php;f11;29;5;32;;;;vpos;;v;;r;;d4,30;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GenerateFeature;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateFeature.php;f0;18;1;57;;;;vpos;;vCommand;;cFileSystem;;cConfig;;c;;r&#10;Definition&#10;    class GenerateFeature extends Command&#10;&#10;Description&#10;     Generates Feature file (in Gherkin):;;d0,19;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateFeature.php;f14;23;5;30;;;;vpos;;v;;r;;d4,24;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateFeature.php;f11;37;5;56;;;;vpos;;v;;r;;d4,38;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateFeature.php;f11;32;5;35;;;;vpos;;v;;r;;d4,33;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GenerateGroup;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateGroup.php;f0;15;1;55;;;;vpos;;vCommand;;cFileSystem;;cConfig;;c;;r&#10;Definition&#10;    class GenerateGroup extends Command&#10;&#10;Description&#10;     Creates empty GroupObject - extension which handles all group events.;;d0,16;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateGroup.php;f14;20;5;25;;;;vpos;;v;;r;;d4,21;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateGroup.php;f11;32;5;54;;;;vpos;;v;;r;;d4,33;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateGroup.php;f11;27;5;30;;;;vpos;;v;;r;;d4,28;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GenerateHelper;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateHelper.php;f0;17;1;49;;;;vpos;;vCommand;;cFileSystem;;cConfig;;c;;r&#10;Definition&#10;    class GenerateHelper extends Command&#10;&#10;Description&#10;     Creates empty Helper class.;;d0,18;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateHelper.php;f14;22;5;27;;;;vpos;;v;;r;;d4,23;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateHelper.php;f11;34;5;48;;;;vpos;;v;;r;;d4,35;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateHelper.php;f11;29;5;32;;;;vpos;;v;;r;;d4,30;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GeneratePageObject;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GeneratePageObject.php;f0;18;1;74;;;;vpos;;vCommand;;cFileSystem;;cConfig;;c;;r&#10;Definition&#10;    class GeneratePageObject extends Command&#10;&#10;Description&#10;     Generates PageObject. Can be generated either globally, or just for one suite. If PageObject is generated globally it will act as UIMap, without any logic in it.;;d0,19;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GeneratePageObject.php;f14;23;5;30;;;;vpos;;v;;r;;d4,24;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GeneratePageObject.php;f11;37;5;69;;;;vpos;;v;;r;;d4,38;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GeneratePageObject.php;f11;32;5;35;;;;vpos;;v;;r;;d4,33;;b1,0;;m">
</treenode>
<treenode node="pathToPageObject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GeneratePageObject.php;f14;71;5;73;;;;vpos;;v;;r;;d4,72;;b2,0;;mclass;;psuite;;p">
</treenode>
</treenode>
<treenode node="GeneratePageObjectCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GeneratePageObjectCest.php;f0;5;1;37;;;;vpos;;v;;r&#10;Definition&#10;    class GeneratePageObjectCest&#10;&#10;Description&#10;      guy CliGuy\GeneratorSteps;;d0,6;;b0,0;;m">
<treenode node="generateGlobalPageObject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GeneratePageObjectCest.php;f11;7;5;15;;;;vpos;;v;;r;;d4,8;;b1,0;;mI;;p">
</treenode>
<treenode node="generateGlobalPageObjectInDifferentPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GeneratePageObjectCest.php;f11;28;5;36;;;;vpos;;v;;r;;d4,29;;b1,0;;mI;;p">
</treenode>
<treenode node="generateSuitePageObject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GeneratePageObjectCest.php;f11;17;5;26;;;;vpos;;v;;r;;d4,18;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="GenerateScenarios;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateScenarios.php;f0;21;1;141;;;;vpos;;vCommand;;cFileSystem;;cConfig;;c;;r&#10;Definition&#10;    class GenerateScenarios extends Command&#10;&#10;Description&#10;     Generates user-friendly text scenarios from scenario-driven tests (Cest, Cept).;;d0,22;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateScenarios.php;f14;26;5;35;;;;vpos;;v;;r;;d4,27;;b2,0;;m">
</treenode>
<treenode node="decorate;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateScenarios.php;f14;106;5;114;;;;vpos;;v;;r;;d4,107;;b2,0;;mtext;;pformat;;p">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateScenarios.php;f14;42;5;104;;;;vpos;;v;;r;;d4,43;;b2,0;;minput;;poutput;;p">
</treenode>
<treenode node="formatExtension;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateScenarios.php;f14;122;5;130;;;;vpos;;v;;r;;d4,123;;b2,0;;mformat;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateScenarios.php;f11;37;5;40;;;;vpos;;v;;r;;d4,38;;b1,0;;m">
</treenode>
<treenode node="getTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateScenarios.php;f14;116;5;120;;;;vpos;;v;;r;;d4,117;;b2,0;;msuiteManager;;p">
</treenode>
<treenode node="underscore;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateScenarios.php;f12;132;5;140;;;;vpos;;v;;r;;d4,133;;b3,0;;mname;;p">
</treenode>
</treenode>
<treenode node="GenerateStepObject;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateStepObject.php;f0;19;1;74;;;;vpos;;vCommand;;cFileSystem;;cConfig;;c;;r&#10;Definition&#10;    class GenerateStepObject extends Command&#10;&#10;Description&#10;     Generates StepObject class. You will be asked for steps you want to implement.;;d0,20;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateStepObject.php;f14;24;5;31;;;;vpos;;v;;r;;d4,25;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateStepObject.php;f11;38;5;73;;;;vpos;;v;;r;;d4,39;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateStepObject.php;f11;33;5;36;;;;vpos;;v;;r;;d4,34;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GenerateSuite;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateSuite.php;f0;22;1;133;;;;vpos;;vCommand;;cFileSystem;;cConfig;;cStyle;;c;;r&#10;Definition&#10;    class GenerateSuite extends Command&#10;&#10;Description&#10;     Create new test suite. Requires suite name and actor name;;d0,23;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateSuite.php;f14;28;5;34;;;;vpos;;v;;r;;d4,29;;b2,0;;m">
</treenode>
<treenode node="containsInvalidCharacters;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateSuite.php;f12;129;5;132;;;;vpos;;v;;r;;d4,130;;b3,0;;msuite;;p">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateSuite.php;f11;41;5;127;;;;vpos;;v;;r;;d4,42;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateSuite.php;f11;36;5;39;;;;vpos;;v;;r;;d4,37;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GenerateSuiteCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GenerateSuiteCest.php;f0;1;1;38;;;;vpos;;v;;r;;d0,2;;b0,0;;m">
<treenode node="generateSimpleSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GenerateSuiteCest.php;f11;3;5;19;;;;vpos;;v;;r;;d4,4;;b1,0;;mI;;p">
</treenode>
<treenode node="generateSuiteWithCustomConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GenerateSuiteCest.php;f11;21;5;37;;;;vpos;;v;;r;;d4,22;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="GenerateTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateTest.php;f0;15;1;59;;;;vpos;;vCommand;;cFileSystem;;cConfig;;c;;r&#10;Definition&#10;    class GenerateTest extends Command&#10;&#10;Description&#10;     Generates skeleton for Unit Test that extends `Codeception\TestCase\Test`.;;d0,16;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateTest.php;f14;20;5;29;;;;vpos;;v;;r;;d4,21;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateTest.php;f11;36;5;58;;;;vpos;;v;;r;;d4,37;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GenerateTest.php;f11;31;5;34;;;;vpos;;v;;r;;d4,32;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Gherkin;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Gherkin.php;f0;17;1;197;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f0;16;1;220;;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Gherkin.php;f0;23;1;141;;;;vpos;;vLoaderInterface;;c;;r;;d0,18;;b0,0;;m">
<treenode node="VERSION;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Gherkin.php;f9;25;17;25;;;;vpos;;v;;r&apos;4.4-dev&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Gherkin.php;f11;42;5;55;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f11;35;5;45;;;;vpos;;v;;r;;d4,43;;b1,0;;msettings;;p">
</treenode>
<treenode node="addFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Gherkin.php;f11;51;5;54;;;;vpos;;v;;r&#10;Definition&#10;    addFilter(FeatureFilterInterface $filter)&#10;&#10;Description&#10;     Adds filter to manager.&#10;&#10;Parameters:&#10;    FeatureFilterInterface $filter - Feature filter;;d4,52;;b1,0;;mFeatureFilterInterface $filter;;p">
</treenode>
<treenode node="addLoader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Gherkin.php;f11;41;5;44;;;;vpos;;v;;r&#10;Definition&#10;    addLoader(LoaderInterface $loader)&#10;&#10;Description&#10;     Adds loader to manager.&#10;&#10;Parameters:&#10;    LoaderInterface $loader - Feature loader;;d4,42;;b1,0;;mLoaderInterface $loader;;p">
</treenode>
<treenode node="addSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Gherkin.php;f14;80;5;103;;;;vpos;;v;;r;;d4,81;;b2,0;;mcontexts;;pgroup;;p">
</treenode>
<treenode node="fetchGherkinSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Gherkin.php;f14;57;5;78;;;;vpos;;v;;r;;d4,58;;b2,0;;m">
</treenode>
<treenode node="getFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f11;169;5;172;;;;vpos;;v;;r;;d4,170;;b1,0;;m">
</treenode>
<treenode node="getFeatureNode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f11;202;5;205;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    getFeatureNode()&#10;&#10;Description&#10;     ;;d4,203;;b1,0;;m">
</treenode>
<treenode node="getPattern;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Gherkin.php;f11;185;5;188;;;;vpos;;v;;r;;d4,186;;b1,0;;m">
</treenode>
<treenode node="getReportFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f11;212;5;219;;;;vpos;;varray;;r&#10;Definition&#10;    getReportFields()&#10;&#10;Description&#10;     Field values for XML/JSON/TAP reports;;d4,213;;b1,0;;m">
</treenode>
<treenode node="getScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f11;177;5;180;;;;vpos;;v;;r&#10;Definition&#10;    getScenario()&#10;&#10;Description&#10;      \Codeception\Scenario;;d4,178;;b1,0;;m">
</treenode>
<treenode node="getScenarioNode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f11;194;5;197;;;;vpos;;vScenarioNode;;r&#10;Definition&#10;    getScenarioNode()&#10;&#10;Description&#10;     ;;d4,195;;b1,0;;m">
</treenode>
<treenode node="getScenarioText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f11;182;5;185;;;;vpos;;v;;r;;d4,183;;b1,0;;mformat;;p">
</treenode>
<treenode node="getSignature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f11;67;5;70;;;;vpos;;v;;r;;d4,68;;b1,0;;m">
</treenode>
<treenode node="getSourceCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f11;187;5;189;;;;vpos;;v;;r;;d4,188;;b1,0;;m">
</treenode>
<treenode node="getSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Gherkin.php;f11;193;5;196;;;;vpos;;varray;;r&#10;Definition&#10;    getSteps()&#10;&#10;Description&#10;     ;;d4,194;;b1,0;;m">
</treenode>
<treenode node="getTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Gherkin.php;f11;180;5;183;;;;vpos;;v;;r;;d4,181;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Gherkin.php;f11;89;5;122;;;;vpos;;varray;;r&#10;Definition&#10;    load($resource, array $filters = array())&#10;&#10;Description&#10;     Loads &amp; filters resource with added loaders.&#10;&#10;Parameters:&#10;    mixed $resource - Resource to load&#10;    FeatureFilterInterface[] $filters - Additional filters;;d4,90;;b1,0;;mmixed $resource;;pFeatureFilterInterface[] $filters;;p">
</treenode>
<treenode node="loadTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Gherkin.php;f11;140;5;178;;;;vpos;;v;;r;;d4,141;;b1,0;;mfilename;;p">
</treenode>
<treenode node="makeContexts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f14;147;5;162;;;;vpos;;v;;r;;d4,148;;b2,0;;m">
</treenode>
<treenode node="makePlaceholderPattern;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Gherkin.php;f11;105;5;128;;;;vpos;;v;;r;;d4,106;;b1,0;;mpattern;;p">
</treenode>
<treenode node="preload;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f11;47;5;65;;;;vpos;;v;;r;;d4,48;;b1,0;;m">
</treenode>
<treenode node="resolveLoader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Gherkin.php;f11;131;5;140;;;;vpos;;vLoaderInterface;;r&#10;Definition&#10;    resolveLoader($resource)&#10;&#10;Description&#10;     Resolves loader by resource.&#10;&#10;Parameters:&#10;    mixed $resource - Resource to load;;d4,132;;b1,0;;mmixed $resource;;p">
</treenode>
<treenode node="runStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f14;108;5;145;;;;vpos;;v;;r;;d4,109;;b2,0;;mstepNode;;p">
</treenode>
<treenode node="setBasePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Gherkin.php;f11;72;5;79;;;;vpos;;v;;r&#10;Definition&#10;    setBasePath($path)&#10;&#10;Description&#10;     Sets base features path.&#10;&#10;Parameters:&#10;    string $path - Loaders base path;;d4,73;;b1,0;;mstring $path;;p">
</treenode>
<treenode node="setFilters;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Gherkin.php;f11;61;5;65;;;;vpos;;v;;r&#10;Definition&#10;    setFilters(array $filters)&#10;&#10;Description&#10;     Sets filters to the parser.&#10;&#10;Parameters:&#10;    FeatureFilterInterface[] $filters;;d4,62;;b1,0;;mFeatureFilterInterface[] $filters;;p">
</treenode>
<treenode node="test;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f11;72;5;89;;;;vpos;;v;;r;;d4,73;;b1,0;;m">
</treenode>
<treenode node="toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f11;164;5;167;;;;vpos;;v;;r;;d4,165;;b1,0;;m">
</treenode>
<treenode node="validatePattern;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Gherkin.php;f12;130;5;138;;;;vpos;;v;;r;;d4,131;;b3,0;;mpattern;;p">
</treenode>
<treenode node="validateStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Gherkin.php;f14;91;5;106;;;;vpos;;v;;r;;d4,92;;b2,0;;mstepNode;;p">
</treenode>
</treenode>
<treenode node="GherkinCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GherkinCest.php;f0;4;1;74;;;;vpos;;v;;r&#10;Definition&#10;    class GherkinCest&#10;&#10;Description&#10;      group gherkin;;d0,5;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GherkinCest.php;f11;6;5;9;;;;vpos;;v;;r;;d4,7;;b1,0;;mI;;p">
</treenode>
<treenode node="runIncompletedStepWithPyStringArgument;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GherkinCest.php;f11;52;5;57;;;;vpos;;v;;r;;d4,53;;b1,0;;mI;;p">
</treenode>
<treenode node="runSameStepWithInlineAndPyStringArgument;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GherkinCest.php;f11;59;5;66;;;;vpos;;v;;r;;d4,60;;b1,0;;mI;;p">
</treenode>
<treenode node="snippets;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GherkinCest.php;f11;21;5;26;;;;vpos;;v;;r;;d4,22;;b1,0;;mI;;p">
</treenode>
<treenode node="snippetsPyStringArgument;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GherkinCest.php;f11;44;5;50;;;;vpos;;v;;r;;d4,45;;b1,0;;mI;;p">
</treenode>
<treenode node="snippetsScenarioFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GherkinCest.php;f11;28;5;33;;;;vpos;;v;;r;;d4,29;;b1,0;;mI;;p">
</treenode>
<treenode node="snippetsScenarioFolder;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GherkinCest.php;f11;35;5;42;;;;vpos;;v;;r;;d4,36;;b1,0;;mI;;p">
</treenode>
<treenode node="snippetsScenarioUtf8;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GherkinCest.php;f11;68;5;73;;;;vpos;;v;;r;;d4,69;;b1,0;;mI;;p">
</treenode>
<treenode node="steps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GherkinCest.php;f11;11;5;19;;;;vpos;;v;;r;;d4,12;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="GherkinFileLoader;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\GherkinFileLoader.php;f0;21;1;101;;;;vpos;;vAbstractFileLoader;;c;;r&#10;Definition&#10;    class GherkinFileLoader extends AbstractFileLoader&#10;&#10;Description&#10;     Gherkin *.feature files loader.;;d0,22;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\GherkinFileLoader.php;f11;32;5;36;;;;vpos;;v;;r&#10;Definition&#10;    __construct(Parser $parser, CacheInterface $cache = null)&#10;&#10;Description&#10;     Initializes loader.&#10;&#10;Parameters:&#10;    Parser $parser - Parser&#10;    CacheInterface $cache - Cache layer;;d4,33;;b1,0;;mParser $parser;;pCacheInterface $cache;;p">
</treenode>
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\GherkinFileLoader.php;f11;69;5;84;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    load($path)&#10;&#10;Description&#10;     Loads features from provided resource.&#10;&#10;Parameters:&#10;    string $path - Resource to load&#10;&#10;Return:&#10;   [];;d4,70;;b1,0;;mstring $path;;p">
</treenode>
<treenode node="parseFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\GherkinFileLoader.php;f14;93;5;100;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    parseFeature($path)&#10;&#10;Description&#10;     Parses feature at provided absolute path.&#10;&#10;Parameters:&#10;    string $path - Feature path;;d4,94;;b2,0;;mstring $path;;p">
</treenode>
<treenode node="setCache;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\GherkinFileLoader.php;f11;43;5;46;;;;vpos;;v;;r&#10;Definition&#10;    setCache(CacheInterface $cache)&#10;&#10;Description&#10;     Sets cache layer.&#10;&#10;Parameters:&#10;    CacheInterface $cache - Cache layer;;d4,44;;b1,0;;mCacheInterface $cache;;p">
</treenode>
<treenode node="supports;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\GherkinFileLoader.php;f11;55;5;60;;;;vpos;;vBoolean;;r&#10;Definition&#10;    supports($path)&#10;&#10;Description&#10;     Checks if current loader supports provided resource.&#10;&#10;Parameters:&#10;    mixed $path - Resource to load;;d4,56;;b1,0;;mmixed $path;;p">
</treenode>
</treenode>
<treenode node="GherkinFileLoaderTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\GherkinFileLoaderTest.php;f0;9;1;110;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,10;;b0,0;;m">
<treenode node="setUp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\GherkinFileLoaderTest.php;f14;102;5;109;;;;vpos;;v;;r;;d4,103;;b2,0;;m">
</treenode>
<treenode node="testBasePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\GherkinFileLoaderTest.php;f11;80;5;100;;;;vpos;;v;;r;;d4,81;;b1,0;;m">
</treenode>
<treenode node="testLoad;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\GherkinFileLoaderTest.php;f11;28;5;39;;;;vpos;;v;;r;;d4,29;;b1,0;;m">
</treenode>
<treenode node="testParsingCachedFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\GherkinFileLoaderTest.php;f11;58;5;78;;;;vpos;;v;;r;;d4,59;;b1,0;;m">
</treenode>
<treenode node="testParsingUncachedFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\GherkinFileLoaderTest.php;f11;41;5;56;;;;vpos;;v;;r;;d4,42;;b1,0;;m">
</treenode>
<treenode node="testSupports;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\GherkinFileLoaderTest.php;f11;17;5;26;;;;vpos;;v;;r;;d4,18;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GherkinSnippets;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\GherkinSnippets.php;f0;8;1;151;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GherkinSnippets.php;f0;21;1;71;;;;vpos;;v;;r;;d0,9;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\GherkinSnippets.php;f11;25;5;82;;;;vpos;;v;;r;;d4,26;;b1,0;;msettings;;ptest;;p">
</treenode>
<treenode node="addSnippet;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\GherkinSnippets.php;f11;84;5;129;;;;vpos;;v;;r;;d4,85;;b1,0;;mstep;;p">
</treenode>
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GherkinSnippets.php;f14;26;5;36;;;;vpos;;v;;r;;d4,27;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GherkinSnippets.php;f11;43;5;70;;;;vpos;;v;;r;;d4,44;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GherkinSnippets.php;f11;38;5;41;;;;vpos;;v;;r;;d4,39;;b1,0;;m">
</treenode>
<treenode node="getFeatures;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\GherkinSnippets.php;f11;136;5;139;;;;vpos;;v;;r;;d4,137;;b1,0;;m">
</treenode>
<treenode node="getSnippets;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\GherkinSnippets.php;f11;131;5;134;;;;vpos;;v;;r;;d4,132;;b1,0;;m">
</treenode>
<treenode node="stepHasPyStringArgument;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\GherkinSnippets.php;f18;141;5;150;;;;vpos;;v;;r;;d4,142;;b1,5;;mstep;;p">
</treenode>
</treenode>
<treenode node="GherkinSteps;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GherkinSteps.php;f0;19;1;70;;;;vpos;;vCommand;;cConfig;;cStyle;;c;;r&#10;Definition&#10;    class GherkinSteps extends Command&#10;&#10;Description&#10;     Prints all steps from all Gherkin contexts for a specific suite;;d0,20;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GherkinSteps.php;f14;24;5;33;;;;vpos;;v;;r;;d4,25;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GherkinSteps.php;f11;40;5;69;;;;vpos;;v;;r;;d4,41;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\GherkinSteps.php;f11;35;5;38;;;;vpos;;v;;r;;d4,36;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GherkinTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\GherkinTest.php;f0;8;1;183;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,9;;b0,0;;m">
<treenode node="getCustomFilterMock;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\GherkinTest.php;f14;163;5;168;;;;vpos;;v;;r;;d4,164;;b2,0;;m">
</treenode>
<treenode node="getLoaderMock;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\GherkinTest.php;f14;156;5;161;;;;vpos;;v;;r;;d4,157;;b2,0;;m">
</treenode>
<treenode node="getNameFilterMock;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\GherkinTest.php;f14;170;5;175;;;;vpos;;v;;r;;d4,171;;b2,0;;m">
</treenode>
<treenode node="getTagFilterMock;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\GherkinTest.php;f14;177;5;182;;;;vpos;;v;;r;;d4,178;;b2,0;;m">
</treenode>
<treenode node="testLoader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\GherkinTest.php;f11;10;5;61;;;;vpos;;v;;r;;d4,11;;b1,0;;m">
</treenode>
<treenode node="testLoaderFiltersFeatures;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\GherkinTest.php;f11;70;5;102;;;;vpos;;v;;r;;d4,71;;b1,0;;m">
</treenode>
<treenode node="testNotFoundLoader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\GherkinTest.php;f11;63;5;68;;;;vpos;;v;;r;;d4,64;;b1,0;;m">
</treenode>
<treenode node="testSetBasePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\GherkinTest.php;f11;135;5;154;;;;vpos;;v;;r;;d4,136;;b1,0;;m">
</treenode>
<treenode node="testSetFiltersOverridesAllFilters;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\GherkinTest.php;f11;104;5;133;;;;vpos;;v;;r;;d4,105;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GithubMarkdown;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\GithubMarkdown.php;f0;14;1;113;;;;vpos;;vMarkdown;;cTableTrait;;cFencedCodeTrait;;cStrikeoutTrait;;cUrlLinkTrait;;c;;r&#10;Definition&#10;    class GithubMarkdown extends Markdown&#10;&#10;Description&#10;     Markdown parser for github flavored markdown.;;d0,15;;b0,0;;m">
<treenode node="consumeParagraph;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\GithubMarkdown.php;f11;60;2;97;;;;vpos;;v;;r&#10;Definition&#10;    consumeParagraph($lines, $current)&#10;&#10;Description&#10;     Consume lines for a paragraph;;d1,61;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="renderText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\GithubMarkdown.php;f11;104;2;112;;;;vpos;;v;;r&#10;Definition&#10;    renderText($text)&#10;&#10;Description&#10;      inheritdocs;;d1,105;;b2,0;;mtext;;p">
</treenode>
</treenode>
<treenode node="GithubMarkdownTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\GithubMarkdownTest.php;f0;17;1;79;;;;vpos;;vBaseMarkdownTest;;c;;r&#10;Definition&#10;    class GithubMarkdownTest extends BaseMarkdownTest&#10;&#10;Description&#10;     Test case for the github flavored markdown.;;d0,18;;b0,0;;m">
<treenode node="createMarkdown;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\GithubMarkdownTest.php;f8;19;2;22;;;;vpos;;v;;r;;d1,20;;b1,0;;m">
</treenode>
<treenode node="dataFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\GithubMarkdownTest.php;f8;42;2;55;;;;vpos;;v;;r;;d1,43;;b1,0;;m">
</treenode>
<treenode node="getDataPaths;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\GithubMarkdownTest.php;f8;24;2;30;;;;vpos;;v;;r;;d1,25;;b1,0;;m">
</treenode>
<treenode node="testAutoLinkLabelingWithEncodedUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\GithubMarkdownTest.php;f8;65;2;78;;;;vpos;;v;;r;;d1,66;;b1,0;;m">
</treenode>
<treenode node="testKeepZeroAlive;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\GithubMarkdownTest.php;f8;57;2;63;;;;vpos;;v;;r;;d1,58;;b1,0;;m">
</treenode>
<treenode node="testNewlines;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\GithubMarkdownTest.php;f8;32;2;40;;;;vpos;;v;;r;;d1,33;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GlobalCommandOptionCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GlobalCommandOptionCest.php;f0;2;1;59;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
<treenode node="configOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GlobalCommandOptionCest.php;f11;4;5;10;;;;vpos;;v;;r;;d4,5;;b1,0;;mI;;p">
</treenode>
<treenode node="configOptionShortcut;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GlobalCommandOptionCest.php;f11;20;5;26;;;;vpos;;v;;r;;d4,21;;b1,0;;mI;;p">
</treenode>
<treenode node="configOptionShortcutWithoutSpace;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GlobalCommandOptionCest.php;f11;28;5;34;;;;vpos;;v;;r;;d4,29;;b1,0;;mI;;p">
</treenode>
<treenode node="configOptionShortcutWithoutSpaceAndOther;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GlobalCommandOptionCest.php;f11;36;5;42;;;;vpos;;v;;r;;d4,37;;b1,0;;mI;;p">
</treenode>
<treenode node="configOptionWithEqualSign;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GlobalCommandOptionCest.php;f11;12;5;18;;;;vpos;;v;;r;;d4,13;;b1,0;;mI;;p">
</treenode>
<treenode node="configStartWithoutOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GlobalCommandOptionCest.php;f11;44;5;50;;;;vpos;;v;;r;;d4,45;;b1,0;;mI;;p">
</treenode>
<treenode node="configStartWithWrongPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\GlobalCommandOptionCest.php;f11;52;5;58;;;;vpos;;v;;r;;d4,53;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="GracefulTermination;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\GracefulTermination.php;f0;8;1;51;;;;vpos;;vEventSubscriberInterface;;c;;r;;d0,9;;b0,0;;m">
<treenode node="SIGNAL_FUNC;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\GracefulTermination.php;f9;10;21;10;;;;vpos;;v;;r&apos;pcntl_signal&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="getSubscribedEvents;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\GracefulTermination.php;f18;44;5;50;;;;vpos;;v;;r;;d4,45;;b1,5;;m">
</treenode>
<treenode node="handleSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\GracefulTermination.php;f11;17;5;31;;;;vpos;;v;;r;;d4,18;;b1,0;;mevent;;p">
</treenode>
<treenode node="terminate;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\GracefulTermination.php;f11;33;5;42;;;;vpos;;v;;r;;d4,34;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Group;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Group.php;f0;6;1;62;;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f13;39;5;41;;;;vpos;;vNamespaces;;cClassname;;c;;r;;d0,7;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Group.php;f11;45;5;50;;;;vpos;;v;;r;;d4,46;;b1,0;;msettings;;pname;;p">
</treenode>
<treenode node="produce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Group.php;f11;52;5;61;;;;vpos;;v;;r;;d4,53;;b1,0;;m">
</treenode>
</treenode>
<treenode node="GroupManager;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\GroupManager.php;f0;13;1;132;;;;vpos;;v;;r&#10;Definition&#10;    class GroupManager&#10;&#10;Description&#10;     Loads information for groups from external sources (config, filesystem);;d0,14;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\GroupManager.php;f11;18;5;23;;;;vpos;;v;;r;;d4,19;;b1,0;;mgroups;;p">
</treenode>
<treenode node="groupsForTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\GroupManager.php;f11;87;5;131;;;;vpos;;v;;r;;d4,88;;b1,0;;mtest;;p">
</treenode>
<treenode node="loadConfiguredGroupSettings;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\GroupManager.php;f14;57;5;85;;;;vpos;;v;;r;;d4,58;;b2,0;;m">
</treenode>
<treenode node="loadGroupsByPattern;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\GroupManager.php;f14;36;5;55;;;;vpos;;v;;r&#10;Definition&#10;    loadGroupsByPattern()&#10;&#10;Description&#10;     proceeds group names with asterisk:;;d4,37;;b2,0;;m">
</treenode>
</treenode>
<treenode node="GroupObject;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\GroupObject.php;f9;5;1;29;;;;vpos;;vExtension;;c;;r;;d0,6;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\GroupObject.php;f11;13;5;15;;;;vpos;;v;;r;;d4,14;;b1,0;;me;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\GroupObject.php;f11;9;5;11;;;;vpos;;v;;r;;d4,10;;b1,0;;me;;p">
</treenode>
<treenode node="getSubscribedEvents;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\GroupObject.php;f18;17;5;28;;;;vpos;;v;;r;;d4,18;;b1,5;;m">
</treenode>
</treenode>
<treenode node="Guzzle;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f0;14;1;294;;;;vpos;;vClient;;c;;r;;d0,15;;b0,0;;m">
<treenode node="createResponse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f14;106;5;160;;;;vpos;;v;;r&#10;Definition&#10;    createResponse(Response $response)&#10;&#10;Description&#10;     Taken from Mink\BrowserKitDriver&#10;&#10;Parameters:&#10;    Response $response;;d4,107;;b2,0;;mResponse $response;;p">
</treenode>
<treenode node="deleteHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f11;80;5;83;;;;vpos;;v;;r&#10;Definition&#10;    deleteHeader($name)&#10;&#10;Description&#10;     Deletes the header with the passed name from the list of headers that will be sent with the request.&#10;&#10;Parameters:&#10;    string $name - the name of the header to delete;;d4,81;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="doRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f14;182;5;217;;;;vpos;;v;;r;;d4,183;;b2,0;;mrequest;;p">
</treenode>
<treenode node="extractBody;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f14;236;5;246;;;;vpos;;v;;r;;d4,237;;b2,0;;mrequest;;p">
</treenode>
<treenode node="extractCookies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f14;284;5;287;;;;vpos;;v;;r;;d4,285;;b2,0;;mrequest;;p">
</treenode>
<treenode node="extractFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f14;248;5;255;;;;vpos;;v;;r;;d4,249;;b2,0;;mrequest;;p">
</treenode>
<treenode node="extractHeaders;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f14;219;5;234;;;;vpos;;v;;r;;d4,220;;b2,0;;mrequest;;p">
</treenode>
<treenode node="getAbsoluteUri;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f11;162;5;180;;;;vpos;;v;;r;;d4,163;;b1,0;;muri;;p">
</treenode>
<treenode node="mapFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f14;257;5;282;;;;vpos;;v;;r;;d4,258;;b2,0;;mrequestFiles;;parrayName;;p">
</treenode>
<treenode node="setAuth;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f11;90;5;97;;;;vpos;;v;;r&#10;Definition&#10;    setAuth($username, $password, $type = &apos;basic&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $username&#10;    string $password&#10;    string $type - Default: &apos;basic&apos;;;d4,91;;b1,0;;mstring $username;;pstring $password;;pstring $type;;p">
</treenode>
<treenode node="setAwsAuth;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f11;289;5;293;;;;vpos;;v;;r;;d4,290;;b1,0;;mconfig;;p">
</treenode>
<treenode node="setBaseUri;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f11;29;5;32;;;;vpos;;v;;r;;d4,30;;b1,0;;muri;;p">
</treenode>
<treenode node="setClient;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f11;50;5;53;;;;vpos;;v;;r;;d4,51;;b1,0;;mclient;;p">
</treenode>
<treenode node="setHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f11;65;5;72;;;;vpos;;v;;r&#10;Definition&#10;    setHeader($name, $value)&#10;&#10;Description&#10;     Sets the request header to the passed value.  The header will be sent along with the next request.&#10;&#10;Parameters:&#10;    string $name - the name of the header&#10;    string $value - the value of the header;;d4,66;;b1,0;;mstring $name;;pstring $value;;p">
</treenode>
<treenode node="setRefreshMaxInterval;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle.php;f11;45;5;48;;;;vpos;;v;;r&#10;Definition&#10;    setRefreshMaxInterval($seconds)&#10;&#10;Description&#10;     Sets the maximum allowable timeout interval for a meta tag refresh to automatically redirect a request.&#10;&#10;Parameters:&#10;    int $seconds - Number of seconds;;d4,46;;b1,0;;mint $seconds;;p">
</treenode>
</treenode>
<treenode node="Guzzle6;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f0;22;1;355;;;;vpos;;vClient;;c;;r;;d0,23;;b0,0;;m">
<treenode node="createHandler;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f18;333;5;348;;;;vpos;;v;;r;;d4,334;;b1,5;;mhandler;;p">
</treenode>
<treenode node="createResponse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f14;108;5;160;;;;vpos;;v;;r&#10;Definition&#10;    createResponse(Psr7Response $response)&#10;&#10;Description&#10;     Taken from Mink\BrowserKitDriver&#10;&#10;Parameters:&#10;    Response $response;;d4,109;;b2,0;;mResponse $response;;p">
</treenode>
<treenode node="deleteHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f11;82;5;85;;;;vpos;;v;;r&#10;Definition&#10;    deleteHeader($name)&#10;&#10;Description&#10;     Deletes the header with the passed name from the list of headers that will be sent with the request.&#10;&#10;Parameters:&#10;    string $name - the name of the header to delete;;d4,83;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="doRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f14;182;5;216;;;;vpos;;v;;r;;d4,183;;b2,0;;mrequest;;p">
</treenode>
<treenode node="extractCookies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f14;318;5;331;;;;vpos;;v;;r;;d4,319;;b2,0;;mhost;;p">
</treenode>
<treenode node="extractFormData;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f14;235;5;253;;;;vpos;;v;;r;;d4,236;;b2,0;;mrequest;;p">
</treenode>
<treenode node="extractHeaders;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f14;218;5;233;;;;vpos;;v;;r;;d4,219;;b2,0;;mrequest;;p">
</treenode>
<treenode node="extractMultipartFormData;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f14;255;5;270;;;;vpos;;v;;r;;d4,256;;b2,0;;mrequest;;p">
</treenode>
<treenode node="formatMultipart;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f14;272;5;282;;;;vpos;;v;;r;;d4,273;;b2,0;;mparts;;pkey;;pvalue;;p">
</treenode>
<treenode node="getAbsoluteUri;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f11;162;5;180;;;;vpos;;v;;r;;d4,163;;b1,0;;muri;;p">
</treenode>
<treenode node="mapFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f14;284;5;316;;;;vpos;;v;;r;;d4,285;;b2,0;;mrequestFiles;;parrayName;;p">
</treenode>
<treenode node="setAuth;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f11;92;5;99;;;;vpos;;v;;r&#10;Definition&#10;    setAuth($username, $password, $type = &apos;basic&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $username&#10;    string $password&#10;    string $type - Default: &apos;basic&apos;;;d4,93;;b1,0;;mstring $username;;pstring $password;;pstring $type;;p">
</treenode>
<treenode node="setAwsAuth;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f11;350;5;354;;;;vpos;;v;;r;;d4,351;;b1,0;;mconfig;;p">
</treenode>
<treenode node="setClient;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f11;52;5;55;;;;vpos;;v;;r;;d4,53;;b1,0;;mclient;;p">
</treenode>
<treenode node="setHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f11;67;5;74;;;;vpos;;v;;r&#10;Definition&#10;    setHeader($name, $value)&#10;&#10;Description&#10;     Sets the request header to the passed value.  The header will be sent along with the next request.&#10;&#10;Parameters:&#10;    string $name - the name of the header&#10;    string $value - the value of the header;;d4,68;;b1,0;;mstring $name;;pstring $value;;p">
</treenode>
<treenode node="setRefreshMaxInterval;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Guzzle6.php;f11;47;5;50;;;;vpos;;v;;r&#10;Definition&#10;    setRefreshMaxInterval($seconds)&#10;&#10;Description&#10;     Sets the maximum allowable timeout interval for a meta tag refresh to automatically redirect a request.&#10;&#10;Parameters:&#10;    int $seconds - Number of seconds;;d4,48;;b1,0;;mint $seconds;;p">
</treenode>
</treenode>
<treenode node="HeadlineTrait;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HeadlineTrait.php;f0;12;1;69;;;;vpos;;v;;r&#10;Definition&#10;    trait HeadlineTrait&#10;&#10;Description&#10;     Adds the headline blocks;;d0,13;;b0,0;;m">
<treenode node="consumeHeadline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HeadlineTrait.php;f11;33;2;56;;;;vpos;;v;;r&#10;Definition&#10;    consumeHeadline($lines, $current)&#10;&#10;Description&#10;     Consume lines for a headline;;d1,34;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="identifyHeadline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HeadlineTrait.php;f11;17;2;28;;;;vpos;;v;;r&#10;Definition&#10;    identifyHeadline($line, $lines, $current)&#10;&#10;Description&#10;     identify a line as a headline;;d1,18;;b2,0;;mline;;plines;;pcurrent;;p">
</treenode>
<treenode node="parseInline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HeadlineTrait.php;f20;67;47;67;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mtext;;p">
</treenode>
<treenode node="renderAbsy;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HeadlineTrait.php;f20;68;46;68;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mabsy;;p">
</treenode>
<treenode node="renderHeadline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HeadlineTrait.php;f11;61;2;65;;;;vpos;;v;;r&#10;Definition&#10;    renderHeadline($block)&#10;&#10;Description&#10;     Renders a headline;;d1,62;;b2,0;;mblock;;p">
</treenode>
</treenode>
<treenode node="HelloController;PHP:Class Name;H:\OSPanel\domains\yii\commands\HelloController.php;f0;20;1;33;;;;vpos;;vController;;c;;r&#10;Definition&#10;    class HelloController extends Controller&#10;&#10;Description&#10;     This command echoes the first argument that you have entered.;;d0,21;;b0,0;;m">
<treenode node="actionIndex;PHP:Function Name;H:\OSPanel\domains\yii\commands\HelloController.php;f11;27;5;32;;;;vpos;;vint;;r&#10;Definition&#10;    actionIndex($message = &apos;hello world&apos;)&#10;&#10;Description&#10;     This command echoes what you have entered as the message.&#10;&#10;Parameters:&#10;    string $message - the message to be echoed&#10;&#10;Return:&#10;   Exit code;;d4,28;;b1,0;;mstring $message;;p">
</treenode>
</treenode>
<treenode node="Helper;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Helper.php;f0;6;1;44;;;;vpos;;vNamespaces;;c;;r;;d0,7;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Helper.php;f11;26;5;30;;;;vpos;;v;;r;;d4,27;;b1,0;;mname;;pnamespace;;p">
</treenode>
<treenode node="getHelperName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Helper.php;f11;40;5;43;;;;vpos;;v;;r;;d4,41;;b1,0;;m">
</treenode>
<treenode node="produce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Helper.php;f11;32;5;38;;;;vpos;;v;;r;;d4,33;;b1,0;;m">
</treenode>
</treenode>
<treenode node="HomeCest;PHP:Class Name;H:\OSPanel\domains\yii\tests\acceptance\HomeCest.php;f0;4;1;17;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="ensureThatHomePageWorks;PHP:Function Name;H:\OSPanel\domains\yii\tests\acceptance\HomeCest.php;f11;6;5;16;;;;vpos;;v;;r;;d4,7;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="HtmlTrait;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HtmlTrait.php;f0;12;1;167;;;;vpos;;v;;r&#10;Definition&#10;    trait HtmlTrait&#10;&#10;Description&#10;     Adds inline and block HTML support;;d0,13;;b0,0;;m">
<treenode node="consumeHtml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HtmlTrait.php;f11;78;2;109;;;;vpos;;v;;r&#10;Definition&#10;    consumeHtml($lines, $current)&#10;&#10;Description&#10;     Consume lines for an HTML block;;d1,79;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="identifyHtml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HtmlTrait.php;f11;49;2;73;;;;vpos;;v;;r&#10;Definition&#10;    identifyHtml($line, $lines, $current)&#10;&#10;Description&#10;     identify a line as the beginning of a HTML block.;;d1,50;;b2,0;;mline;;plines;;pcurrent;;p">
</treenode>
<treenode node="parseEntity;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HtmlTrait.php;f11;123;2;131;;;;vpos;;v;;r&#10;Definition&#10;    parseEntity($text)&#10;&#10;Description&#10;     Parses an &amp; or a html entity definition.;;d1,124;;b2,0;;mtext;;p">
</treenode>
<treenode node="parseGt;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HtmlTrait.php;f11;163;2;166;;;;vpos;;v;;r&#10;Definition&#10;    parseGt($text)&#10;&#10;Description&#10;     Escapes `&gt;` characters.;;d1,164;;b2,0;;mtext;;p">
</treenode>
<treenode node="parseInlineHtml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HtmlTrait.php;f11;145;2;157;;;;vpos;;v;;r&#10;Definition&#10;    parseInlineHtml($text)&#10;&#10;Description&#10;     Parses inline HTML.;;d1,146;;b2,0;;mtext;;p">
</treenode>
<treenode node="renderHtml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HtmlTrait.php;f11;114;2;117;;;;vpos;;v;;r&#10;Definition&#10;    renderHtml($block)&#10;&#10;Description&#10;     Renders an HTML block;;d1,115;;b2,0;;mblock;;p">
</treenode>
<treenode node="renderInlineHtml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\HtmlTrait.php;f11;136;2;139;;;;vpos;;v;;r&#10;Definition&#10;    renderInlineHtml($block)&#10;&#10;Description&#10;     renders a html entity.;;d1,137;;b2,0;;mblock;;p">
</treenode>
</treenode>
<treenode node="HttpCode;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f0;20;1;161;;;;vpos;;v;;r&#10;Definition&#10;    class HttpCode&#10;&#10;Description&#10;     Class containing constants of HTTP Status Codes and method to print HTTP code with its description.;;d0,21;;b0,0;;m">
<treenode node="ACCEPTED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;26;18;26;;;;vpos;;v;;r202;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="ALREADY_REPORTED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;32;26;32;;;;vpos;;v;;r208;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="BAD_GATEWAY;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;72;21;72;;;;vpos;;v;;r502;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="BAD_REQUEST;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;43;21;43;;;;vpos;;v;;r400;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CONFLICT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;52;18;52;;;;vpos;;v;;r409;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="CREATED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;25;17;25;;;;vpos;;v;;r201;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="EXPECTATION_FAILED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;60;28;60;;;;vpos;;v;;r417;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FAILED_DEPENDENCY;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;64;27;64;;;;vpos;;v;;r424;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FORBIDDEN;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;46;19;46;;;;vpos;;v;;r403;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="FOUND;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;36;15;36;;;;vpos;;v;;r302;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="GATEWAY_TIMEOUT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;74;25;74;;;;vpos;;v;;r504;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="GONE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;53;14;53;;;;vpos;;v;;r410;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="I_AM_A_TEAPOT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;61;23;61;;;;vpos;;v;;r418;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="IM_USED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;33;17;33;;;;vpos;;v;;r226;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="INSUFFICIENT_STORAGE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;77;30;77;;;;vpos;;v;;r507;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="INTERNAL_SERVER_ERROR;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;70;31;70;;;;vpos;;v;;r500;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LENGTH_REQUIRED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;54;25;54;;;;vpos;;v;;r411;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LOCKED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;63;16;63;;;;vpos;;v;;r423;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="LOOP_DETECTED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;78;23;78;;;;vpos;;v;;r508;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="METHOD_NOT_ALLOWED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;48;28;48;;;;vpos;;v;;r405;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MOVED_PERMANENTLY;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;35;27;35;;;;vpos;;v;;r301;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MULTI_STATUS;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;31;22;31;;;;vpos;;v;;r207;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="MULTIPLE_CHOICES;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;34;26;34;;;;vpos;;v;;r300;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="NETWORK_AUTHENTICATION_REQUIRED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;80;41;80;;;;vpos;;v;;r511;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="NO_CONTENT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;28;20;28;;;;vpos;;v;;r204;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="NON_AUTHORITATIVE_INFORMATION;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;27;39;27;;;;vpos;;v;;r203;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="NOT_ACCEPTABLE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;49;24;49;;;;vpos;;v;;r406;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="NOT_EXTENDED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;79;22;79;;;;vpos;;v;;r510;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="NOT_FOUND;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;47;19;47;;;;vpos;;v;;r404;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="NOT_IMPLEMENTED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;71;25;71;;;;vpos;;v;;r501;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="NOT_MODIFIED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;38;22;38;;;;vpos;;v;;r304;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="OK;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;24;12;24;;;;vpos;;v;;r200;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PARTIAL_CONTENT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;30;25;30;;;;vpos;;v;;r206;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PAYMENT_REQUIRED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;45;26;45;;;;vpos;;v;;r402;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PERMANENTLY_REDIRECT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;42;30;42;;;;vpos;;v;;r308;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PRECONDITION_FAILED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;55;29;55;;;;vpos;;v;;r412;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PRECONDITION_REQUIRED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;67;31;67;;;;vpos;;v;;r428;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PROCESSING;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;23;20;23;;;;vpos;;v;;r102;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PROXY_AUTHENTICATION_REQUIRED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;50;39;50;;;;vpos;;v;;r407;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="REQUEST_ENTITY_TOO_LARGE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;56;34;56;;;;vpos;;v;;r413;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="REQUEST_HEADER_FIELDS_TOO_LARGE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;69;41;69;;;;vpos;;v;;r431;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="REQUEST_TIMEOUT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;51;25;51;;;;vpos;;v;;r408;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="REQUEST_URI_TOO_LONG;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;57;30;57;;;;vpos;;v;;r414;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="REQUESTED_RANGE_NOT_SATISFIABLE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;59;41;59;;;;vpos;;v;;r416;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="RESERVED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;40;18;40;;;;vpos;;v;;r306;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="RESERVED_FOR_WEBDAV_ADVANCED_COLLECTIONS_EXPIRED_PROPOSAL;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;65;67;65;;;;vpos;;v;;r425;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="RESET_CONTENT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;29;23;29;;;;vpos;;v;;r205;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SEE_OTHER;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;37;19;37;;;;vpos;;v;;r303;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SERVICE_UNAVAILABLE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;73;29;73;;;;vpos;;v;;r503;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="SWITCHING_PROTOCOLS;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;22;29;22;;;;vpos;;v;;r101;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TEMPORARY_REDIRECT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;41;28;41;;;;vpos;;v;;r307;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="TOO_MANY_REQUESTS;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;68;27;68;;;;vpos;;v;;r429;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="UNAUTHORIZED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;44;22;44;;;;vpos;;v;;r401;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="UNPROCESSABLE_ENTITY;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;62;30;62;;;;vpos;;v;;r422;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="UNSUPPORTED_MEDIA_TYPE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;58;32;58;;;;vpos;;v;;r415;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="UPGRADE_REQUIRED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;66;26;66;;;;vpos;;v;;r426;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="USE_PROXY;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;39;19;39;;;;vpos;;v;;r305;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="VARIANT_ALSO_NEGOTIATES_EXPERIMENTAL;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;76;46;76;;;;vpos;;v;;r506;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="VERSION_NOT_SUPPORTED;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f9;75;31;75;;;;vpos;;v;;r505;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\HttpCode.php;f18;154;5;160;;;;vpos;;vmixed;;r&#10;Definition&#10;    getDescription($code)&#10;&#10;Description&#10;     Returns string with HTTP code and its description&#10;&#10;Parameters:&#10;     $code;;d4,155;;b1,5;;m $code;;p">
</treenode>
</treenode>
<treenode node="IgnoreIfMetadataBlocked;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\IgnoreIfMetadataBlocked.php;f0;5;1;36;;;;vpos;;v;;r;;d0,6;;b0,0;;m">
<treenode node="getMetadata;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\IgnoreIfMetadataBlocked.php;f23;10;45;10;;;;vpos;;vMetadata;;r&#10;Description&#10;     ;;d-1,-1;;b2,0;;m">
</treenode>
<treenode node="getTestResultObject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\IgnoreIfMetadataBlocked.php;f23;17;53;17;;;;vpos;;v;;r&#10;Description&#10;      \PHPUnit\Framework\TestResult;;d-1,-1;;b2,0;;m">
</treenode>
<treenode node="ignore;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\IgnoreIfMetadataBlocked.php;f23;12;48;12;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mignored;;p">
</treenode>
<treenode node="ignoreIfMetadataBlockedStart;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\IgnoreIfMetadataBlocked.php;f14;19;5;35;;;;vpos;;v;;r;;d4,20;;b2,0;;m">
</treenode>
</treenode>
<treenode node="IncludedCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\IncludedCest.php;f0;1;1;166;;;;vpos;;v;;r;;d0,2;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\IncludedCest.php;f11;4;5;8;;;;vpos;;v;;r;;d4,5;;b1,0;;m">
</treenode>
<treenode node="buildIncluded;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\IncludedCest.php;f11;158;5;165;;;;vpos;;v;;r&#10;Definition&#10;    buildIncluded(\CliGuy $I)&#10;&#10;Description&#10;      before moveToIncluded&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,159;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="moveToIncluded;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\IncludedCest.php;f14;13;5;16;;;;vpos;;v;;r&#10;Definition&#10;    moveToIncluded(\CliGuy $I)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    CliGuy $I;;d4,14;;b2,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runIncludedWithCoverage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\IncludedCest.php;f11;144;5;152;;;;vpos;;v;;r&#10;Definition&#10;    runIncludedWithCoverage(\CliGuy $I)&#10;&#10;Description&#10;      before moveToIncluded&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,145;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runIncludedWithHtmlOutput;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\IncludedCest.php;f11;126;5;137;;;;vpos;;v;;r&#10;Definition&#10;    runIncludedWithHtmlOutput(\CliGuy $I)&#10;&#10;Description&#10;      before moveToIncluded&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,127;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runIncludedWithXmlOutput;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\IncludedCest.php;f11;109;5;120;;;;vpos;;v;;r&#10;Definition&#10;    runIncludedWithXmlOutput(\CliGuy $I)&#10;&#10;Description&#10;      before moveToIncluded&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,110;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runSuitesFromIncludedConfigs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\IncludedCest.php;f11;22;5;31;;;;vpos;;v;;r&#10;Definition&#10;    runSuitesFromIncludedConfigs(\CliGuy $I)&#10;&#10;Description&#10;      before moveToIncluded&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,23;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestsFromIncludedConfigs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\IncludedCest.php;f11;37;5;54;;;;vpos;;v;;r&#10;Definition&#10;    runTestsFromIncludedConfigs(\CliGuy $I)&#10;&#10;Description&#10;      before moveToIncluded&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,38;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestsFromIncludedConfigsNested;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\IncludedCest.php;f11;60;5;76;;;;vpos;;v;;r&#10;Definition&#10;    runTestsFromIncludedConfigsNested(\CliGuy $I)&#10;&#10;Description&#10;      before moveToIncluded&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,61;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestsFromIncludedConfigsSingleTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\IncludedCest.php;f11;82;5;103;;;;vpos;;v;;r&#10;Definition&#10;    runTestsFromIncludedConfigsSingleTest(\CliGuy $I)&#10;&#10;Description&#10;      before moveToIncluded&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,83;;b1,0;;mCliGuy $I;;p">
</treenode>
</treenode>
<treenode node="Incomplete;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Incomplete.php;f0;6;1;17;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\Incomplete.php;f0;3;1;6;;;;vpos;;vCodeceptionStep;;c;;r;;d0,7;;b0,0;;m">
<treenode node="__toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Incomplete.php;f11;13;5;16;;;;vpos;;v;;r;;d4,14;;b1,0;;m">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Incomplete.php;f11;8;5;11;;;;vpos;;v;;r;;d4,9;;b1,0;;mcontainer;;p">
</treenode>
</treenode>
<treenode node="Init;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Init.php;f0;11;1;54;;;;vpos;;vCommand;;c;;r;;d0,12;;b0,0;;m">
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Init.php;f14;14;5;24;;;;vpos;;v;;r;;d4,15;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Init.php;f11;31;5;53;;;;vpos;;v;;r;;d4,32;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Init.php;f11;26;5;29;;;;vpos;;v;;r;;d4,27;;b1,0;;m">
</treenode>
</treenode>
<treenode node="InitTemplate;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f9;32;1;248;;;;vpos;;vFileSystem;;cStyle;;c;;r&#10;Definition&#10;    class InitTemplate&#10;&#10;Description&#10;     Codeception templates allow creating a customized setup and configuration for your project. An abstract class for installation template. Each init template should extend it and implement a `setup` method. Use it to build a custom setup class which can be started with `codecept init` command.;;d0,33;;b0,0;;m">
<treenode node="GIT_IGNORE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f9;37;20;37;;;;vpos;;v;;r&apos;.gitignore&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f11;64;5;69;;;;vpos;;v;;r;;d4,65;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="ask;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f14;106;5;122;;;;vpos;;vmixed;;r&#10;Definition&#10;    ask($question, $answer = null)&#10;&#10;Description&#10;     ```php &lt;?php // propose firefox as default browser $this-&gt;ask(&apos;select the browser of your choice&apos;, &apos;firefox&apos;);s&#10;&#10;Parameters:&#10;     $question&#10;    null $answer&#10;&#10;Return:&#10;   |string;;d4,107;;b2,0;;m $question;;pnull $answer;;p">
</treenode>
<treenode node="checkInstalled;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f14;207;5;212;;;;vpos;;v;;r;;d4,208;;b2,0;;mdir;;p">
</treenode>
<treenode node="createActor;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f14;222;5;247;;;;vpos;;v;;r&#10;Definition&#10;    createActor($name, $directory, $suiteConfig)&#10;&#10;Description&#10;     Create an Actor class and generate actions for it. Requires a suite config as array in 3rd parameter.&#10;&#10;Parameters:&#10;     $name&#10;     $directory&#10;     $suiteConfig;;d4,223;;b2,0;;m $name;;p $directory;;p $suiteConfig;;p">
</treenode>
<treenode node="createEmptyDirectory;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f14;194;5;198;;;;vpos;;v;;r&#10;Definition&#10;    createEmptyDirectory($dir)&#10;&#10;Description&#10;     Create an empty directory and add a placeholder file into it&#10;&#10;Parameters:&#10;     $dir;;d4,195;;b2,0;;m $dir;;p">
</treenode>
<treenode node="createHelper;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f14;173;5;188;;;;vpos;;v;;r&#10;Definition&#10;    createHelper($name, $directory)&#10;&#10;Description&#10;     Create a helper class inside a directory&#10;&#10;Parameters:&#10;     $name&#10;     $directory;;d4,174;;b2,0;;m $name;;p $directory;;p">
</treenode>
<treenode node="gitIgnore;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f14;200;5;205;;;;vpos;;v;;r;;d4,201;;b2,0;;mpath;;p">
</treenode>
<treenode node="initDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f11;74;5;81;;;;vpos;;v;;r&#10;Definition&#10;    initDir($workDir)&#10;&#10;Description&#10;     Change the directory where Codeception should be installed.;;d4,75;;b1,0;;mworkDir;;p">
</treenode>
<treenode node="say;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f14;135;5;138;;;;vpos;;v;;r&#10;Definition&#10;    say($message = &apos;&apos;)&#10;&#10;Description&#10;     Print a message to console.&#10;&#10;Parameters:&#10;    string $message;;d4,136;;b2,0;;mstring $message;;p">
</treenode>
<treenode node="sayInfo;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f14;162;5;165;;;;vpos;;v;;r&#10;Definition&#10;    sayInfo($message)&#10;&#10;Description&#10;     Print info message&#10;&#10;Parameters:&#10;     $message;;d4,163;;b2,0;;m $message;;p">
</treenode>
<treenode node="saySuccess;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f14;144;5;147;;;;vpos;;v;;r&#10;Definition&#10;    saySuccess($message)&#10;&#10;Description&#10;     Print a successful message&#10;&#10;Parameters:&#10;     $message;;d4,145;;b2,0;;m $message;;p">
</treenode>
<treenode node="sayWarning;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f14;153;5;156;;;;vpos;;v;;r&#10;Definition&#10;    sayWarning($message)&#10;&#10;Description&#10;     Print warning message&#10;&#10;Parameters:&#10;     $message;;d4,154;;b2,0;;m $message;;p">
</treenode>
<treenode node="setup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\InitTemplate.php;f20;87;36;87;;;;vpos;;vmixed;;r&#10;Description&#10;     Override this class to create customized setup.;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="InjectionException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\InjectionException.php;f0;3;1;5;;;;vpos;;vException;;c;;r;;d0,4;;b0,0;;m">
</treenode>
<treenode node="InnerBrowser;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f0;32;1;1906;;;;vpos;;vModule;;cWeb;;cPageSourceSaver;;cElementLocator;;cConflictsWithModule;;c;;r;;d0,33;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;69;5;75;;;;vpos;;v;;r;;d4,70;;b1,0;;mtest;;p">
</treenode>
<treenode node="_conflicts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;77;5;80;;;;vpos;;v;;r;;d4,78;;b1,0;;m">
</treenode>
<treenode node="_failed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;58;5;67;;;;vpos;;v;;r;;d4,59;;b1,0;;mtest;;pfail;;p">
</treenode>
<treenode node="_findElements;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;82;5;85;;;;vpos;;v;;r;;d4,83;;b1,0;;mlocator;;p">
</treenode>
<treenode node="_getCurrentUri;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;532;5;535;;;;vpos;;vstring;;r&#10;Definition&#10;    _getCurrentUri()&#10;&#10;Description&#10;     ;;d4,533;;b1,0;;m">
</treenode>
<treenode node="_getResponseContent;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;146;5;149;;;;vpos;;vstring;;r&#10;Definition&#10;    _getResponseContent()&#10;&#10;Description&#10;     Returns content of the last response Use it in Helpers when you want to retrieve response of request performed by another module.;;d4,147;;b1,0;;m">
</treenode>
<treenode node="_getResponseStatusCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1246;5;1249;;;;vpos;;v;;r;;d4,1247;;b1,0;;m">
</treenode>
<treenode node="_loadPage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;232;5;243;;;;vpos;;v;;r&#10;Definition&#10;    _loadPage(&#10;        $method,&#10;        $uri,&#10;        array $parameters = [],&#10;        array $files = [],&#10;        array $server = [],&#10;        $content = null&#10;    )&#10;&#10;Description&#10;     Opens a page with arbitrary request parameters. Useful for testing multi-step forms on a specific step.&#10;&#10;Parameters:&#10;     $method&#10;     $uri&#10;    array $parameters&#10;    array $files&#10;    array $server&#10;    null $content;;d6,239;;b1,0;;m $method;;p $uri;;parray $parameters;;parray $files;;parray $server;;pnull $content;;p">
</treenode>
<treenode node="_request;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;116;5;126;;;;vpos;;vmixed;;r&#10;Definition&#10;    _request(&#10;        $method,&#10;        $uri,&#10;        array $parameters = [],&#10;        array $files = [],&#10;        array $server = [],&#10;        $content = null&#10;    )&#10;&#10;Description&#10;     Send custom request to a backend using method, uri, parameters, etc. Use it in Helpers to create special request actions, like accessing API Returns a string with response body.&#10;&#10;Parameters:&#10;     $method&#10;     $uri&#10;    array $parameters&#10;    array $files&#10;    array $server&#10;    null $content&#10;&#10;Return:&#10;   |Crawler;;d6,123;;b1,0;;m $method;;p $uri;;parray $parameters;;parray $files;;parray $server;;pnull $content;;p">
</treenode>
<treenode node="_savePageSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;268;5;271;;;;vpos;;v;;r;;d4,269;;b1,0;;mfilename;;p">
</treenode>
<treenode node="amHttpAuthenticated;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;279;5;283;;;;vpos;;v;;r&#10;Definition&#10;    amHttpAuthenticated($username, $password)&#10;&#10;Description&#10;     Authenticates user for HTTP_AUTH&#10;&#10;Parameters:&#10;     $username&#10;     $password;;d4,280;;b1,0;;m $username;;p $password;;p">
</treenode>
<treenode node="amOnPage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;342;5;345;;;;vpos;;v;;r;;d4,343;;b1,0;;mpage;;p">
</treenode>
<treenode node="assertDomContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1618;5;1622;;;;vpos;;v;;r;;d4,1619;;b2,0;;mnodes;;pmessage;;ptext;;p">
</treenode>
<treenode node="assertDomNotContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1624;5;1628;;;;vpos;;v;;r;;d4,1625;;b2,0;;mnodes;;pmessage;;ptext;;p">
</treenode>
<treenode node="assertPageContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1630;5;1638;;;;vpos;;v;;r;;d4,1631;;b2,0;;mneedle;;pmessage;;p">
</treenode>
<treenode node="assertPageNotContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1640;5;1648;;;;vpos;;v;;r;;d4,1641;;b2,0;;mneedle;;pmessage;;p">
</treenode>
<treenode node="assertPageSourceContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1650;5;1658;;;;vpos;;v;;r;;d4,1651;;b2,0;;mneedle;;pmessage;;p">
</treenode>
<treenode node="assertPageSourceNotContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1660;5;1668;;;;vpos;;v;;r;;d4,1661;;b2,0;;mneedle;;pmessage;;p">
</treenode>
<treenode node="attachFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1153;5;1171;;;;vpos;;v;;r;;d4,1154;;b1,0;;mfield;;pfilename;;p">
</treenode>
<treenode node="checkOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1122;5;1125;;;;vpos;;v;;r;;d4,1123;;b1,0;;moption;;p">
</treenode>
<treenode node="click;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;347;5;379;;;;vpos;;v;;r;;d4,348;;b1,0;;mlink;;pcontext;;p">
</treenode>
<treenode node="clickButton;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f12;411;5;440;;;;vpos;;vboolean;;r&#10;Definition&#10;    clickButton(\DOMNode $node)&#10;&#10;Description&#10;     Clicks the link or submits the form when the button is clicked&#10;&#10;Parameters:&#10;    \DOMNode $node&#10;&#10;Return:&#10;   clicked something;;d4,412;;b3,0;;m\DOMNode $node;;p">
</treenode>
<treenode node="clickByLocator;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;385;5;403;;;;vpos;;vbool;;r&#10;Definition&#10;    clickByLocator($link)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $link;;d4,386;;b2,0;;m $link;;p">
</treenode>
<treenode node="clientClick;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1772;5;1778;;;;vpos;;vCrawler;;r&#10;Definition&#10;    clientClick(Link $link)&#10;&#10;Description&#10;     Clicks on a given link.&#10;&#10;Parameters:&#10;    Link $link - A Link instance;;d4,1773;;b2,0;;mLink $link;;p">
</treenode>
<treenode node="clientRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;151;5;195;;;;vpos;;v;;r;;d4,152;;b2,0;;mmethod;;puri;;pparameters;;pfiles;;pserver;;pcontent;;pchangeHistory;;p">
</treenode>
<treenode node="debugCookieJar;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1845;5;1850;;;;vpos;;v;;r;;d4,1846;;b2,0;;m">
</treenode>
<treenode node="debugResponse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1238;5;1244;;;;vpos;;v;;r&#10;Definition&#10;    debugResponse($url)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $url;;d4,1239;;b2,0;;m $url;;p">
</treenode>
<treenode node="deleteHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;335;5;339;;;;vpos;;v;;r&#10;Definition&#10;    deleteHeader($name)&#10;&#10;Description&#10;     Deletes the header with the passed name.  Subsequent requests will not have the deleted header in its request.&#10;&#10;Parameters:&#10;    string $name - the name of the header to delete;;d4,336;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="dontSee;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;478;5;487;;;;vpos;;v;;r;;d4,479;;b1,0;;mtext;;pselector;;p">
</treenode>
<treenode node="dontSeeCheckboxIsChecked;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;589;5;593;;;;vpos;;v;;r;;d4,590;;b1,0;;mcheckbox;;p">
</treenode>
<treenode node="dontSeeCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1450;5;1455;;;;vpos;;v;;r;;d4,1451;;b1,0;;mcookie;;pparams;;p">
</treenode>
<treenode node="dontSeeCurrentUrlEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;552;5;555;;;;vpos;;v;;r;;d4,553;;b1,0;;muri;;p">
</treenode>
<treenode node="dontSeeCurrentUrlMatches;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;562;5;565;;;;vpos;;v;;r;;d4,563;;b1,0;;muri;;p">
</treenode>
<treenode node="dontSeeElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1483;5;1492;;;;vpos;;v;;r;;d4,1484;;b1,0;;mselector;;pattributes;;p">
</treenode>
<treenode node="dontSeeInCurrentUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;542;5;545;;;;vpos;;v;;r;;d4,543;;b1,0;;muri;;p">
</treenode>
<treenode node="dontSeeInField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;601;5;605;;;;vpos;;v;;r;;d4,602;;b1,0;;mfield;;pvalue;;p">
</treenode>
<treenode node="dontSeeInFormFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;612;5;615;;;;vpos;;v;;r;;d4,613;;b1,0;;mformSelector;;pparams;;p">
</treenode>
<treenode node="dontSeeInSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;494;5;497;;;;vpos;;v;;r;;d4,495;;b1,0;;mraw;;p">
</treenode>
<treenode node="dontSeeInTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1608;5;1616;;;;vpos;;v;;r;;d4,1609;;b1,0;;mtitle;;p">
</treenode>
<treenode node="dontSeeLink;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;514;5;526;;;;vpos;;v;;r;;d4,515;;b1,0;;mtext;;purl;;p">
</treenode>
<treenode node="dontSeeOptionIsSelected;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1523;5;1535;;;;vpos;;v;;r;;d4,1524;;b1,0;;mselector;;poptionText;;p">
</treenode>
<treenode node="dontSeeResponseCodeIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1590;5;1597;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeResponseCodeIs($code)&#10;&#10;Description&#10;     Checks that response code is equal to value provided.&#10;&#10;Parameters:&#10;     $code;;d4,1591;;b1,0;;m $code;;p">
</treenode>
<treenode node="fillField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;993;5;1008;;;;vpos;;v;;r;;d4,994;;b1,0;;mfield;;pvalue;;p">
</treenode>
<treenode node="filterByAttributes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1313;5;1323;;;;vpos;;v;;r;;d4,1314;;b2,0;;mnodes;;pattributes;;p">
</treenode>
<treenode node="filterByCSS;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1695;5;1701;;;;vpos;;vCrawler;;r&#10;Definition&#10;    filterByCSS($locator)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $locator;;d4,1696;;b2,0;;m $locator;;p">
</treenode>
<treenode node="filterByXPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1707;5;1713;;;;vpos;;vCrawler;;r&#10;Definition&#10;    filterByXPath($locator)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $locator;;d4,1708;;b2,0;;m $locator;;p">
</treenode>
<treenode node="getAbsoluteUrlFor;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;879;5;886;;;;vpos;;vstring;;r&#10;Definition&#10;    getAbsoluteUrlFor($uri)&#10;&#10;Description&#10;     Returns an absolute URL for the passed URI with the current URL as the base path.&#10;&#10;Parameters:&#10;    string $uri - the absolute or relative URI&#10;&#10;Return:&#10;   the absolute URL;;d4,880;;b2,0;;mstring $uri;;p">
</treenode>
<treenode node="getBaseUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f12;448;5;451;;;;vpos;;v;;r;;d4,449;;b3,0;;m">
</treenode>
<treenode node="getCrawler;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f12;249;5;255;;;;vpos;;vCrawler;;r&#10;Definition&#10;    getCrawler()&#10;&#10;Description&#10;     ;;d4,250;;b3,0;;m">
</treenode>
<treenode node="getFieldByLabelOrCss;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1053;5;1057;;;;vpos;;v;;r;;d4,1054;;b2,0;;mfield;;p">
</treenode>
<treenode node="getFieldsByLabelOrCss;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1015;5;1051;;;;vpos;;v;;r&#10;Definition&#10;    getFieldsByLabelOrCss($field)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $field;;d4,1016;;b2,0;;m $field;;p">
</treenode>
<treenode node="getFormFor;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;945;5;961;;;;vpos;;v;;r&#10;Definition&#10;    getFormFor(Crawler $node)&#10;&#10;Description&#10;     Returns the DomCrawler\Form object for the form pointed to by $node or its closes form parent.&#10;&#10;Parameters:&#10;    \Symfony\Component\DomCrawler\Crawler $node;;d4,946;;b2,0;;m\Symfony\Component\DomCrawler\Crawler $node;;p">
</treenode>
<treenode node="getFormFromCrawler;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f12;922;5;936;;;;vpos;;vForm;;r&#10;Definition&#10;    getFormFromCrawler(Crawler $form)&#10;&#10;Description&#10;     Returns a crawler Form object for the form pointed to by the passed Crawler.&#10;&#10;Parameters:&#10;    Crawler $form - the form;;d4,923;;b3,0;;mCrawler $form;;p">
</treenode>
<treenode node="getFormPhpValues;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1719;5;1737;;;;vpos;;varray;;r&#10;Definition&#10;    getFormPhpValues($requestParams)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $requestParams;;d4,1720;;b2,0;;m $requestParams;;p">
</treenode>
<treenode node="getFormUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;896;5;900;;;;vpos;;vstring;;r&#10;Definition&#10;    getFormUrl(Crawler $form)&#10;&#10;Description&#10;     Returns the form action&apos;s absolute URL.&#10;&#10;Parameters:&#10;    \Symfony\Component\DomCrawler\Crawler $form;;d4,897;;b2,0;;m\Symfony\Component\DomCrawler\Crawler $form;;p">
</treenode>
<treenode node="getFormValuesFor;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;972;5;991;;;;vpos;;varray;;r&#10;Definition&#10;    getFormValuesFor(Form $form)&#10;&#10;Description&#10;     Returns an array of name =&gt; value pairs for the passed form.&#10;&#10;Parameters:&#10;    \Symfony\Component\DomCrawler\Form - the form&#10;&#10;Return:&#10;   an array of name =&gt; value pairs;;d4,973;;b2,0;;m\Symfony\Component\DomCrawler\Form;;p">
</treenode>
<treenode node="getInputValue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;738;5;751;;;;vpos;;varray;;r&#10;Definition&#10;    getInputValue($input)&#10;&#10;Description&#10;     Get the values of a set of input fields.&#10;&#10;Parameters:&#10;    Crawler $input&#10;&#10;Return:&#10;   |string;;d4,739;;b2,0;;mCrawler $input;;p">
</treenode>
<treenode node="getNormalizedResponseContent;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1892;5;1905;;;;vpos;;vstring;;r&#10;Definition&#10;    getNormalizedResponseContent()&#10;&#10;Description&#10;     ;;d4,1893;;b2,0;;m">
</treenode>
<treenode node="getResponseStatusCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1251;5;1262;;;;vpos;;v;;r;;d4,1252;;b2,0;;m">
</treenode>
<treenode node="getRunningClient;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f12;257;5;266;;;;vpos;;v;;r;;d4,258;;b3,0;;m">
</treenode>
<treenode node="getSubmissionFormFieldName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;760;5;766;;;;vpos;;vstring;;r&#10;Definition&#10;    getSubmissionFormFieldName($name)&#10;&#10;Description&#10;     Strips out one pair of trailing square brackets from a field&apos;s name.&#10;&#10;Parameters:&#10;    string $name - the field name&#10;&#10;Return:&#10;   the name after stripping trailing square brackets;;d4,761;;b2,0;;mstring $name;;p">
</treenode>
<treenode node="getValueAndTextFromField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;705;5;730;;;;vpos;;varray;;r&#10;Definition&#10;    getValueAndTextFromField(Crawler $nodes)&#10;&#10;Description&#10;     Get the values of a set of fields and also the texts of selected options.&#10;&#10;Parameters:&#10;    Crawler $nodes&#10;&#10;Return:&#10;   |mixed|string;;d4,706;;b2,0;;mCrawler $nodes;;p">
</treenode>
<treenode node="grabAttributeFrom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1337;5;1344;;;;vpos;;v;;r;;d4,1338;;b1,0;;mcssOrXpath;;pattribute;;p">
</treenode>
<treenode node="grabCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1420;5;1429;;;;vpos;;v;;r;;d4,1421;;b1,0;;mcookie;;pparams;;p">
</treenode>
<treenode node="grabFromCurrentUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;567;5;581;;;;vpos;;v;;r;;d4,568;;b1,0;;muri;;p">
</treenode>
<treenode node="grabMultiple;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1346;5;1359;;;;vpos;;v;;r;;d4,1347;;b1,0;;mcssOrXpath;;pattribute;;p">
</treenode>
<treenode node="grabPageSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1438;5;1441;;;;vpos;;vstring;;r&#10;Definition&#10;    grabPageSource()&#10;&#10;Description&#10;     Grabs current page source code.&#10;&#10;Return:&#10;   Current page source code;;d4,1439;;b1,0;;m">
</treenode>
<treenode node="grabTextFrom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1325;5;1335;;;;vpos;;v;;r;;d4,1326;;b1,0;;mcssOrXPathOrRegex;;p">
</treenode>
<treenode node="grabValueFrom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1366;5;1399;;;;vpos;;varray;;r&#10;Definition&#10;    grabValueFrom($field)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $field&#10;&#10;Return:&#10;   |mixed|null|string;;d4,1367;;b1,0;;m $field;;p">
</treenode>
<treenode node="haveHttpHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;312;5;316;;;;vpos;;v;;r&#10;Definition&#10;    haveHttpHeader($name, $value)&#10;&#10;Description&#10;     Sets the HTTP header to the passed value - which is used on subsequent HTTP requests through PhpBrowser.&#10;&#10;Parameters:&#10;    string $name - the name of the request header&#10;    string $value - the value to set it to for subsequent;;d4,313;;b1,0;;mstring $name;;pstring $value;;p">
</treenode>
<treenode node="isInternalDomain;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;197;5;209;;;;vpos;;v;;r;;d4,198;;b2,0;;mdomain;;p">
</treenode>
<treenode node="match;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1269;5;1282;;;;vpos;;vCrawler;;r&#10;Definition&#10;    match($selector)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $selector;;d4,1270;;b2,0;;m $selector;;p">
</treenode>
<treenode node="matchFormField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1676;5;1689;;;;vpos;;vFormField;;r&#10;Definition&#10;    matchFormField($name, $form, $dynamicField)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $name&#10;     $form&#10;     $dynamicField;;d4,1677;;b2,0;;m $name;;p $form;;p $dynamicField;;p">
</treenode>
<treenode node="matchOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1099;5;1120;;;;vpos;;v;;r;;d4,1100;;b2,0;;mfield;;poption;;p">
</treenode>
<treenode node="matchSelectedOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1537;5;1545;;;;vpos;;v;;r;;d4,1538;;b2,0;;mselect;;p">
</treenode>
<treenode node="moveBack;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1816;5;1843;;;;vpos;;v;;r&#10;Definition&#10;    moveBack($numberOfSteps = 1)&#10;&#10;Description&#10;     Moves back in history.&#10;&#10;Parameters:&#10;    int $numberOfSteps - (default value 1);;d4,1817;;b1,0;;mint $numberOfSteps;;p">
</treenode>
<treenode node="openHrefFromDomNode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f12;442;5;446;;;;vpos;;v;;r;;d4,443;;b3,0;;mnode;;p">
</treenode>
<treenode node="proceedCheckOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1136;5;1151;;;;vpos;;vChoiceFormField;;r&#10;Definition&#10;    proceedCheckOption($option)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $option;;d4,1137;;b2,0;;m $option;;p">
</treenode>
<treenode node="proceedSeeInField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;675;5;697;;;;vpos;;v;;r;;d4,676;;b2,0;;mfields;;pvalue;;p">
</treenode>
<treenode node="proceedSeeInFormFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;617;5;645;;;;vpos;;v;;r;;d4,618;;b2,0;;mformSelector;;pparams;;passertNot;;p">
</treenode>
<treenode node="proceedSubmitForm;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;822;5;859;;;;vpos;;v;;r&#10;Definition&#10;    proceedSubmitForm(Crawler $frmCrawl, array $params, $button = null)&#10;&#10;Description&#10;     Submits the form currently selected in the passed Crawler, after setting any values passed in $params and setting the value of the passed button name.&#10;&#10;Parameters:&#10;    Crawler $frmCrawl - the form to submit&#10;    array $params - additional parameter values to set on the&#10;    string $button - the name of a submit button in the form;;d4,823;;b2,0;;mCrawler $frmCrawl;;parray $params;;pstring $button;;p">
</treenode>
<treenode node="pushFormField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;657;5;673;;;;vpos;;vvoid;;r&#10;Definition&#10;    pushFormField(&amp;$fields, $form, $name, $values)&#10;&#10;Description&#10;     Map an array element passed to seeInFormFields to its corresponding field, recursing through array values if the field is not found.&#10;&#10;Parameters:&#10;    array $fields - The previously found fields&#10;    Crawler $form - The form in which to search for fields&#10;    string $name - The field&apos;s name&#10;    mixed $values;;d4,658;;b2,0;;marray $fields;;pCrawler $form;;pstring $name;;pmixed $values;;p">
</treenode>
<treenode node="redirectIfNecessary;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1743;5;1763;;;;vpos;;vmixed;;r&#10;Definition&#10;    redirectIfNecessary($result, $maxRedirects, $redirectCount)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $result;;d4,1744;;b2,0;;mresult;;pmaxRedirects;;predirectCount;;p">
</treenode>
<treenode node="resetCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1457;5;1462;;;;vpos;;v;;r;;d4,1458;;b1,0;;mname;;pparams;;p">
</treenode>
<treenode node="retrieveBaseUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f12;453;5;465;;;;vpos;;v;;r;;d4,454;;b3,0;;m">
</treenode>
<treenode node="see;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;467;5;476;;;;vpos;;v;;r;;d4,468;;b1,0;;mtext;;pselector;;p">
</treenode>
<treenode node="seeCheckboxIsChecked;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;583;5;587;;;;vpos;;v;;r;;d4,584;;b1,0;;mcheckbox;;p">
</treenode>
<treenode node="seeCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1443;5;1448;;;;vpos;;v;;r;;d4,1444;;b1,0;;mcookie;;pparams;;p">
</treenode>
<treenode node="seeCurrentUrlEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;547;5;550;;;;vpos;;v;;r;;d4,548;;b1,0;;muri;;p">
</treenode>
<treenode node="seeCurrentUrlMatches;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;557;5;560;;;;vpos;;v;;r;;d4,558;;b1,0;;muri;;p">
</treenode>
<treenode node="seeElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1472;5;1481;;;;vpos;;v;;r;;d4,1473;;b1,0;;mselector;;pattributes;;p">
</treenode>
<treenode node="seeInCurrentUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;537;5;540;;;;vpos;;v;;r;;d4,538;;b1,0;;muri;;p">
</treenode>
<treenode node="seeInField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;595;5;599;;;;vpos;;v;;r;;d4,596;;b1,0;;mfield;;pvalue;;p">
</treenode>
<treenode node="seeInFormFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;607;5;610;;;;vpos;;v;;r;;d4,608;;b1,0;;mformSelector;;pparams;;p">
</treenode>
<treenode node="seeInSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;489;5;492;;;;vpos;;v;;r;;d4,490;;b1,0;;mraw;;p">
</treenode>
<treenode node="seeInTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1599;5;1606;;;;vpos;;v;;r;;d4,1600;;b1,0;;mtitle;;p">
</treenode>
<treenode node="seeLink;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;499;5;512;;;;vpos;;v;;r;;d4,500;;b1,0;;mtext;;purl;;p">
</treenode>
<treenode node="seeNumberOfElements;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1494;5;1510;;;;vpos;;v;;r;;d4,1495;;b1,0;;mselector;;pexpected;;p">
</treenode>
<treenode node="seeOptionIsSelected;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1512;5;1521;;;;vpos;;v;;r;;d4,1513;;b1,0;;mselector;;poptionText;;p">
</treenode>
<treenode node="seePageNotFound;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1550;5;1553;;;;vpos;;v;;r&#10;Definition&#10;    seePageNotFound()&#10;&#10;Description&#10;     Asserts that current page has 404 response status code.;;d4,1551;;b1,0;;m">
</treenode>
<treenode node="seeResponseCodeIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1568;5;1576;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseCodeIs($code)&#10;&#10;Description&#10;     Checks that response code is equal to value provided.&#10;&#10;Parameters:&#10;     $code;;d4,1569;;b1,0;;m $code;;p">
</treenode>
<treenode node="selectOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1059;5;1097;;;;vpos;;v;;r;;d4,1060;;b1,0;;mselect;;poption;;p">
</treenode>
<treenode node="sendAjaxGetRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1182;5;1185;;;;vpos;;v;;r&#10;Definition&#10;    sendAjaxGetRequest($uri, $params = [])&#10;&#10;Description&#10;     If your page triggers an ajax request, you can perform it manually. This action sends a GET ajax request with specified params.&#10;&#10;Parameters:&#10;     $uri&#10;     $params;;d4,1183;;b1,0;;m $uri;;p $params;;p">
</treenode>
<treenode node="sendAjaxPostRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1207;5;1210;;;;vpos;;v;;r&#10;Definition&#10;    sendAjaxPostRequest($uri, $params = [])&#10;&#10;Description&#10;     If your page triggers an ajax request, you can perform it manually. This action sends a POST ajax request with specified params. Additional params can be passed as array.&#10;&#10;Parameters:&#10;     $uri&#10;     $params;;d4,1208;;b1,0;;m $uri;;p $params;;p">
</treenode>
<treenode node="sendAjaxRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1230;5;1233;;;;vpos;;v;;r&#10;Definition&#10;    sendAjaxRequest($method, $uri, $params = [])&#10;&#10;Description&#10;     If your page triggers an ajax request, you can perform it manually. This action sends an ajax request with specified method and params.&#10;&#10;Parameters:&#10;     $method&#10;     $uri&#10;     $params;;d4,1231;;b1,0;;m $method;;p $uri;;p $params;;p">
</treenode>
<treenode node="setCheckboxBoolValues;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;782;5;810;;;;vpos;;varray;;r&#10;Definition&#10;    setCheckboxBoolValues(Crawler $form, array $params)&#10;&#10;Description&#10;     Replaces boolean values in $params with the corresponding field&apos;s value for checkbox form fields.&#10;&#10;Parameters:&#10;    Crawler $form - the form to find checkbox elements&#10;    array $params - the parameters to be submitted&#10;&#10;Return:&#10;   the $params array after replacing bool values;;d4,783;;b2,0;;mCrawler $form;;parray $params;;p">
</treenode>
<treenode node="setCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1401;5;1418;;;;vpos;;v;;r;;d4,1402;;b1,0;;mname;;pval;;pparams;;p">
</treenode>
<treenode node="setCookiesFromOptions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1852;5;1887;;;;vpos;;v;;r;;d4,1853;;b2,0;;m">
</treenode>
<treenode node="strictMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f14;1289;5;1311;;;;vpos;;vCrawler;;r&#10;Definition&#10;    strictMatch(array $by)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    array $by;;d4,1290;;b2,0;;marray $by;;p">
</treenode>
<treenode node="stringifySelector;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f12;1464;5;1470;;;;vpos;;v;;r;;d4,1465;;b3,0;;mselector;;p">
</treenode>
<treenode node="submitForm;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;861;5;868;;;;vpos;;v;;r;;d4,862;;b1,0;;mselector;;pparams;;pbutton;;p">
</treenode>
<treenode node="switchToIframe;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1797;5;1809;;;;vpos;;v;;r&#10;Definition&#10;    switchToIframe($name)&#10;&#10;Description&#10;     Switch to iframe or frame on the page.&#10;&#10;Parameters:&#10;    string $name;;d4,1798;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="uncheckOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\InnerBrowser.php;f11;1127;5;1130;;;;vpos;;v;;r;;d4,1128;;b1,0;;moption;;p">
</treenode>
</treenode>
<treenode node="InvalidSelectorException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;54;103;54;;;;vpos;;vInvalidSelectorException;;c;;r;;d101,54;;b0,0;;m">
</treenode>
<treenode node="Iron;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Iron.php;f0;5;1;105;;;;vpos;;vQueue;;c;;r;;d0,6;;b0,0;;m">
<treenode node="addMessageToQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Iron.php;f11;35;5;38;;;;vpos;;v;;r&#10;Definition&#10;    addMessageToQueue($message, $queue)&#10;&#10;Description&#10;     Post/Put a message on to the queue server&#10;&#10;Parameters:&#10;    string $message - Message Body to be send&#10;    string $queue - Queue Name;;d4,36;;b1,0;;mstring $message;;pstring $queue;;p">
</treenode>
<treenode node="clearQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Iron.php;f11;87;5;94;;;;vpos;;v;;r;;d4,88;;b1,0;;mqueue;;p">
</treenode>
<treenode node="getDefaultConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Iron.php;f11;101;5;104;;;;vpos;;v;;r;;d4,102;;b1,0;;m">
</treenode>
<treenode node="getMessagesCurrentCountOnQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Iron.php;f11;62;5;69;;;;vpos;;vint;;r&#10;Definition&#10;    getMessagesCurrentCountOnQueue($queue)&#10;&#10;Description&#10;     Count the current number of messages on the queue.&#10;&#10;Parameters:&#10;     $queue - Queue Name&#10;&#10;Return:&#10;   Count;;d4,63;;b1,0;;m $queue;;p">
</treenode>
<treenode node="getMessagesTotalCountOnQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Iron.php;f11;78;5;85;;;;vpos;;vint;;r&#10;Definition&#10;    getMessagesTotalCountOnQueue($queue)&#10;&#10;Description&#10;     Count the total number of messages on the queue.&#10;&#10;Parameters:&#10;     $queue - Queue Name&#10;&#10;Return:&#10;   Count;;d4,79;;b1,0;;m $queue;;p">
</treenode>
<treenode node="getQueues;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Iron.php;f11;45;5;53;;;;vpos;;varray;;r&#10;Definition&#10;    getQueues()&#10;&#10;Description&#10;     Return a list of queues/tubes on the queueing server&#10;&#10;Return:&#10;   Array of Queues;;d4,46;;b1,0;;m">
</treenode>
<treenode node="getRequiredConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Iron.php;f11;96;5;99;;;;vpos;;v;;r;;d4,97;;b1,0;;m">
</treenode>
<treenode node="openConnection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Iron.php;f11;17;5;27;;;;vpos;;v;;r&#10;Definition&#10;    openConnection($config)&#10;&#10;Description&#10;     Connect to the queueing server. (AWS, Iron.io and Beanstalkd)&#10;&#10;Parameters:&#10;    array $config;;d4,18;;b1,0;;marray $config;;p">
</treenode>
</treenode>
<treenode node="JsonArray;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonArray.php;f0;7;1;129;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonArray.php;f11;19;5;37;;;;vpos;;v;;r;;d4,20;;b1,0;;mjsonString;;p">
</treenode>
<treenode node="arrayToXml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonArray.php;f12;96;5;117;;;;vpos;;v;;r;;d4,97;;b3,0;;mdoc;;pnode;;parray;;p">
</treenode>
<treenode node="containsArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonArray.php;f11;91;5;94;;;;vpos;;v;;r;;d4,92;;b1,0;;mneedle;;p">
</treenode>
<treenode node="filterByJsonPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonArray.php;f11;78;5;84;;;;vpos;;v;;r;;d4,79;;b1,0;;mjsonPath;;p">
</treenode>
<treenode node="filterByXPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonArray.php;f11;72;5;76;;;;vpos;;v;;r;;d4,73;;b1,0;;mxpath;;p">
</treenode>
<treenode node="getValidTagNameForInvalidKey;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonArray.php;f12;119;5;128;;;;vpos;;v;;r;;d4,120;;b3,0;;mkey;;p">
</treenode>
<treenode node="getXmlString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonArray.php;f11;86;5;89;;;;vpos;;v;;r;;d4,87;;b1,0;;m">
</treenode>
<treenode node="toArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonArray.php;f11;67;5;70;;;;vpos;;varray;;r&#10;Definition&#10;    toArray()&#10;&#10;Description&#10;     ;;d4,68;;b1,0;;m">
</treenode>
<treenode node="toXml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonArray.php;f11;39;5;62;;;;vpos;;v;;r;;d4,40;;b1,0;;m">
</treenode>
</treenode>
<treenode node="JsonType;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonType.php;f0;28;1;207;;;;vpos;;v;;r&#10;Definition&#10;    class JsonType&#10;&#10;Description&#10;     JsonType matches JSON structures against templates. You can specify the type of fields in JSON or add additional validation rules.;;d0,29;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonType.php;f11;41;5;47;;;;vpos;;v;;r&#10;Definition&#10;    __construct($jsonArray)&#10;&#10;Description&#10;     Creates instance of JsonType Pass an array or `\Codeception\Util\JsonArray` with data. If non-associative array is passed - the very first element of it will be used for matching.&#10;&#10;Parameters:&#10;     $jsonArray - array|\Codeception\Util\JsonArray;;d4,42;;b1,0;;m $jsonArray;;p">
</treenode>
<treenode node="addCustomFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonType.php;f18;75;5;78;;;;vpos;;v;;r&#10;Definition&#10;    addCustomFilter($name, callable $callable)&#10;&#10;Description&#10;     Adds custom filter to JsonType list. You should specify a name and parameters of a filter.&#10;&#10;Parameters:&#10;     $name&#10;    callable $callable;;d4,76;;b1,5;;m $name;;pcallable $callable;;p">
</treenode>
<treenode node="cleanCustomFilters;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonType.php;f18;83;5;86;;;;vpos;;v;;r&#10;Definition&#10;    cleanCustomFilters()&#10;&#10;Description&#10;     Removes all custom filters;;d4,84;;b1,5;;m">
</treenode>
<treenode node="matches;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonType.php;f11;96;5;113;;;;vpos;;vbool;;r&#10;Definition&#10;    matches(array $jsonType)&#10;&#10;Description&#10;     Checks data against passed JsonType. If matching fails function returns a string with a message describing failure. On success returns `true`.&#10;&#10;Parameters:&#10;    array $jsonType&#10;&#10;Return:&#10;   |string;;d4,97;;b1,0;;marray $jsonType;;p">
</treenode>
<treenode node="matchFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonType.php;f14;157;5;206;;;;vpos;;v;;r;;d4,158;;b2,0;;mfilter;;pvalue;;p">
</treenode>
<treenode node="typeComparison;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\JsonType.php;f14;115;5;155;;;;vpos;;v;;r;;d4,116;;b2,0;;mdata;;pjsonType;;p">
</treenode>
</treenode>
<treenode node="KeywordsDumper;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsDumper.php;f0;17;1;364;;;;vpos;;v;;r&#10;Definition&#10;    class KeywordsDumper&#10;&#10;Description&#10;     Gherkin keywords dumper.;;d0,18;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsDumper.php;f11;27;5;31;;;;vpos;;v;;r&#10;Definition&#10;    __construct(KeywordsInterface $keywords)&#10;&#10;Description&#10;     Initializes dumper.&#10;&#10;Parameters:&#10;    KeywordsInterface $keywords - Keywords instance;;d4,28;;b1,0;;mKeywordsInterface $keywords;;p">
</treenode>
<treenode node="dump;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsDumper.php;f11;71;5;94;;;;vpos;;vstring;;r&#10;Definition&#10;    dump($language, $short = true, $excludeAsterisk = false)&#10;&#10;Description&#10;     Dumps keyworded feature into string.&#10;&#10;Parameters:&#10;    string $language - Keywords language&#10;    Boolean $short - Dump short version&#10;    bool $excludeAsterisk&#10;&#10;Return:&#10;   |array String for short version and array of features for extended;;d4,72;;b1,0;;mstring $language;;pBoolean $short;;pbool $excludeAsterisk;;p">
</treenode>
<treenode node="dumpBackground;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsDumper.php;f14;160;5;184;;;;vpos;;vstring;;r&#10;Definition&#10;    dumpBackground($keyword, $short = true, $excludeAsterisk = false)&#10;&#10;Description&#10;     Dumps background example.&#10;&#10;Parameters:&#10;    string $keyword - Item keyword&#10;    Boolean $short - Dump short version?;;d4,161;;b2,0;;mkeyword;;pshort;;pexcludeAsterisk;;p">
</treenode>
<treenode node="dumpFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsDumper.php;f14;104;5;150;;;;vpos;;vstring;;r&#10;Definition&#10;    dumpFeature($keyword, $short = true, $excludeAsterisk = false)&#10;&#10;Description&#10;     Dumps feature example.&#10;&#10;Parameters:&#10;    string $keyword - Item keyword&#10;    Boolean $short - Dump short version?;;d4,105;;b2,0;;mkeyword;;pshort;;pexcludeAsterisk;;p">
</treenode>
<treenode node="dumpKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsDumper.php;f11;53;5;60;;;;vpos;;vstring;;r&#10;Definition&#10;    dumpKeywords(array $keywords, $isShort)&#10;&#10;Description&#10;     Defaults keywords dumper.&#10;&#10;Parameters:&#10;    array $keywords - Keywords list&#10;    Boolean $isShort - Is short version;;d4,54;;b1,0;;marray $keywords;;pBoolean $isShort;;p">
</treenode>
<treenode node="dumpOutline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsDumper.php;f14;252;5;315;;;;vpos;;vstring;;r&#10;Definition&#10;    dumpOutline($keyword, $short = true, $excludeAsterisk = false)&#10;&#10;Description&#10;     Dumps outline example.&#10;&#10;Parameters:&#10;    string $keyword - Item keyword&#10;    Boolean $short - Dump short version?;;d4,253;;b2,0;;mkeyword;;pshort;;pexcludeAsterisk;;p">
</treenode>
<treenode node="dumpScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsDumper.php;f14;194;5;242;;;;vpos;;vstring;;r&#10;Definition&#10;    dumpScenario($keyword, $short = true, $excludeAsterisk = false)&#10;&#10;Description&#10;     Dumps scenario example.&#10;&#10;Parameters:&#10;    string $keyword - Item keyword&#10;    Boolean $short - Dump short version?;;d4,195;;b2,0;;mkeyword;;pshort;;pexcludeAsterisk;;p">
</treenode>
<treenode node="dumpStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsDumper.php;f14;326;5;363;;;;vpos;;vstring;;r&#10;Definition&#10;    dumpStep($keywords, $text, $short = true, $excludeAsterisk = false)&#10;&#10;Description&#10;     Dumps step example.&#10;&#10;Parameters:&#10;    string $keywords - Item keyword&#10;    string $text - Step text&#10;    Boolean $short - Dump short version?;;d4,327;;b2,0;;mkeywords;;ptext;;pshort;;pexcludeAsterisk;;p">
</treenode>
<treenode node="setKeywordsDumperFunction;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Keywords\KeywordsDumper.php;f11;40;5;43;;;;vpos;;v;;r&#10;Definition&#10;    setKeywordsDumperFunction($mapper)&#10;&#10;Description&#10;     Sets keywords mapper function.&#10;&#10;Parameters:&#10;    callable $mapper - Mapper function;;d4,41;;b1,0;;mcallable $mapper;;p">
</treenode>
</treenode>
<treenode node="KeywordsDumperTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\KeywordsDumperTest.php;f0;7;1;269;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,8;;b0,0;;m">
<treenode node="setUp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\KeywordsDumperTest.php;f14;11;5;39;;;;vpos;;v;;r;;d4,12;;b2,0;;m">
</treenode>
<treenode node="testEnKeywordsDumper;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\KeywordsDumperTest.php;f11;41;5;76;;;;vpos;;v;;r;;d4,42;;b1,0;;m">
</treenode>
<treenode node="testExtendedVersionDumper;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\KeywordsDumperTest.php;f11;157;5;268;;;;vpos;;v;;r;;d4,158;;b1,0;;m">
</treenode>
<treenode node="testRuKeywordsCustomKeywordsDumper;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\KeywordsDumperTest.php;f11;116;5;155;;;;vpos;;v;;r;;d4,117;;b1,0;;m">
</treenode>
<treenode node="testRuKeywordsDumper;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\KeywordsDumperTest.php;f11;78;5;114;;;;vpos;;v;;r;;d4,79;;b1,0;;m">
</treenode>
</treenode>
<treenode node="KeywordsTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\KeywordsTest.php;f9;13;1;138;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,14;;b0,0;;m">
<treenode node="getKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\KeywordsTest.php;f23;15;45;15;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
</treenode>
<treenode node="getKeywordsArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\KeywordsTest.php;f23;16;50;16;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
</treenode>
<treenode node="getSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\KeywordsTest.php;f23;17;80;17;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mkeywords;;ptext;;pline;;pkeywordType;;p">
</treenode>
<treenode node="testTranslation;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\KeywordsTest.php;f11;134;5;137;;;;vpos;;v;;r&#10;Definition&#10;    testTranslation($language, array $etalon, array $features)&#10;&#10;Description&#10;      dataProvider translationTestDataProvider&#10;&#10;Parameters:&#10;    string $language - language name&#10;    array $etalon - etalon features (to test against)&#10;    array $features - array of parsed feature(s);;d4,135;;b1,0;;mstring $language;;parray $etalon;;parray $features;;p">
</treenode>
<treenode node="translationTestDataProvider;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Keywords\KeywordsTest.php;f11;19;5;125;;;;vpos;;v;;r;;d4,20;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Laravel5;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f0;101;1;1240;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f0;14;1;353;;;;vpos;;vFramework;;cActiveRecord;;cPartedModule;;cLaravelCommon;;c;;r&#10;Definition&#10;    class Laravel5 extends Framework implements ActiveRecord, PartedModule&#10;&#10;Description&#10;      This module allows you to run functional tests for Laravel 5.1+ It should **not** be used for acceptance tests. See the Acceptance tests section below for more details.;;d0,102;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;121;5;150;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f11;68;5;89;;;;vpos;;v;;r&#10;Definition&#10;    __construct(ModuleContainer $container, $config = null)&#10;&#10;Description&#10;     Constructor.&#10;&#10;Parameters:&#10;    ModuleContainer $container&#10;    array|null $config;;d4,122;;b1,0;;mModuleContainer $container;;parray|null $config;;p">
</treenode>
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;199;5;220;;;;vpos;;v;;r&#10;Definition&#10;    _after(\Codeception\TestInterface $test)&#10;&#10;Description&#10;     After hook.&#10;&#10;Parameters:&#10;    \Codeception\TestInterface $test;;d4,200;;b1,0;;m\Codeception\TestInterface $test;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;175;5;192;;;;vpos;;v;;r&#10;Definition&#10;    _before(\Codeception\TestInterface $test)&#10;&#10;Description&#10;     Before hook.&#10;&#10;Parameters:&#10;    \Codeception\TestInterface $test;;d4,176;;b1,0;;m\Codeception\TestInterface $test;;p">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;163;5;168;;;;vpos;;v;;r&#10;Definition&#10;    _initialize()&#10;&#10;Description&#10;     Initialize hook.;;d4,164;;b1,0;;m">
</treenode>
<treenode node="_parts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;155;5;158;;;;vpos;;varray;;r&#10;Definition&#10;    _parts()&#10;&#10;Description&#10;     ;;d4,156;;b1,0;;m">
</treenode>
<treenode node="actionWithNamespace;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;567;5;576;;;;vpos;;vstring;;r&#10;Definition&#10;    actionWithNamespace($action)&#10;&#10;Description&#10;     Normalize an action to full namespaced action.&#10;&#10;Parameters:&#10;    string $action;;d4,568;;b2,0;;mstring $action;;p">
</treenode>
<treenode node="amLoggedAs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;759;5;779;;;;vpos;;vvoid;;r&#10;Definition&#10;    amLoggedAs($user, $driver = null)&#10;&#10;Description&#10;     Set the currently logged in user for the application. Takes either an object that implements the User interface or an array of credentials.&#10;&#10;Parameters:&#10;    \Illuminate\Contracts\Auth\User|array $user&#10;    string|null $driver - The authentication driver for Laravel &lt;= 5;;d4,760;;b1,0;;m\Illuminate\Contracts\Auth\User|array $user;;pstring|null $driver;;p">
</treenode>
<treenode node="amOnAction;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;501;5;508;;;;vpos;;v;;r&#10;Definition&#10;    amOnAction($action, $params = [])&#10;&#10;Description&#10;     Opens web page by action name&#10;&#10;Parameters:&#10;     $action&#10;    array $params;;d4,502;;b1,0;;m $action;;parray $params;;p">
</treenode>
<treenode node="amOnRoute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;455;5;462;;;;vpos;;v;;r&#10;Definition&#10;    amOnRoute($routeName, $params = [])&#10;&#10;Description&#10;     Opens web page using route name and parameters.&#10;&#10;Parameters:&#10;     $routeName&#10;    array $params;;d4,456;;b1,0;;m $routeName;;parray $params;;p">
</treenode>
<treenode node="applicationUsesDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f12;227;5;230;;;;vpos;;vbool;;r&#10;Definition&#10;    applicationUsesDatabase()&#10;&#10;Description&#10;     Does the application use the database?;;d4,228;;b3,0;;m">
</treenode>
<treenode node="callArtisan;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;429;5;441;;;;vpos;;vstring;;r&#10;Definition&#10;    callArtisan($command, $parameters = [], OutputInterface $output = null)&#10;&#10;Description&#10;     Call an Artisan command.&#10;&#10;Parameters:&#10;    string $command&#10;    array $parameters&#10;    OutputInterface $output;;d4,430;;b1,0;;mstring $command;;parray $parameters;;pOutputInterface $output;;p">
</treenode>
<treenode node="checkBootstrapFileExists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;237;5;248;;;;vpos;;v;;r&#10;Definition&#10;    checkBootstrapFileExists()&#10;&#10;Description&#10;     Make sure the Laravel bootstrap file exists.;;d4,238;;b2,0;;m">
</treenode>
<treenode node="convertToTestFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f12;140;5;153;;;;vpos;;varray;;r&#10;Definition&#10;    convertToTestFiles(array $files)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    array $files;;d4,141;;b3,0;;marray $files;;p">
</treenode>
<treenode node="countModels;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;1065;5;1073;;;;vpos;;vinteger;;r&#10;Definition&#10;    countModels($modelClass, $attributes = [])&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $modelClass&#10;    array $attributes;;d4,1066;;b2,0;;mstring $modelClass;;parray $attributes;;p">
</treenode>
<treenode node="countRecords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;1080;5;1088;;;;vpos;;vinteger;;r&#10;Definition&#10;    countRecords($table, $attributes = [])&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $table&#10;    array $attributes;;d4,1081;;b2,0;;mstring $table;;parray $attributes;;p">
</treenode>
<treenode node="disableEvents;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;339;5;342;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f11;330;5;334;;;;vpos;;v;;r&#10;Definition&#10;    disableEvents()&#10;&#10;Description&#10;     Disable events for the next requests. This method does not disable model events. To disable model events you have to use the disableModelEvents() method.;;d4,340;;b1,0;;m">
</treenode>
<treenode node="disableExceptionHandling;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;309;5;312;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f11;312;5;316;;;;vpos;;v;;r&#10;Definition&#10;    disableExceptionHandling()&#10;&#10;Description&#10;     Disable Laravel exception handling.;;d4,310;;b1,0;;m">
</treenode>
<treenode node="disableMiddleware;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;323;5;326;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f11;348;5;352;;;;vpos;;v;;r&#10;Definition&#10;    disableMiddleware()&#10;&#10;Description&#10;     Disable middleware for the next requests.;;d4,324;;b1,0;;m">
</treenode>
<treenode node="disableModelEvents;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;353;5;356;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f11;339;5;343;;;;vpos;;v;;r&#10;Definition&#10;    disableModelEvents()&#10;&#10;Description&#10;     Disable model events for the next requests.;;d4,354;;b1,0;;m">
</treenode>
<treenode node="dontSeeAuthentication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;812;5;823;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeAuthentication($guard = null)&#10;&#10;Description&#10;     Check that user is not authenticated. You can specify the guard that should be use for Laravel &gt;= 5.2.&#10;&#10;Parameters:&#10;    string|null $guard;;d4,813;;b1,0;;mstring|null $guard;;p">
</treenode>
<treenode node="dontSeeEventTriggered;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;399;5;412;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeEventTriggered($events)&#10;&#10;Description&#10;     Make sure events did not fire during the test.&#10;&#10;Parameters:&#10;     $events;;d4,400;;b1,0;;m $events;;p">
</treenode>
<treenode node="dontSeeFormErrors;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;678;5;684;;;;vpos;;vbool;;r&#10;Definition&#10;    dontSeeFormErrors()&#10;&#10;Description&#10;     Assert that there are no form errors bound to the View.;;d4,679;;b1,0;;m">
</treenode>
<treenode node="dontSeeRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;932;5;941;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeRecord($table, $attributes = [])&#10;&#10;Description&#10;     Checks that record does not exist in database. You can pass the name of a database table or the class name of an Eloquent model as the first argument.&#10;&#10;Parameters:&#10;    string $table&#10;    array $attributes;;d4,933;;b1,0;;mstring $table;;parray $attributes;;p">
</treenode>
<treenode node="doRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f14;97;5;114;;;;vpos;;vResponse;;r&#10;Definition&#10;    doRequest($request)&#10;&#10;Description&#10;     Execute a request.&#10;&#10;Parameters:&#10;    SymfonyRequest $request;;d4,98;;b2,0;;mSymfonyRequest $request;;p">
</treenode>
<treenode node="enableExceptionHandling;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;295;5;298;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f11;321;5;325;;;;vpos;;v;;r&#10;Definition&#10;    enableExceptionHandling()&#10;&#10;Description&#10;     Enable Laravel exception handling.;;d4,296;;b1,0;;m">
</treenode>
<treenode node="eventTriggered;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f11;296;5;307;;;;vpos;;vbool;;r&#10;Definition&#10;    eventTriggered($event)&#10;&#10;Description&#10;     Did an event trigger?&#10;&#10;Parameters:&#10;     $event;;d4,297;;b1,0;;m $event;;p">
</treenode>
<treenode node="filterFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f14;123;5;134;;;;vpos;;varray;;r&#10;Definition&#10;    filterFiles(array $files)&#10;&#10;Description&#10;     Make sure files are \Illuminate\Http\UploadedFile instances with the private $test property set to true. Fixes issue https://github.com/Codeception/Codeception/pull/3417.&#10;&#10;Parameters:&#10;    array $files;;d4,124;;b2,0;;marray $files;;p">
</treenode>
<treenode node="findModel;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;1035;5;1043;;;;vpos;;vEloquentModel;;r&#10;Definition&#10;    findModel($modelClass, $attributes = [])&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $modelClass&#10;    array $attributes;;d4,1036;;b2,0;;mstring $modelClass;;parray $attributes;;p">
</treenode>
<treenode node="findRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;1050;5;1058;;;;vpos;;varray;;r&#10;Definition&#10;    findRecord($table, $attributes = [])&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $table&#10;    array $attributes;;d4,1051;;b2,0;;mstring $table;;parray $attributes;;p">
</treenode>
<treenode node="getApplication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;273;5;276;;;;vpos;;v;;r&#10;Definition&#10;    getApplication()&#10;&#10;Description&#10;     Provides access the Laravel application object.;;d4,274;;b1,0;;m">
</treenode>
<treenode node="getApplicationDomainRegex;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f12;1219;5;1225;;;;vpos;;vstring;;r&#10;Definition&#10;    getApplicationDomainRegex()&#10;&#10;Description&#10;     ;;d4,1220;;b3,0;;m">
</treenode>
<treenode node="getDomainRegex;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f12;1233;5;1239;;;;vpos;;vstring;;r&#10;Definition&#10;    getDomainRegex($route)&#10;&#10;Description&#10;     Get the regex for matching the domain part of this route.&#10;&#10;Parameters:&#10;    \Illuminate\Routing\Route $route;;d4,1234;;b3,0;;m\Illuminate\Routing\Route $route;;p">
</treenode>
<treenode node="getInternalDomains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;1203;5;1214;;;;vpos;;varray;;r&#10;Definition&#10;    getInternalDomains()&#10;&#10;Description&#10;     Returns a list of recognized domain names. This elements of this list are regular expressions.;;d4,1204;;b2,0;;m">
</treenode>
<treenode node="getQueryBuilderFromModel;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;1095;5;1104;;;;vpos;;vEloquentModel;;r&#10;Definition&#10;    getQueryBuilderFromModel($modelClass)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $modelClass;;d4,1096;;b2,0;;mstring $modelClass;;p">
</treenode>
<treenode node="getQueryBuilderFromTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;1111;5;1114;;;;vpos;;vEloquentModel;;r&#10;Definition&#10;    getQueryBuilderFromTable($table)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $table;;d4,1112;;b2,0;;mstring $table;;p">
</treenode>
<treenode node="getRootControllerNamespace;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;583;5;592;;;;vpos;;vstring;;r&#10;Definition&#10;    getRootControllerNamespace()&#10;&#10;Description&#10;     Get the root controller namespace for the application.;;d4,584;;b2,0;;m">
</treenode>
<treenode node="getRouteByAction;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;550;5;559;;;;vpos;;v;;r&#10;Definition&#10;    getRouteByAction($action)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $action;;d4,551;;b2,0;;mstring $action;;p">
</treenode>
<treenode node="getRouteByName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;537;5;544;;;;vpos;;vmixed;;r&#10;Definition&#10;    getRouteByName($routeName)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $routeName;;d4,538;;b2,0;;m $routeName;;p">
</treenode>
<treenode node="grabNumRecords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;1024;5;1027;;;;vpos;;vinteger;;r&#10;Definition&#10;    grabNumRecords($table, $attributes = [])&#10;&#10;Description&#10;     Retrieves number of records from database You can pass the name of a database table or the class name of an Eloquent model as the first argument.&#10;&#10;Parameters:&#10;    string $table&#10;    array $attributes;;d4,1025;;b1,0;;mstring $table;;parray $attributes;;p">
</treenode>
<treenode node="grabRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;960;5;975;;;;vpos;;varray;;r&#10;Definition&#10;    grabRecord($table, $attributes = [])&#10;&#10;Description&#10;     Retrieves record from database If you pass the name of a database table as the first argument, this method returns an array. You can also pass the class name of an Eloquent model, in that case this method returns an Eloquent model.&#10;&#10;Parameters:&#10;    string $table&#10;    array $attributes&#10;&#10;Return:&#10;   |EloquentModel;;d4,961;;b1,0;;mstring $table;;parray $attributes;;p">
</treenode>
<treenode node="grabService;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;847;5;850;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabService($class)&#10;&#10;Description&#10;     Return an instance of a class from the Laravel service container. (https://laravel.com/docs/master/container)&#10;&#10;Parameters:&#10;    string $class;;d4,848;;b1,0;;mstring $class;;p">
</treenode>
<treenode node="have;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;1135;5;1149;;;;vpos;;vmixed;;r&#10;Definition&#10;    have($model, $attributes = [], $name = &apos;default&apos;)&#10;&#10;Description&#10;     Use Laravel&apos;s model factory to create a model. Can only be used with Laravel 5.1 and later.&#10;&#10;Parameters:&#10;    string $model&#10;    array $attributes&#10;    string $name;;d4,1136;;b1,0;;mstring $model;;parray $attributes;;pstring $name;;p">
</treenode>
<treenode node="haveMultiple;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;1171;5;1178;;;;vpos;;vmixed;;r&#10;Definition&#10;    haveMultiple($model, $times, $attributes = [], $name = &apos;default&apos;)&#10;&#10;Description&#10;     Use Laravel&apos;s model factory to create multiple models. Can only be used with Laravel 5.1 and later.&#10;&#10;Parameters:&#10;    string $model&#10;    int $times&#10;    array $attributes&#10;    string $name;;d4,1172;;b1,0;;mstring $model;;pint $times;;parray $attributes;;pstring $name;;p">
</treenode>
<treenode node="haveRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;870;5;889;;;;vpos;;vinteger;;r&#10;Definition&#10;    haveRecord($table, $attributes = [])&#10;&#10;Description&#10;     Inserts record into the database. If you pass the name of a database table as the first argument, this method returns an integer ID. You can also pass the class name of an Eloquent model, in that case this method returns an Eloquent model.&#10;&#10;Parameters:&#10;    string $table&#10;    array $attributes&#10;&#10;Return:&#10;   |EloquentModel;;d4,871;;b1,0;;mstring $table;;parray $attributes;;p">
</treenode>
<treenode node="initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f12;160;5;223;;;;vpos;;v;;r&#10;Definition&#10;    initialize($request = null)&#10;&#10;Description&#10;     Initialize the Laravel framework.&#10;&#10;Parameters:&#10;    SymfonyRequest $request;;d4,161;;b3,0;;mSymfonyRequest $request;;p">
</treenode>
<treenode node="loadApplication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f12;230;5;237;;;;vpos;;vApplication;;r&#10;Definition&#10;    loadApplication()&#10;&#10;Description&#10;     Boot the Laravel application object.;;d4,231;;b3,0;;m">
</treenode>
<treenode node="logout;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;784;5;787;;;;vpos;;v;;r&#10;Definition&#10;    logout()&#10;&#10;Description&#10;     Logout user.;;d4,785;;b1,0;;m">
</treenode>
<treenode node="mockEventDispatcher;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f12;242;5;262;;;;vpos;;v;;r&#10;Definition&#10;    mockEventDispatcher()&#10;&#10;Description&#10;     Replace the Laravel event dispatcher with a mock.;;d4,243;;b3,0;;m">
</treenode>
<treenode node="modelFactory;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;1187;5;1195;;;;vpos;;v;;r&#10;Definition&#10;    modelFactory($model, $name, $times = 1)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $model&#10;    string $name&#10;    int $times;;d4,1188;;b2,0;;mstring $model;;pstring $name;;pint $times;;p">
</treenode>
<treenode node="normalizeEvent;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Laravel5.php;f12;270;5;284;;;;vpos;;vstring;;r&#10;Definition&#10;    normalizeEvent($event)&#10;&#10;Description&#10;     Normalize events to class names.&#10;&#10;Parameters:&#10;     $event;;d4,271;;b3,0;;m $event;;p">
</treenode>
<treenode node="registerAutoloaders;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;253;5;256;;;;vpos;;v;;r&#10;Definition&#10;    registerAutoloaders()&#10;&#10;Description&#10;     Register Laravel autoloaders.;;d4,254;;b2,0;;m">
</treenode>
<treenode node="revertErrorHandler;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f14;262;5;266;;;;vpos;;v;;r&#10;Definition&#10;    revertErrorHandler()&#10;&#10;Description&#10;     Revert back to the Codeception error handler, because Laravel registers it&apos;s own error handler.;;d4,263;;b2,0;;m">
</treenode>
<treenode node="seeAuthentication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;794;5;805;;;;vpos;;v;;r&#10;Definition&#10;    seeAuthentication($guard = null)&#10;&#10;Description&#10;     Checks that a user is authenticated. You can specify the guard that should be use for Laravel &gt;= 5.2.&#10;&#10;Parameters:&#10;    string|null $guard;;d4,795;;b1,0;;mstring|null $guard;;p">
</treenode>
<treenode node="seeCurrentActionIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;521;5;531;;;;vpos;;v;;r&#10;Definition&#10;    seeCurrentActionIs($action)&#10;&#10;Description&#10;     Checks that current url matches action&#10;&#10;Parameters:&#10;     $action;;d4,522;;b1,0;;m $action;;p">
</treenode>
<treenode node="seeCurrentRouteIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;474;5;487;;;;vpos;;v;;r&#10;Definition&#10;    seeCurrentRouteIs($routeName)&#10;&#10;Description&#10;     Checks that current url matches route&#10;&#10;Parameters:&#10;     $routeName;;d4,475;;b1,0;;m $routeName;;p">
</treenode>
<treenode node="seeEventTriggered;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;371;5;384;;;;vpos;;v;;r&#10;Definition&#10;    seeEventTriggered($events)&#10;&#10;Description&#10;     Make sure events fired during the test.&#10;&#10;Parameters:&#10;     $events;;d4,372;;b1,0;;m $events;;p">
</treenode>
<treenode node="seeFormErrorMessage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;726;5;737;;;;vpos;;v;;r&#10;Definition&#10;    seeFormErrorMessage($key, $expectedErrorMessage = null)&#10;&#10;Description&#10;     Assert that a specific form error message is set in the view.&#10;&#10;Parameters:&#10;    string $key&#10;    string|null $expectedErrorMessage;;d4,727;;b1,0;;mstring $key;;pstring|null $expectedErrorMessage;;p">
</treenode>
<treenode node="seeFormErrorMessages;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;701;5;706;;;;vpos;;v;;r&#10;Definition&#10;    seeFormErrorMessages(array $bindings)&#10;&#10;Description&#10;     Assert that specific form error messages are set in the view.&#10;&#10;Parameters:&#10;    array $bindings;;d4,702;;b1,0;;marray $bindings;;p">
</treenode>
<treenode node="seeFormHasErrors;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;659;5;665;;;;vpos;;vbool;;r&#10;Definition&#10;    seeFormHasErrors()&#10;&#10;Description&#10;     Assert that form errors are bound to the View.;;d4,660;;b1,0;;m">
</treenode>
<treenode node="seeInSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;608;5;622;;;;vpos;;vvoid;;r&#10;Definition&#10;    seeInSession($key, $value = null)&#10;&#10;Description&#10;     Assert that a session variable exists.&#10;&#10;Parameters:&#10;    string|array $key&#10;    mixed|null $value;;d4,609;;b1,0;;mstring|array $key;;pmixed|null $value;;p">
</treenode>
<treenode node="seeNumRecords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;993;5;1006;;;;vpos;;v;;r&#10;Definition&#10;    seeNumRecords($expectedNum, $table, $attributes = [])&#10;&#10;Description&#10;     Checks that number of given records were found in database. You can pass the name of a database table or the class name of an Eloquent model as the first argument.&#10;&#10;Parameters:&#10;    integer $expectedNum&#10;    string $table&#10;    array $attributes;;d4,994;;b1,0;;minteger $expectedNum;;pstring $table;;parray $attributes;;p">
</treenode>
<treenode node="seeRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;906;5;915;;;;vpos;;v;;r&#10;Definition&#10;    seeRecord($table, $attributes = [])&#10;&#10;Description&#10;     Checks that record exists in database. You can pass the name of a database table or the class name of an Eloquent model as the first argument.&#10;&#10;Parameters:&#10;    string $table&#10;    array $attributes;;d4,907;;b1,0;;mstring $table;;parray $attributes;;p">
</treenode>
<treenode node="seeSessionHasValues;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;637;5;646;;;;vpos;;vvoid;;r&#10;Definition&#10;    seeSessionHasValues(array $bindings)&#10;&#10;Description&#10;     Assert that the session has a given list of values.&#10;&#10;Parameters:&#10;    array $bindings;;d4,638;;b1,0;;marray $bindings;;p">
</treenode>
<treenode node="setApplication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Laravel5.php;f11;281;5;284;;;;vpos;;v;;r&#10;Definition&#10;    setApplication($app)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $app;;d4,282;;b1,0;;m $app;;p">
</treenode>
</treenode>
<treenode node="LaravelCommon;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Shared\LaravelCommon.php;f0;8;1;121;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\LaravelCommon.php;f0;8;1;138;;;;vpos;;v;;r&#10;Definition&#10;    trait LaravelCommon&#10;&#10;Description&#10;     Common functions for Laravel family;;d0,9;;b0,0;;m">
<treenode node="applyApplicationHandlers;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\LaravelCommon.php;f12;33;5;38;;;;vpos;;v;;r&#10;Definition&#10;    applyApplicationHandlers()&#10;&#10;Description&#10;     Apply the registered application handlers.;;d4,34;;b3,0;;m">
</treenode>
<treenode node="applyBindings;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\LaravelCommon.php;f12;43;5;50;;;;vpos;;v;;r&#10;Definition&#10;    applyBindings()&#10;&#10;Description&#10;     Apply the registered Laravel service container bindings.;;d4,44;;b3,0;;m">
</treenode>
<treenode node="applyContextualBindings;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\LaravelCommon.php;f12;55;5;62;;;;vpos;;v;;r&#10;Definition&#10;    applyContextualBindings()&#10;&#10;Description&#10;     Apply the registered Laravel service container contextual bindings.;;d4,56;;b3,0;;m">
</treenode>
<treenode node="applyInstances;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\LaravelCommon.php;f12;67;5;72;;;;vpos;;v;;r&#10;Definition&#10;    applyInstances()&#10;&#10;Description&#10;     Apply the registered Laravel service container instance bindings.;;d4,68;;b3,0;;m">
</treenode>
<treenode node="clearApplicationHandlers;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Shared\LaravelCommon.php;f11;117;5;120;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\LaravelCommon.php;f11;134;5;137;;;;vpos;;v;;r&#10;Definition&#10;    clearApplicationHandlers()&#10;&#10;Description&#10;     Clear the registered application handlers.;;d4,118;;b1,0;;m">
</treenode>
<treenode node="haveApplicationHandler;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Shared\LaravelCommon.php;f11;102;5;105;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\LaravelCommon.php;f11;126;5;129;;;;vpos;;v;;r&#10;Definition&#10;    haveApplicationHandler($handler)&#10;&#10;Description&#10;     Register a handler than can be used to modify the Laravel application object after it is initialized. The Laravel application object will be passed as an argument to the handler.&#10;&#10;Parameters:&#10;     $handler;;d4,103;;b1,0;;m $handler;;p">
</treenode>
<treenode node="haveBinding;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Shared\LaravelCommon.php;f11;23;5;26;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\LaravelCommon.php;f11;86;5;89;;;;vpos;;v;;r&#10;Definition&#10;    haveBinding($abstract, $concrete)&#10;&#10;Description&#10;     Add a binding to the Laravel service container. (https://laravel.com/docs/master/container)&#10;&#10;Parameters:&#10;     $abstract&#10;     $concrete;;d4,24;;b1,0;;m $abstract;;p $concrete;;p">
</treenode>
<treenode node="haveContextualBinding;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Shared\LaravelCommon.php;f11;65;5;68;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\LaravelCommon.php;f11;99;5;106;;;;vpos;;v;;r&#10;Definition&#10;    haveContextualBinding($concrete, $abstract, $implementation)&#10;&#10;Description&#10;     Add a contextual binding to the Laravel service container. (https://laravel.com/docs/master/container)&#10;&#10;Parameters:&#10;     $concrete&#10;     $abstract&#10;     $implementation;;d4,66;;b1,0;;m $concrete;;p $abstract;;p $implementation;;p">
</treenode>
<treenode node="haveInstance;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Shared\LaravelCommon.php;f11;83;5;86;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\LaravelCommon.php;f11;115;5;118;;;;vpos;;v;;r&#10;Definition&#10;    haveInstance($abstract, $instance)&#10;&#10;Description&#10;     Add an instance binding to the Laravel service container. (https://laravel.com/docs/master/container)&#10;&#10;Parameters:&#10;     $abstract&#10;     $instance;;d4,84;;b1,0;;m $abstract;;p $instance;;p">
</treenode>
<treenode node="haveSingleton;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Shared\LaravelCommon.php;f11;41;5;44;;;;vpos;;v;;r&#10;Definition&#10;    haveSingleton($abstract, $concrete)&#10;&#10;Description&#10;     Add a singleton binding to the Laravel service container. (https://laravel.com/docs/master/container)&#10;&#10;Parameters:&#10;     $abstract&#10;     $concrete;;d4,42;;b1,0;;m $abstract;;p $concrete;;p">
</treenode>
</treenode>
<treenode node="Lexer;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f0;20;1;613;;;;vpos;;v;;r&#10;Definition&#10;    class Lexer&#10;&#10;Description&#10;     Gherkin lexer.;;d0,21;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f11;46;5;49;;;;vpos;;v;;r&#10;Definition&#10;    __construct(KeywordsInterface $keywords)&#10;&#10;Description&#10;     Initializes lexer.&#10;&#10;Parameters:&#10;    KeywordsInterface $keywords - Keywords holder;;d4,47;;b1,0;;mKeywordsInterface $keywords;;p">
</treenode>
<treenode node="analyse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f11;59;5;88;;;;vpos;;v;;r&#10;Definition&#10;    analyse($input, $language = &apos;en&apos;)&#10;&#10;Description&#10;     Sets lexer input.&#10;&#10;Parameters:&#10;    string $input - Input string&#10;    string $language - Language name;;d4,60;;b1,0;;mstring $input;;pstring $language;;p">
</treenode>
<treenode node="consumeLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;157;5;169;;;;vpos;;v;;r&#10;Definition&#10;    consumeLine()&#10;&#10;Description&#10;     Consumes line from input &amp; increments line counter.;;d4,158;;b2,0;;m">
</treenode>
<treenode node="deferToken;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f11;115;5;120;;;;vpos;;v;;r&#10;Definition&#10;    deferToken(array $token)&#10;&#10;Description&#10;     Defers token.&#10;&#10;Parameters:&#10;    array $token - Token to defer;;d4,116;;b1,0;;marray $token;;p">
</treenode>
<treenode node="getAdvancedToken;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f11;105;5;108;;;;vpos;;varray;;r&#10;Definition&#10;    getAdvancedToken()&#10;&#10;Description&#10;     Returns next token or previously stashed one.;;d4,106;;b1,0;;m">
</treenode>
<treenode node="getDeferredToken;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;199;5;208;;;;vpos;;varray;;r&#10;Definition&#10;    getDeferredToken()&#10;&#10;Description&#10;     Returns deferred token or null if hasn&apos;t.&#10;&#10;Return:&#10;   |null;;d4,200;;b2,0;;m">
</treenode>
<treenode node="getKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;316;5;337;;;;vpos;;vstring;;r&#10;Definition&#10;    getKeywords($type)&#10;&#10;Description&#10;     Returns keywords for provided type.&#10;&#10;Parameters:&#10;    string $type - Keyword type;;d4,317;;b2,0;;mstring $type;;p">
</treenode>
<treenode node="getLanguage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f11;95;5;98;;;;vpos;;vstring;;r&#10;Definition&#10;    getLanguage()&#10;&#10;Description&#10;     Returns current lexer language.;;d4,96;;b1,0;;m">
</treenode>
<treenode node="getNextToken;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;215;5;233;;;;vpos;;varray;;r&#10;Definition&#10;    getNextToken()&#10;&#10;Description&#10;     Returns next token from input.;;d4,216;;b2,0;;m">
</treenode>
<treenode node="getStashedToken;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;186;5;192;;;;vpos;;varray;;r&#10;Definition&#10;    getStashedToken()&#10;&#10;Description&#10;     Returns stashed token or null if hasn&apos;t.&#10;&#10;Return:&#10;   |null;;d4,187;;b2,0;;m">
</treenode>
<treenode node="getStepKeywordType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f12;588;5;612;;;;vpos;;vstring;;r&#10;Definition&#10;    getStepKeywordType($native)&#10;&#10;Description&#10;     Returns step type keyword (Given, When, Then, etc.).&#10;&#10;Parameters:&#10;    string $native - Step keyword in provided language;;d4,589;;b3,0;;mstring $native;;p">
</treenode>
<treenode node="getTrimmedLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;176;5;179;;;;vpos;;vstring;;r&#10;Definition&#10;    getTrimmedLine()&#10;&#10;Description&#10;     Returns trimmed version of line.;;d4,177;;b2,0;;m">
</treenode>
<treenode node="predictToken;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f11;127;5;134;;;;vpos;;varray;;r&#10;Definition&#10;    predictToken()&#10;&#10;Description&#10;     Predicts for number of tokens.;;d4,128;;b1,0;;m">
</treenode>
<treenode node="scanBackground;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;354;5;357;;;;vpos;;vnull;;r&#10;Definition&#10;    scanBackground()&#10;&#10;Description&#10;     Scans Background from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,355;;b2,0;;m">
</treenode>
<treenode node="scanComment;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;535;5;550;;;;vpos;;vnull;;r&#10;Definition&#10;    scanComment()&#10;&#10;Description&#10;     Scans Comment from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,536;;b2,0;;m">
</treenode>
<treenode node="scanEOS;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;300;5;307;;;;vpos;;vnull;;r&#10;Definition&#10;    scanEOS()&#10;&#10;Description&#10;     Scans EOS from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,301;;b2,0;;m">
</treenode>
<treenode node="scanExamples;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;384;5;387;;;;vpos;;vnull;;r&#10;Definition&#10;    scanExamples()&#10;&#10;Description&#10;     Scans Scenario Outline Examples from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,385;;b2,0;;m">
</treenode>
<treenode node="scanFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;344;5;347;;;;vpos;;vnull;;r&#10;Definition&#10;    scanFeature()&#10;&#10;Description&#10;     Scans Feature from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,345;;b2,0;;m">
</treenode>
<treenode node="scanInput;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;243;5;253;;;;vpos;;vnull;;r&#10;Definition&#10;    scanInput($regex, $type)&#10;&#10;Description&#10;     Scans for token with specified regex.&#10;&#10;Parameters:&#10;    string $regex - Regular expression&#10;    string $type - Expected token type&#10;&#10;Return:&#10;   |array;;d4,244;;b2,0;;mstring $regex;;pstring $type;;p">
</treenode>
<treenode node="scanInputForKeywords;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;263;5;293;;;;vpos;;vnull;;r&#10;Definition&#10;    scanInputForKeywords($keywords, $type)&#10;&#10;Description&#10;     Scans for token with specified keywords.&#10;&#10;Parameters:&#10;    string $keywords - Keywords (splitted with |)&#10;    string $type - Expected token type&#10;&#10;Return:&#10;   |array;;d4,264;;b2,0;;mstring $keywords;;pstring $type;;p">
</treenode>
<treenode node="scanLanguage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;513;5;528;;;;vpos;;vnull;;r&#10;Definition&#10;    scanLanguage()&#10;&#10;Description&#10;     Scans Language specifier from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,514;;b2,0;;m">
</treenode>
<treenode node="scanNewline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;557;5;567;;;;vpos;;vnull;;r&#10;Definition&#10;    scanNewline()&#10;&#10;Description&#10;     Scans Newline from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,558;;b2,0;;m">
</treenode>
<treenode node="scanOutline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;374;5;377;;;;vpos;;vnull;;r&#10;Definition&#10;    scanOutline()&#10;&#10;Description&#10;     Scans Scenario Outline from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,375;;b2,0;;m">
</treenode>
<treenode node="scanPyStringContent;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;445;5;456;;;;vpos;;vnull;;r&#10;Definition&#10;    scanPyStringContent()&#10;&#10;Description&#10;     Scans PyString content.&#10;&#10;Return:&#10;   |array;;d4,446;;b2,0;;m">
</treenode>
<treenode node="scanPyStringOp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;421;5;438;;;;vpos;;vnull;;r&#10;Definition&#10;    scanPyStringOp()&#10;&#10;Description&#10;     Scans PyString from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,422;;b2,0;;m">
</treenode>
<treenode node="scanScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;364;5;367;;;;vpos;;vnull;;r&#10;Definition&#10;    scanScenario()&#10;&#10;Description&#10;     Scans Scenario from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,365;;b2,0;;m">
</treenode>
<treenode node="scanStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;394;5;414;;;;vpos;;vnull;;r&#10;Definition&#10;    scanStep()&#10;&#10;Description&#10;     Scans Step from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,395;;b2,0;;m">
</treenode>
<treenode node="scanTableRow;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;463;5;484;;;;vpos;;vnull;;r&#10;Definition&#10;    scanTableRow()&#10;&#10;Description&#10;     Scans Table Row from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,464;;b2,0;;m">
</treenode>
<treenode node="scanTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;491;5;506;;;;vpos;;vnull;;r&#10;Definition&#10;    scanTags()&#10;&#10;Description&#10;     Scans Tags from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,492;;b2,0;;m">
</treenode>
<treenode node="scanText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f14;574;5;580;;;;vpos;;vnull;;r&#10;Definition&#10;    scanText()&#10;&#10;Description&#10;     Scans text from input &amp; returns it if found.&#10;&#10;Return:&#10;   |array;;d4,575;;b2,0;;m">
</treenode>
<treenode node="takeToken;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Lexer.php;f11;144;5;152;;;;vpos;;varray;;r&#10;Definition&#10;    takeToken($type, $value = null)&#10;&#10;Description&#10;     Constructs token with specified parameters.&#10;&#10;Parameters:&#10;    string $type - Token type&#10;    string $value - Token value;;d4,145;;b1,0;;mstring $type;;pstring $value;;p">
</treenode>
</treenode>
<treenode node="LexerException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Exception\LexerException.php;f0;14;1;16;;;;vpos;;vRuntimeException;;cException;;c;;r;;d0,15;;b0,0;;m">
</treenode>
<treenode node="LineFilter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\LineFilter.php;f0;22;1;121;;;;vpos;;vFilterInterface;;c;;r&#10;Definition&#10;    class LineFilter implements FilterInterface&#10;&#10;Description&#10;     Filters scenarios by definition line number.;;d0,23;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\LineFilter.php;f11;31;5;34;;;;vpos;;v;;r&#10;Definition&#10;    __construct($filterLine)&#10;&#10;Description&#10;     Initializes filter.&#10;&#10;Parameters:&#10;    string $filterLine - Line of the scenario to filter on;;d4,32;;b1,0;;mstring $filterLine;;p">
</treenode>
<treenode node="filterFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\LineFilter.php;f11;76;5;120;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    filterFeature(FeatureNode $feature)&#10;&#10;Description&#10;     Filters feature according to the filter and returns new one.&#10;&#10;Parameters:&#10;    FeatureNode $feature;;d4,77;;b1,0;;mFeatureNode $feature;;p">
</treenode>
<treenode node="isFeatureMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\LineFilter.php;f11;43;5;46;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isFeatureMatch(FeatureNode $feature)&#10;&#10;Description&#10;     Checks if Feature matches specified filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature - Feature instance;;d4,44;;b1,0;;mFeatureNode $feature;;p">
</treenode>
<treenode node="isScenarioMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\LineFilter.php;f11;55;5;67;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isScenarioMatch(ScenarioInterface $scenario)&#10;&#10;Description&#10;     Checks if scenario or outline matches specified filter.&#10;&#10;Parameters:&#10;    ScenarioInterface $scenario - Scenario or Outline node instance;;d4,56;;b1,0;;mScenarioInterface $scenario;;p">
</treenode>
</treenode>
<treenode node="LineFilterTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\LineFilterTest.php;f0;10;1;102;;;;vpos;;vFilterTest;;c;;r;;d0,11;;b0,0;;m">
<treenode node="testFilterFeatureOutline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\LineFilterTest.php;f11;65;5;101;;;;vpos;;v;;r;;d4,66;;b1,0;;m">
</treenode>
<treenode node="testFilterFeatureScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\LineFilterTest.php;f11;48;5;63;;;;vpos;;v;;r;;d4,49;;b1,0;;m">
</treenode>
<treenode node="testIsFeatureMatchFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\LineFilterTest.php;f11;12;5;24;;;;vpos;;v;;r;;d4,13;;b1,0;;m">
</treenode>
<treenode node="testIsScenarioMatchFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\LineFilterTest.php;f11;26;5;46;;;;vpos;;v;;r;;d4,27;;b1,0;;m">
</treenode>
</treenode>
<treenode node="LineRangeFilter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\LineRangeFilter.php;f0;22;1;133;;;;vpos;;vFilterInterface;;c;;r&#10;Definition&#10;    class LineRangeFilter implements FilterInterface&#10;&#10;Description&#10;     Filters scenarios by definition line number range.;;d0,23;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\LineRangeFilter.php;f11;33;5;41;;;;vpos;;v;;r&#10;Definition&#10;    __construct($filterMinLine, $filterMaxLine)&#10;&#10;Description&#10;     Initializes filter.&#10;&#10;Parameters:&#10;    string $filterMinLine - Minimum line of a scenario to filter on&#10;    string $filterMaxLine - Maximum line of a scenario to filter on;;d4,34;;b1,0;;mstring $filterMinLine;;pstring $filterMaxLine;;p">
</treenode>
<treenode node="filterFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\LineRangeFilter.php;f11;87;5;132;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    filterFeature(FeatureNode $feature)&#10;&#10;Description&#10;     Filters feature according to the filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature;;d4,88;;b1,0;;mFeatureNode $feature;;p">
</treenode>
<treenode node="isFeatureMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\LineRangeFilter.php;f11;50;5;54;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isFeatureMatch(FeatureNode $feature)&#10;&#10;Description&#10;     Checks if Feature matches specified filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature - Feature instance;;d4,51;;b1,0;;mFeatureNode $feature;;p">
</treenode>
<treenode node="isScenarioMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\LineRangeFilter.php;f11;63;5;78;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isScenarioMatch(ScenarioInterface $scenario)&#10;&#10;Description&#10;     Checks if scenario or outline matches specified filter.&#10;&#10;Parameters:&#10;    ScenarioInterface $scenario - Scenario or Outline node instance;;d4,64;;b1,0;;mScenarioInterface $scenario;;p">
</treenode>
</treenode>
<treenode node="LineRangeFilterTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\LineRangeFilterTest.php;f0;10;1;100;;;;vpos;;vFilterTest;;c;;r;;d0,11;;b0,0;;m">
<treenode node="featureLineRangeProvider;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\LineRangeFilterTest.php;f11;12;5;21;;;;vpos;;v;;r;;d4,13;;b1,0;;m">
</treenode>
<treenode node="scenarioLineRangeProvider;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\LineRangeFilterTest.php;f11;34;5;47;;;;vpos;;v;;r;;d4,35;;b1,0;;m">
</treenode>
<treenode node="testFilterFeatureOutline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\LineRangeFilterTest.php;f11;81;5;99;;;;vpos;;v;;r;;d4,82;;b1,0;;m">
</treenode>
<treenode node="testFilterFeatureScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\LineRangeFilterTest.php;f11;64;5;79;;;;vpos;;v;;r;;d4,65;;b1,0;;m">
</treenode>
<treenode node="testIsFeatureMatchFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\LineRangeFilterTest.php;f11;26;5;32;;;;vpos;;v;;r&#10;Definition&#10;    testIsFeatureMatchFilter($filterMinLine, $filterMaxLine, $expected)&#10;&#10;Description&#10;      dataProvider featureLineRangeProvider;;d4,27;;b1,0;;mfilterMinLine;;pfilterMaxLine;;pexpected;;p">
</treenode>
<treenode node="testIsScenarioMatchFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\LineRangeFilterTest.php;f11;52;5;62;;;;vpos;;v;;r&#10;Definition&#10;    testIsScenarioMatchFilter($filterMinLine, $filterMaxLine, $expectedNumberOfMatches)&#10;&#10;Description&#10;      dataProvider scenarioLineRangeProvider;;d4,53;;b1,0;;mfilterMinLine;;pfilterMaxLine;;pexpectedNumberOfMatches;;p">
</treenode>
</treenode>
<treenode node="LinkTrait;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f0;37;1;277;;;;vpos;;v;;r&#10;Definition&#10;    trait LinkTrait&#10;&#10;Description&#10;     Addes links and images as well as url markers.;;d0,38;;b0,0;;m">
<treenode node="consumeReference;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f11;256;2;276;;;;vpos;;v;;r&#10;Definition&#10;    consumeReference($lines, $current)&#10;&#10;Description&#10;     Consume link references;;d1,257;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="identifyReference;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f11;248;2;251;;;;vpos;;v;;r;;d1,249;;b2,0;;mline;;p">
</treenode>
<treenode node="lookupReference;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f11;208;2;215;;;;vpos;;v;;r;;d1,209;;b2,0;;mkey;;p">
</treenode>
<treenode node="parseImage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f11;93;2;119;;;;vpos;;v;;r&#10;Definition&#10;    parseImage($markdown)&#10;&#10;Description&#10;     Parses an image indicated by `![`.;;d1,94;;b2,0;;mmarkdown;;p">
</treenode>
<treenode node="parseLink;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f11;62;2;87;;;;vpos;;v;;r&#10;Definition&#10;    parseLink($markdown)&#10;&#10;Description&#10;     Parses a link indicated by `[`.;;d1,63;;b2,0;;mmarkdown;;p">
</treenode>
<treenode node="parseLinkOrImage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f11;121;2;161;;;;vpos;;v;;r;;d1,122;;b2,0;;mmarkdown;;p">
</treenode>
<treenode node="parseLt;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f11;167;2;191;;;;vpos;;v;;r&#10;Definition&#10;    parseLt($text)&#10;&#10;Description&#10;     Parses inline HTML.;;d1,168;;b2,0;;mtext;;p">
</treenode>
<treenode node="renderEmail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f11;193;2;197;;;;vpos;;v;;r;;d1,194;;b2,0;;mblock;;p">
</treenode>
<treenode node="renderImage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f11;231;2;244;;;;vpos;;v;;r;;d1,232;;b2,0;;mblock;;p">
</treenode>
<treenode node="renderLink;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f11;217;2;229;;;;vpos;;v;;r;;d1,218;;b2,0;;mblock;;p">
</treenode>
<treenode node="renderUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f11;199;2;206;;;;vpos;;v;;r;;d1,200;;b2,0;;mblock;;p">
</treenode>
<treenode node="replaceEscape;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\LinkTrait.php;f11;49;2;56;;;;vpos;;vstring;;r&#10;Definition&#10;    replaceEscape($text)&#10;&#10;Description&#10;     Remove backslash from escaped characters&#10;&#10;Parameters:&#10;     $text;;d1,50;;b2,0;;m $text;;p">
</treenode>
</treenode>
<treenode node="ListTrait;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\ListTrait.php;f0;12;1;196;;;;vpos;;v;;r&#10;Definition&#10;    trait ListTrait&#10;&#10;Description&#10;     Adds the list blocks;;d0,13;;b0,0;;m">
<treenode node="consumeList;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\ListTrait.php;f9;70;2;157;;;;vpos;;v;;r;;d1,71;;b3,0;;mlines;;pcurrent;;pblock;;ptype;;p">
</treenode>
<treenode node="consumeOl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\ListTrait.php;f11;42;2;53;;;;vpos;;v;;r&#10;Definition&#10;    consumeOl($lines, $current)&#10;&#10;Description&#10;     Consume lines for an ordered list;;d1,43;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="consumeUl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\ListTrait.php;f11;58;2;68;;;;vpos;;v;;r&#10;Definition&#10;    consumeUl($lines, $current)&#10;&#10;Description&#10;     Consume lines for an unordered list;;d1,59;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="detectLineType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\ListTrait.php;f20;195;61;195;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="generateHtmlAttributes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\ListTrait.php;f9;184;2;190;;;;vpos;;vstring;;r&#10;Definition&#10;    generateHtmlAttributes($attributes)&#10;&#10;Description&#10;     Return html attributes string from [attrName =&gt; attrValue] list&#10;&#10;Parameters:&#10;    array $attributes - the attribute name-value pairs;;d1,185;;b3,0;;marray $attributes;;p">
</treenode>
<treenode node="identifyOl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\ListTrait.php;f11;24;2;27;;;;vpos;;v;;r&#10;Definition&#10;    identifyOl($line)&#10;&#10;Description&#10;     identify a line as the beginning of an ordered list.;;d1,25;;b2,0;;mline;;p">
</treenode>
<treenode node="identifyUl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\ListTrait.php;f11;32;2;37;;;;vpos;;v;;r&#10;Definition&#10;    identifyUl($line)&#10;&#10;Description&#10;     identify a line as the beginning of an unordered list.;;d1,33;;b2,0;;mline;;p">
</treenode>
<treenode node="parseBlocks;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\ListTrait.php;f20;192;48;192;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mlines;;p">
</treenode>
<treenode node="parseInline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\ListTrait.php;f20;193;47;193;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mtext;;p">
</treenode>
<treenode node="renderAbsy;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\ListTrait.php;f20;194;46;194;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mabsy;;p">
</treenode>
<treenode node="renderList;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\ListTrait.php;f11;162;2;176;;;;vpos;;v;;r&#10;Definition&#10;    renderList($block)&#10;&#10;Description&#10;     Renders a list;;d1,163;;b2,0;;mblock;;p">
</treenode>
</treenode>
<treenode node="Loader;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader.php;f0;40;1;138;;;;vpos;;v;;r&#10;Definition&#10;    class Loader&#10;&#10;Description&#10;     Loads all Codeception supported test formats from a directory.;;d0,41;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader.php;f11;46;5;55;;;;vpos;;v;;r;;d4,47;;b1,0;;msuiteSettings;;p">
</treenode>
<treenode node="findPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader.php;f14;67;5;77;;;;vpos;;v;;r;;d4,68;;b2,0;;mpath;;p">
</treenode>
<treenode node="getTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader.php;f11;57;5;60;;;;vpos;;v;;r;;d4,58;;b1,0;;m">
</treenode>
<treenode node="loadTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader.php;f11;96;5;117;;;;vpos;;v;;r;;d4,97;;b1,0;;mpath;;p">
</treenode>
<treenode node="loadTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader.php;f11;119;5;137;;;;vpos;;v;;r;;d4,120;;b1,0;;mfileName;;p">
</treenode>
<treenode node="makePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader.php;f14;79;5;94;;;;vpos;;v;;r;;d4,80;;b2,0;;moriginalPath;;p">
</treenode>
<treenode node="relativeName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader.php;f14;62;5;65;;;;vpos;;v;;r;;d4,63;;b2,0;;mfile;;p">
</treenode>
</treenode>
<treenode node="Local;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Local.php;f0;12;1;46;;;;vpos;;vSuiteSubscriber;;c;;r&#10;Definition&#10;    class Local extends SuiteSubscriber&#10;&#10;Description&#10;     Collects code coverage from unit and functional tests. Results from all suites are merged.;;d0,13;;b0,0;;m">
<treenode node="afterSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Local.php;f11;39;5;45;;;;vpos;;v;;r;;d4,40;;b1,0;;me;;p">
</treenode>
<treenode node="beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Local.php;f11;29;5;37;;;;vpos;;v;;r;;d4,30;;b1,0;;me;;p">
</treenode>
<treenode node="isEnabled;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Local.php;f14;24;5;27;;;;vpos;;v;;r;;d4,25;;b2,0;;m">
</treenode>
</treenode>
<treenode node="LocalFileDetector;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;58;86;58;;;;vpos;;vLocalFileDetector;;c;;r;;d84,58;;b0,0;;m">
</treenode>
<treenode node="LocalServer;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f0;20;1;237;;;;vpos;;vSuiteSubscriber;;c;;r&#10;Definition&#10;    class LocalServer extends SuiteSubscriber&#10;&#10;Description&#10;     When collecting code coverage data from local server HTTP requests are sent to c3.php file. Coverage Collection is started by sending cookies/headers. Result is taken from the local file and merged with local code coverage results.;;d0,21;;b0,0;;m">
<treenode node="COVERAGE_COOKIE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f9;29;25;29;;;;vpos;;v;;r&apos;CODECEPTION_CODECOVERAGE&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="COVERAGE_COOKIE_ERROR;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f9;30;31;30;;;;vpos;;v;;r&apos;CODECEPTION_CODECOVERAGE_ERROR&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="COVERAGE_HEADER;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f9;23;25;23;;;;vpos;;v;;r&apos;X-Codeception-CodeCoverage&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="COVERAGE_HEADER_CONFIG;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f9;25;32;25;;;;vpos;;v;;r&apos;X-Codeception-CodeCoverage-Config&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="COVERAGE_HEADER_ERROR;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f9;24;31;24;;;;vpos;;v;;r&apos;X-Codeception-CodeCoverage-Error&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="COVERAGE_HEADER_SUITE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f9;26;31;26;;;;vpos;;v;;r&apos;X-Codeception-CodeCoverage-Suite&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="addC3AccessHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f14;222;5;228;;;;vpos;;v;;r;;d4,223;;b2,0;;mheader;;pvalue;;p">
</treenode>
<treenode node="afterStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f11;92;5;98;;;;vpos;;v;;r;;d4,93;;b1,0;;me;;p">
</treenode>
<treenode node="afterSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f11;100;5;125;;;;vpos;;v;;r;;d4,101;;b1,0;;me;;p">
</treenode>
<treenode node="applySettings;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f14;230;5;236;;;;vpos;;v;;r;;d4,231;;b2,0;;msettings;;p">
</treenode>
<treenode node="beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f11;57;5;82;;;;vpos;;v;;r;;d4,58;;b1,0;;me;;p">
</treenode>
<treenode node="beforeTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f11;84;5;90;;;;vpos;;v;;r;;d4,85;;b1,0;;me;;p">
</treenode>
<treenode node="c3Request;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f14;127;5;147;;;;vpos;;v;;r;;d4,128;;b2,0;;maction;;p">
</treenode>
<treenode node="fetchErrors;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f14;198;5;211;;;;vpos;;v;;r;;d4,199;;b2,0;;m">
</treenode>
<treenode node="getRemoteError;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f14;213;5;220;;;;vpos;;v;;r;;d4,214;;b2,0;;mheaders;;p">
</treenode>
<treenode node="isEnabled;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f14;52;5;55;;;;vpos;;v;;r;;d4,53;;b2,0;;m">
</treenode>
<treenode node="startCoverageCollection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\LocalServer.php;f14;149;5;196;;;;vpos;;v;;r;;d4,150;;b2,0;;mtestName;;p">
</treenode>
</treenode>
<treenode node="Locator;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f0;13;1;399;;;;vpos;;v;;r&#10;Definition&#10;    class Locator&#10;&#10;Description&#10;     Set of useful functions for using CSS and XPath locators. Please check them before writing complex functional or acceptance tests.;;d0,14;;b0,0;;m">
<treenode node="combine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;49;5;59;;;;vpos;;vstring;;r&#10;Definition&#10;    combine($selector1, $selector2)&#10;&#10;Description&#10;     Applies OR operator to any number of CSS or XPath selectors. You can mix up CSS and XPath selectors here.&#10;&#10;Parameters:&#10;     $selector1&#10;     $selector2;;d4,50;;b1,5;;m $selector1;;p $selector2;;p">
</treenode>
<treenode node="contains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;291;5;295;;;;vpos;;vstring;;r&#10;Definition&#10;    contains($element, $text)&#10;&#10;Description&#10;     Locates an element containing a text inside. Either CSS or XPath locator can be passed, however they will be converted to XPath.&#10;&#10;Parameters:&#10;     $element&#10;     $text;;d4,292;;b1,5;;m $element;;p $text;;p">
</treenode>
<treenode node="elementAt;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;317;5;329;;;;vpos;;vmixed;;r&#10;Definition&#10;    elementAt($element, $position)&#10;&#10;Description&#10;     Locates element at position. Either CSS or XPath locator can be passed as locator, position is an integer. If a negative value is provided, counting starts from the last element. First element has index 1&#10;&#10;Parameters:&#10;    string $element - CSS or XPath locator&#10;    int $position - xpath index;;d4,318;;b1,5;;mstring $element;;pint $position;;p">
</treenode>
<treenode node="find;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;158;5;169;;;;vpos;;vstring;;r&#10;Definition&#10;    find($element, array $attributes)&#10;&#10;Description&#10;     Finds element by it&apos;s attribute(s)&#10;&#10;Parameters:&#10;     $element&#10;     $attributes;;d4,159;;b1,5;;m $element;;p $attributes;;p">
</treenode>
<treenode node="firstElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;347;5;350;;;;vpos;;vmixed;;r&#10;Definition&#10;    firstElement($element)&#10;&#10;Description&#10;     Locates first element of group elements. Either CSS or XPath locator can be passed as locator, Equal to `Locator::elementAt($locator, 1)`&#10;&#10;Parameters:&#10;     $element;;d4,348;;b1,5;;m $element;;p">
</treenode>
<treenode node="href;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;78;5;81;;;;vpos;;vstring;;r&#10;Definition&#10;    href($url)&#10;&#10;Description&#10;     Matches the *a* element with given URL&#10;&#10;Parameters:&#10;     $url;;d4,79;;b1,5;;m $url;;p">
</treenode>
<treenode node="humanReadableString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;380;5;398;;;;vpos;;vstring;;r&#10;Definition&#10;    humanReadableString($selector)&#10;&#10;Description&#10;     Transforms strict locator, \Facebook\WebDriver\WebDriverBy into a string represenation&#10;&#10;Parameters:&#10;     $selector;;d4,381;;b1,5;;m $selector;;p">
</treenode>
<treenode node="isClass;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;269;5;272;;;;vpos;;vbool;;r&#10;Definition&#10;    isClass($class)&#10;&#10;Description&#10;     Checks that a string is valid CSS class&#10;&#10;Parameters:&#10;     $class;;d4,270;;b1,5;;m $class;;p">
</treenode>
<treenode node="isCSS;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;185;5;193;;;;vpos;;vbool;;r&#10;Definition&#10;    isCSS($selector)&#10;&#10;Description&#10;     Checks that provided string is CSS selector&#10;&#10;Parameters:&#10;     $selector;;d4,186;;b1,5;;m $selector;;p">
</treenode>
<treenode node="isID;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;251;5;254;;;;vpos;;vbool;;r&#10;Definition&#10;    isID($id)&#10;&#10;Description&#10;     Checks that a string is valid CSS ID&#10;&#10;Parameters:&#10;     $id;;d4,252;;b1,5;;m $id;;p">
</treenode>
<treenode node="isPrecise;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;220;5;235;;;;vpos;;vbool;;r&#10;Definition&#10;    isPrecise($locator)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $locator;;d4,221;;b1,5;;m $locator;;p">
</treenode>
<treenode node="isXPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;209;5;214;;;;vpos;;vbool;;r&#10;Definition&#10;    isXPath($locator)&#10;&#10;Description&#10;     Checks that locator is an XPath&#10;&#10;Parameters:&#10;     $locator;;d4,210;;b1,5;;m $locator;;p">
</treenode>
<treenode node="lastElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;368;5;371;;;;vpos;;vmixed;;r&#10;Definition&#10;    lastElement($element)&#10;&#10;Description&#10;     Locates last element of group elements. Either CSS or XPath locator can be passed as locator, Equal to `Locator::elementAt($locator, -1)`&#10;&#10;Parameters:&#10;     $element;;d4,369;;b1,5;;m $element;;p">
</treenode>
<treenode node="option;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;123;5;126;;;;vpos;;vstring;;r&#10;Definition&#10;    option($value)&#10;&#10;Description&#10;     Matches option by text:&#10;&#10;Parameters:&#10;     $value;;d4,124;;b1,5;;m $value;;p">
</treenode>
<treenode node="tabIndex;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f18;104;5;107;;;;vpos;;vstring;;r&#10;Definition&#10;    tabIndex($index)&#10;&#10;Description&#10;     Matches the element with given tab index&#10;&#10;Parameters:&#10;     $index;;d4,105;;b1,5;;m $index;;p">
</treenode>
<treenode node="toXPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Locator.php;f21;128;5;139;;;;vpos;;v;;r;;d4,129;;b2,5;;mselector;;p">
</treenode>
</treenode>
<treenode node="Logger;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2\Logger.php;f0;5;1;32;;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Logger.php;f0;35;1;122;;;;vpos;;vLogger;;c;;r;;d0,6;;b0,0;;m">
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Logger.php;f11;60;5;71;;;;vpos;;v;;r;;d4,61;;b1,0;;m">
</treenode>
<treenode node="afterTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Logger.php;f11;87;5;89;;;;vpos;;v;;r;;d4,88;;b1,0;;me;;p">
</treenode>
<treenode node="beforeStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Logger.php;f11;118;5;121;;;;vpos;;v;;r;;d4,119;;b1,0;;me;;p">
</treenode>
<treenode node="beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Logger.php;f11;73;5;77;;;;vpos;;v;;r;;d4,74;;b1,0;;me;;p">
</treenode>
<treenode node="beforeTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Logger.php;f11;79;5;85;;;;vpos;;v;;r;;d4,80;;b1,0;;me;;p">
</treenode>
<treenode node="endTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Logger.php;f11;91;5;94;;;;vpos;;v;;r;;d4,92;;b1,0;;me;;p">
</treenode>
<treenode node="init;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2\Logger.php;f11;7;5;10;;;;vpos;;v;;r;;d4,8;;b1,0;;m">
</treenode>
<treenode node="log;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2\Logger.php;f11;12;5;31;;;;vpos;;v;;r;;d4,13;;b1,0;;mmessage;;plevel;;pcategory;;p">
</treenode>
<treenode node="testError;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Logger.php;f11;102;5;106;;;;vpos;;v;;r;;d4,103;;b1,0;;me;;p">
</treenode>
<treenode node="testFail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Logger.php;f11;96;5;100;;;;vpos;;v;;r;;d4,97;;b1,0;;me;;p">
</treenode>
<treenode node="testIncomplete;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Logger.php;f11;113;5;116;;;;vpos;;v;;r;;d4,114;;b1,0;;me;;p">
</treenode>
<treenode node="testSkipped;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Logger.php;f11;108;5;111;;;;vpos;;v;;r;;d4,109;;b1,0;;me;;p">
</treenode>
</treenode>
<treenode node="LoginCest;PHP:Class Name;H:\OSPanel\domains\yii\tests\acceptance\LoginCest.php;f0;4;1;20;;;;vpos;;v;;r;;d0,5;;b0,0;;m">
<treenode node="ensureThatLoginWorks;PHP:Function Name;H:\OSPanel\domains\yii\tests\acceptance\LoginCest.php;f11;6;5;19;;;;vpos;;v;;r;;d4,7;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="LoginForm;PHP:Class Name;H:\OSPanel\domains\yii\models\LoginForm.php;f0;13;1;80;;;;vpos;;vModel;;c;;r&#10;Definition&#10;    class LoginForm extends Model&#10;&#10;Description&#10;     LoginForm is the model behind the login form.;;d0,14;;b0,0;;m">
<treenode node="getUser;PHP:Function Name;H:\OSPanel\domains\yii\models\LoginForm.php;f11;72;5;79;;;;vpos;;vUser;;r&#10;Definition&#10;    getUser()&#10;&#10;Description&#10;     Finds user by [[username]]&#10;&#10;Return:&#10;   |null;;d4,73;;b1,0;;m">
</treenode>
<treenode node="login;PHP:Function Name;H:\OSPanel\domains\yii\models\LoginForm.php;f11;59;5;65;;;;vpos;;vbool;;r&#10;Definition&#10;    login()&#10;&#10;Description&#10;     Logs in a user using the provided username and password.&#10;&#10;Return:&#10;   whether the user is logged in successfully;;d4,60;;b1,0;;m">
</treenode>
<treenode node="rules;PHP:Function Name;H:\OSPanel\domains\yii\models\LoginForm.php;f11;25;5;35;;;;vpos;;varray;;r&#10;Definition&#10;    rules()&#10;&#10;Description&#10;      the validation rules.&#10;&#10;Return:&#10;   the validation rules;;d4,26;;b1,0;;m">
</treenode>
<treenode node="validatePassword;PHP:Function Name;H:\OSPanel\domains\yii\models\LoginForm.php;f11;44;5;53;;;;vpos;;v;;r&#10;Definition&#10;    validatePassword($attribute, $params)&#10;&#10;Description&#10;     Validates the password. This method serves as the inline validation for password.&#10;&#10;Parameters:&#10;    string $attribute - the attribute currently being validated&#10;    array $params - the additional name-value pairs given in the rule;;d4,45;;b1,0;;mstring $attribute;;parray $params;;p">
</treenode>
</treenode>
<treenode node="LoginFormCest;PHP:Class Name;H:\OSPanel\domains\yii\tests\functional\LoginFormCest.php;f0;2;1;58;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\tests\functional\LoginFormCest.php;f11;4;5;7;;;;vpos;;v;;r;;d4,5;;b1,0;;mI;;p">
</treenode>
<treenode node="internalLoginById;PHP:Function Name;H:\OSPanel\domains\yii\tests\functional\LoginFormCest.php;f11;16;5;21;;;;vpos;;v;;r;;d4,17;;b1,0;;mI;;p">
</treenode>
<treenode node="internalLoginByInstance;PHP:Function Name;H:\OSPanel\domains\yii\tests\functional\LoginFormCest.php;f11;24;5;29;;;;vpos;;v;;r;;d4,25;;b1,0;;mI;;p">
</treenode>
<treenode node="loginSuccessfully;PHP:Function Name;H:\OSPanel\domains\yii\tests\functional\LoginFormCest.php;f11;49;5;57;;;;vpos;;v;;r;;d4,50;;b1,0;;mI;;p">
</treenode>
<treenode node="loginWithEmptyCredentials;PHP:Function Name;H:\OSPanel\domains\yii\tests\functional\LoginFormCest.php;f11;31;5;37;;;;vpos;;v;;r;;d4,32;;b1,0;;mI;;p">
</treenode>
<treenode node="loginWithWrongCredentials;PHP:Function Name;H:\OSPanel\domains\yii\tests\functional\LoginFormCest.php;f11;39;5;47;;;;vpos;;v;;r;;d4,40;;b1,0;;mI;;p">
</treenode>
<treenode node="openLoginPage;PHP:Function Name;H:\OSPanel\domains\yii\tests\functional\LoginFormCest.php;f11;9;5;13;;;;vpos;;v;;r;;d4,10;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="LoginFormTest;PHP:Class Name;H:\OSPanel\domains\yii\tests\unit\models\LoginFormTest.php;f0;6;1;50;;;;vpos;;vUnit;;c;;r;;d0,7;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\tests\unit\models\LoginFormTest.php;f14;10;5;13;;;;vpos;;v;;r;;d4,11;;b2,0;;m">
</treenode>
<treenode node="testLoginCorrect;PHP:Function Name;H:\OSPanel\domains\yii\tests\unit\models\LoginFormTest.php;f11;38;5;48;;;;vpos;;v;;r;;d4,39;;b1,0;;m">
</treenode>
<treenode node="testLoginNoUser;PHP:Function Name;H:\OSPanel\domains\yii\tests\unit\models\LoginFormTest.php;f11;15;5;24;;;;vpos;;v;;r;;d4,16;;b1,0;;m">
</treenode>
<treenode node="testLoginWrongPassword;PHP:Function Name;H:\OSPanel\domains\yii\tests\unit\models\LoginFormTest.php;f11;26;5;36;;;;vpos;;v;;r;;d4,27;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Lumen;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f0;55;1;574;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Lumen.php;f0;12;1;126;;;;vpos;;vFramework;;cActiveRecord;;cPartedModule;;cLaravelCommon;;c;;r&#10;Definition&#10;    class Lumen extends Framework implements ActiveRecord, PartedModule&#10;&#10;Description&#10;      This module allows you to run functional tests for Lumen. Please try it and leave your feedback.;;d0,56;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;75;5;95;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Lumen.php;f11;41;5;56;;;;vpos;;v;;r&#10;Definition&#10;    __construct(ModuleContainer $container, $config = null)&#10;&#10;Description&#10;     Constructor.&#10;&#10;Parameters:&#10;    ModuleContainer $container&#10;    array|null $config;;d4,76;;b1,0;;mModuleContainer $container;;parray|null $config;;p">
</treenode>
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;134;5;144;;;;vpos;;v;;r&#10;Definition&#10;    _after(TestInterface $test)&#10;&#10;Description&#10;     After hook.&#10;&#10;Parameters:&#10;    \Codeception\TestInterface $test;;d4,135;;b1,0;;m\Codeception\TestInterface $test;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;120;5;127;;;;vpos;;v;;r&#10;Definition&#10;    _before(TestInterface $test)&#10;&#10;Description&#10;     Before hook.&#10;&#10;Parameters:&#10;    \Codeception\TestInterface $test;;d4,121;;b1,0;;m\Codeception\TestInterface $test;;p">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;108;5;112;;;;vpos;;v;;r&#10;Definition&#10;    _initialize()&#10;&#10;Description&#10;     Initialize hook.;;d4,109;;b1,0;;m">
</treenode>
<treenode node="_parts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;100;5;103;;;;vpos;;varray;;r&#10;Definition&#10;    _parts()&#10;&#10;Description&#10;     ;;d4,101;;b1,0;;m">
</treenode>
<treenode node="amLoggedAs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;264;5;283;;;;vpos;;vvoid;;r&#10;Definition&#10;    amLoggedAs($user, $driver = null)&#10;&#10;Description&#10;     Set the authenticated user for the next request. This will not persist between multiple requests.&#10;&#10;Parameters:&#10;    \Illuminate\Contracts\Auth\Authenticatable&#10;    string|null $driver - The authentication driver for Lumen &lt;= 5;;d4,265;;b1,0;;m\Illuminate\Contracts\Auth\Authenticatable;;pstring|null $driver;;p">
</treenode>
<treenode node="amOnRoute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;202;5;212;;;;vpos;;v;;r&#10;Definition&#10;    amOnRoute($routeName, $params = [])&#10;&#10;Description&#10;     Opens web page using route name and parameters.&#10;&#10;Parameters:&#10;     $routeName&#10;    array $params;;d4,203;;b1,0;;m $routeName;;parray $params;;p">
</treenode>
<treenode node="checkBootstrapFileExists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f14;151;5;162;;;;vpos;;v;;r&#10;Definition&#10;    checkBootstrapFileExists()&#10;&#10;Description&#10;     Make sure the Lumen bootstrap file exists.;;d4,152;;b2,0;;m">
</treenode>
<treenode node="dontSeeAuthentication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;295;5;298;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeAuthentication()&#10;&#10;Description&#10;     Check that user is not authenticated.;;d4,296;;b1,0;;m">
</treenode>
<treenode node="dontSeeRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;406;5;415;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeRecord($table, $attributes = [])&#10;&#10;Description&#10;     Checks that record does not exist in database. You can pass the name of a database table or the class name of an Eloquent model as the first argument.&#10;&#10;Parameters:&#10;    string $table&#10;    array $attributes;;d4,407;;b1,0;;mstring $table;;parray $attributes;;p">
</treenode>
<treenode node="doRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Lumen.php;f14;64;5;84;;;;vpos;;vResponse;;r&#10;Definition&#10;    doRequest($request)&#10;&#10;Description&#10;     Execute a request.&#10;&#10;Parameters:&#10;    SymfonyRequest $request;;d4,65;;b2,0;;mSymfonyRequest $request;;p">
</treenode>
<treenode node="findModel;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f14;457;5;471;;;;vpos;;vEloquentModel;;r&#10;Definition&#10;    findModel($modelClass, $attributes = [])&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $modelClass&#10;    array $attributes;;d4,458;;b2,0;;mstring $modelClass;;parray $attributes;;p">
</treenode>
<treenode node="findRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f14;478;5;486;;;;vpos;;varray;;r&#10;Definition&#10;    findRecord($table, $attributes = [])&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $table&#10;    array $attributes;;d4,479;;b2,0;;mstring $table;;parray $attributes;;p">
</treenode>
<treenode node="generateUrlForRoute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f12;244;5;254;;;;vpos;;vstring;;r&#10;Definition&#10;    generateUrlForRoute($route, $params)&#10;&#10;Description&#10;     Generate the URL for a route specification. Replaces the route parameters from left to right with the parameters passed in the $params array.&#10;&#10;Parameters:&#10;    array $route&#10;    array $params;;d4,245;;b3,0;;marray $route;;parray $params;;p">
</treenode>
<treenode node="getApplication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;177;5;180;;;;vpos;;v;;r&#10;Definition&#10;    getApplication()&#10;&#10;Description&#10;     Provides access the Lumen application object.;;d4,178;;b1,0;;m">
</treenode>
<treenode node="getInternalDomains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f14;568;5;573;;;;vpos;;varray;;r&#10;Definition&#10;    getInternalDomains()&#10;&#10;Description&#10;     Returns a list of recognized domain names. This elements of this list are regular expressions.;;d4,569;;b2,0;;m">
</treenode>
<treenode node="getRouteByName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f12;220;5;233;;;;vpos;;varray;;r&#10;Definition&#10;    getRouteByName($routeName)&#10;&#10;Description&#10;     Get the route for a route name.&#10;&#10;Parameters:&#10;    string $routeName&#10;&#10;Return:&#10;   |null;;d4,221;;b3,0;;mstring $routeName;;p">
</treenode>
<treenode node="grabRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;434;5;449;;;;vpos;;varray;;r&#10;Definition&#10;    grabRecord($table, $attributes = [])&#10;&#10;Description&#10;     Retrieves record from database If you pass the name of a database table as the first argument, this method returns an array. You can also pass the class name of an Eloquent model, in that case this method returns an Eloquent model.&#10;&#10;Parameters:&#10;    string $table&#10;    array $attributes&#10;&#10;Return:&#10;   |EloquentModel;;d4,435;;b1,0;;mstring $table;;parray $attributes;;p">
</treenode>
<treenode node="grabService;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;322;5;325;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabService($class)&#10;&#10;Description&#10;     Return an instance of a class from the IoC Container.&#10;&#10;Parameters:&#10;    string $class;;d4,323;;b1,0;;mstring $class;;p">
</treenode>
<treenode node="have;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;507;5;514;;;;vpos;;vmixed;;r&#10;Definition&#10;    have($model, $attributes = [], $name = &apos;default&apos;)&#10;&#10;Description&#10;     Use Lumen&apos;s model factory to create a model. Can only be used with Lumen 5.1 and later.&#10;&#10;Parameters:&#10;    string $model&#10;    array $attributes&#10;    string $name;;d4,508;;b1,0;;mstring $model;;parray $attributes;;pstring $name;;p">
</treenode>
<treenode node="haveMultiple;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;536;5;543;;;;vpos;;vmixed;;r&#10;Definition&#10;    haveMultiple($model, $times, $attributes = [], $name = &apos;default&apos;)&#10;&#10;Description&#10;     Use Laravel&apos;s model factory to create multiple models. Can only be used with Lumen 5.1 and later.&#10;&#10;Parameters:&#10;    string $model&#10;    int $times&#10;    array $attributes&#10;    string $name;;d4,537;;b1,0;;mstring $model;;pint $times;;parray $attributes;;pstring $name;;p">
</treenode>
<treenode node="haveRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;344;5;363;;;;vpos;;vinteger;;r&#10;Definition&#10;    haveRecord($table, $attributes = [])&#10;&#10;Description&#10;     Inserts record into the database. If you pass the name of a database table as the first argument, this method returns an integer ID. You can also pass the class name of an Eloquent model, in that case this method returns an Eloquent model.&#10;&#10;Parameters:&#10;    string $table&#10;    array $attributes&#10;&#10;Return:&#10;   |EloquentModel;;d4,345;;b1,0;;mstring $table;;parray $attributes;;p">
</treenode>
<treenode node="initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Lumen.php;f12;91;5;125;;;;vpos;;v;;r&#10;Definition&#10;    initialize($request = null)&#10;&#10;Description&#10;     Initialize the Lumen framework.&#10;&#10;Parameters:&#10;    SymfonyRequest|null $request;;d4,92;;b3,0;;mSymfonyRequest|null $request;;p">
</treenode>
<treenode node="modelFactory;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f14;552;5;560;;;;vpos;;v;;r&#10;Definition&#10;    modelFactory($model, $name, $times = 1)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $model&#10;    string $name&#10;    int $times;;d4,553;;b2,0;;mstring $model;;pstring $name;;pint $times;;p">
</treenode>
<treenode node="registerAutoloaders;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f14;167;5;170;;;;vpos;;v;;r&#10;Definition&#10;    registerAutoloaders()&#10;&#10;Description&#10;     Register autoloaders.;;d4,168;;b2,0;;m">
</treenode>
<treenode node="seeAuthentication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;288;5;291;;;;vpos;;v;;r&#10;Definition&#10;    seeAuthentication()&#10;&#10;Description&#10;     Checks that user is authenticated.;;d4,289;;b1,0;;m">
</treenode>
<treenode node="seeRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;380;5;389;;;;vpos;;v;;r&#10;Definition&#10;    seeRecord($table, $attributes = [])&#10;&#10;Description&#10;     Checks that record exists in database. You can pass the name of a database table or the class name of an Eloquent model as the first argument.&#10;&#10;Parameters:&#10;    string $table&#10;    array $attributes;;d4,381;;b1,0;;mstring $table;;parray $attributes;;p">
</treenode>
<treenode node="setApplication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Lumen.php;f11;185;5;188;;;;vpos;;v;;r&#10;Definition&#10;    setApplication($app)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \Laravel\Lumen\Application $app;;d4,186;;b1,0;;m\Laravel\Lumen\Application $app;;p">
</treenode>
</treenode>
<treenode node="MalformedLocatorException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\MalformedLocatorException.php;f0;3;1;9;;;;vpos;;vTestRuntimeException;;c;;r;;d0,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\MalformedLocatorException.php;f11;5;5;8;;;;vpos;;v;;r;;d4,6;;b1,0;;mlocator;;ptype;;p">
</treenode>
</treenode>
<treenode node="Markdown;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Markdown.php;f0;14;1;127;;;;vpos;;vParser;;cCodeTrait;;cHeadlineTrait;;cHtmlTrait;;cListTrait;;cQuoteTrait;;cRuleTrait;;cCodeTrait;;cEmphStrongTrait;;cLinkTrait;;c;;r&#10;Definition&#10;    class Markdown extends Parser&#10;&#10;Description&#10;     Markdown parser for the [initial markdown spec](http://daringfireball.net/projects/markdown/syntax).;;d0,15;;b0,0;;m">
<treenode node="consumeParagraph;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Markdown.php;f11;81;2;115;;;;vpos;;v;;r&#10;Definition&#10;    consumeParagraph($lines, $current)&#10;&#10;Description&#10;     Consume lines for a paragraph;;d1,82;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="prepare;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Markdown.php;f11;70;2;74;;;;vpos;;v;;r&#10;Definition&#10;    prepare()&#10;&#10;Description&#10;      inheritDoc;;d1,71;;b2,0;;m">
</treenode>
<treenode node="renderText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Markdown.php;f11;123;2;126;;;;vpos;;v;;r&#10;Definition&#10;    renderText($text)&#10;&#10;Description&#10;      inheritdocs;;d1,124;;b2,0;;mtext;;p">
</treenode>
</treenode>
<treenode node="MarkdownExtra;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f0;16;1;249;;;;vpos;;vMarkdown;;cTableTrait;;cFencedCodeTrait;;c;;r&#10;Definition&#10;    class MarkdownExtra extends Markdown&#10;&#10;Description&#10;     Markdown parser for the [markdown extra](http://michelf.ca/projects/php-markdown/extra/) flavor.;;d0,17;;b0,0;;m">
<treenode node="consumeFencedCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f11;105;2;127;;;;vpos;;v;;r&#10;Definition&#10;    consumeFencedCode($lines, $current)&#10;&#10;Description&#10;     Consume lines for a fenced code block;;d1,106;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="consumeReference;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f11;77;2;100;;;;vpos;;v;;r&#10;Definition&#10;    consumeReference($lines, $current)&#10;&#10;Description&#10;     Consume link references;;d1,78;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="identifyReference;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f11;69;2;72;;;;vpos;;v;;r;;d1,70;;b2,0;;mline;;p">
</treenode>
<treenode node="parseInline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f11;198;2;217;;;;vpos;;v;;r;;d1,199;;b2,0;;mtext;;p">
</treenode>
<treenode node="parseSpecialAttributes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f11;185;2;191;;;;vpos;;v;;r&#10;Definition&#10;    parseSpecialAttributes($text)&#10;&#10;Description&#10;      marker {;;d1,186;;b2,0;;mtext;;p">
</treenode>
<treenode node="renderAttributes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f11;153;2;176;;;;vpos;;v;;r;;d1,154;;b2,0;;mblock;;p">
</treenode>
<treenode node="renderCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f11;129;2;135;;;;vpos;;v;;r;;d1,130;;b2,0;;mblock;;p">
</treenode>
<treenode node="renderHeadline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f11;140;2;151;;;;vpos;;v;;r&#10;Definition&#10;    renderHeadline($block)&#10;&#10;Description&#10;     Renders a headline;;d1,141;;b2,0;;mblock;;p">
</treenode>
<treenode node="renderImage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f11;234;2;248;;;;vpos;;v;;r;;d1,235;;b2,0;;mblock;;p">
</treenode>
<treenode node="renderLink;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f11;219;2;232;;;;vpos;;v;;r;;d1,220;;b2,0;;mblock;;p">
</treenode>
<treenode node="renderSpecialAttributes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\MarkdownExtra.php;f11;193;2;196;;;;vpos;;v;;r;;d1,194;;b2,0;;mblock;;p">
</treenode>
</treenode>
<treenode node="MarkdownExtraTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\MarkdownExtraTest.php;f0;9;1;23;;;;vpos;;vBaseMarkdownTest;;c;;r&#10;Definition&#10;    class MarkdownExtraTest extends BaseMarkdownTest&#10;&#10;Description&#10;      author Carsten Brandt &lt;mail cebe.cc&gt;;;d0,10;;b0,0;;m">
<treenode node="createMarkdown;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\MarkdownExtraTest.php;f8;11;2;14;;;;vpos;;v;;r;;d1,12;;b1,0;;m">
</treenode>
<treenode node="getDataPaths;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\MarkdownExtraTest.php;f8;16;2;22;;;;vpos;;v;;r;;d1,17;;b1,0;;m">
</treenode>
</treenode>
<treenode node="MarkdownOLStartNumTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\MarkdownOLStartNumTest.php;f0;16;1;31;;;;vpos;;vBaseMarkdownTest;;c;;r&#10;Definition&#10;    class MarkdownOLStartNumTest extends BaseMarkdownTest&#10;&#10;Description&#10;     Test support ordered lists at arbitrary number(`start` html attribute);;d0,17;;b0,0;;m">
<treenode node="createMarkdown;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\MarkdownOLStartNumTest.php;f8;18;2;23;;;;vpos;;v;;r;;d1,19;;b1,0;;m">
</treenode>
<treenode node="getDataPaths;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\MarkdownOLStartNumTest.php;f8;25;2;30;;;;vpos;;v;;r;;d1,26;;b1,0;;m">
</treenode>
</treenode>
<treenode node="MarkdownTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\MarkdownTest.php;f0;17;1;59;;;;vpos;;vBaseMarkdownTest;;c;;r&#10;Definition&#10;    class MarkdownTest extends BaseMarkdownTest&#10;&#10;Description&#10;     Test case for traditional markdown.;;d0,18;;b0,0;;m">
<treenode node="createMarkdown;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\MarkdownTest.php;f8;19;2;22;;;;vpos;;v;;r;;d1,20;;b1,0;;m">
</treenode>
<treenode node="getDataPaths;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\MarkdownTest.php;f8;24;2;29;;;;vpos;;v;;r;;d1,25;;b1,0;;m">
</treenode>
<treenode node="testAutoLinkLabelingWithEncodedUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\MarkdownTest.php;f8;45;2;58;;;;vpos;;v;;r;;d1,46;;b1,0;;m">
</treenode>
<treenode node="testEdgeCases;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\MarkdownTest.php;f8;31;2;35;;;;vpos;;v;;r;;d1,32;;b1,0;;m">
</treenode>
<treenode node="testKeepZeroAlive;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\MarkdownTest.php;f8;37;2;43;;;;vpos;;v;;r;;d1,38;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Maybe;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f0;20;1;244;;;;vpos;;vArrayAccess;;cIterator;;cJsonSerializable;;c;;r&#10;Definition&#10;    class Maybe implements \ArrayAccess, \Iterator, \JsonSerializable&#10;&#10;Description&#10;     Class to represent any type of content. This class can act as an object, array, or string. Method or property calls to this class won&apos;t cause any errors.;;d0,21;;b0,0;;m">
<treenode node="__call;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;85;5;91;;;;vpos;;v;;r;;d4,86;;b1,0;;mmethod;;pargs;;p">
</treenode>
<treenode node="__clone;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;93;5;98;;;;vpos;;v;;r;;d4,94;;b1,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;26;5;33;;;;vpos;;v;;r;;d4,27;;b1,0;;mval;;p">
</treenode>
<treenode node="__get;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;56;5;69;;;;vpos;;v;;r;;d4,57;;b1,0;;mkey;;p">
</treenode>
<treenode node="__set;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;71;5;83;;;;vpos;;v;;r;;d4,72;;b1,0;;mkey;;pval;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;40;5;54;;;;vpos;;v;;r;;d4,41;;b1,0;;m">
</treenode>
<treenode node="__unset;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;100;5;108;;;;vpos;;v;;r;;d4,101;;b1,0;;mkey;;p">
</treenode>
<treenode node="__value;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;140;5;152;;;;vpos;;v;;r;;d4,141;;b1,0;;m">
</treenode>
<treenode node="current;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;160;5;171;;;;vpos;;vmixed;;r&#10;Definition&#10;    current()&#10;&#10;Description&#10;     (PHP 5 &amp;gt;s= 5.0.0)&lt;br/&gt; Return the current element&#10;&#10;Return:&#10;   Can return any type;;d4,161;;b1,0;;m">
</treenode>
<treenode node="isAssocArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f12;35;5;38;;;;vpos;;v;;r;;d4,36;;b3,0;;marr;;p">
</treenode>
<treenode node="jsonSerialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;240;5;243;;;;vpos;;vmixed;;r&#10;Definition&#10;    jsonSerialize()&#10;&#10;Description&#10;     (PHP 5 &gt;= 5.4.0) Serializes the object to a value that can be serialized natively by json_encode().&#10;&#10;Return:&#10;   Returns data which can be serialized by json_encode(), which is a value of any type other than a resource;;d4,241;;b1,0;;m">
</treenode>
<treenode node="key;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;190;5;198;;;;vpos;;vmixed;;r&#10;Definition&#10;    key()&#10;&#10;Description&#10;     (PHP 5 &amp;gt;s= 5.0.0)&lt;br/&gt; Return the key of the current element&#10;&#10;Return:&#10;   scalar on success, or null on failure;;d4,191;;b1,0;;m">
</treenode>
<treenode node="next;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;179;5;182;;;;vpos;;vvoid;;r&#10;Definition&#10;    next()&#10;&#10;Description&#10;     (PHP 5 &amp;gt;s= 5.0.0)&lt;br/&gt; Move forward to next element&#10;&#10;Return:&#10;   Any returned value is ignored;;d4,180;;b1,0;;m">
</treenode>
<treenode node="offsetExists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;110;5;116;;;;vpos;;v;;r;;d4,111;;b1,0;;moffset;;p">
</treenode>
<treenode node="offsetGet;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;118;5;124;;;;vpos;;v;;r;;d4,119;;b1,0;;moffset;;p">
</treenode>
<treenode node="offsetSet;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;126;5;131;;;;vpos;;v;;r;;d4,127;;b1,0;;moffset;;pvalue;;p">
</treenode>
<treenode node="offsetUnset;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;133;5;138;;;;vpos;;v;;r;;d4,134;;b1,0;;moffset;;p">
</treenode>
<treenode node="rewind;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;226;5;232;;;;vpos;;vvoid;;r&#10;Definition&#10;    rewind()&#10;&#10;Description&#10;     (PHP 5 &amp;gt;s= 5.0.0)&lt;br/&gt; Rewind the Iterator to the first element&#10;&#10;Return:&#10;   Any returned value is ignored;;d4,227;;b1,0;;m">
</treenode>
<treenode node="valid;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Maybe.php;f11;207;5;218;;;;vpos;;vboolean;;r&#10;Definition&#10;    valid()&#10;&#10;Description&#10;     (PHP 5 &amp;gt;s= 5.0.0)&lt;br/&gt; Checks if current position is valid&#10;&#10;Return:&#10;   The return value will be casted to boolean and then evaluated;;d4,208;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Memcache;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Memcache.php;f0;39;1;205;;;;vpos;;vCodeceptionModule;;c;;r&#10;Definition&#10;    class Memcache extends CodeceptionModule&#10;&#10;Description&#10;     Connects to [memcached](http://www.memcached.org/) using either _Memcache_ or _Memcached_ extension.;;d0,40;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Memcache.php;f11;78;5;93;;;;vpos;;v;;r&#10;Definition&#10;    _after(TestInterface $test)&#10;&#10;Description&#10;     Code to run after each test.&#10;&#10;Parameters:&#10;    TestInterface $test;;d4,79;;b1,0;;mTestInterface $test;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Memcache.php;f11;60;5;71;;;;vpos;;v;;r&#10;Definition&#10;    _before(TestInterface $test)&#10;&#10;Description&#10;     Code to run before each test.&#10;&#10;Parameters:&#10;    TestInterface $test;;d4,61;;b1,0;;mTestInterface $test;;p">
</treenode>
<treenode node="clearMemcache;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Memcache.php;f11;201;5;204;;;;vpos;;v;;r&#10;Definition&#10;    clearMemcache()&#10;&#10;Description&#10;     Flushes all Memcached data.;;d4,202;;b1,0;;m">
</treenode>
<treenode node="dontSeeInMemcached;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Memcache.php;f11;165;5;177;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeInMemcached($key, $value = null)&#10;&#10;Description&#10;     Checks item in Memcached doesn&apos;t exist or is the same as expected.&#10;&#10;Parameters:&#10;     $key&#10;     $value;;d4,166;;b1,0;;m $key;;p $value;;p">
</treenode>
<treenode node="grabValueFromMemcached;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Memcache.php;f11;109;5;115;;;;vpos;;varray;;r&#10;Definition&#10;    grabValueFromMemcached($key)&#10;&#10;Description&#10;     Grabs value from memcached by key.&#10;&#10;Parameters:&#10;     $key&#10;&#10;Return:&#10;   |string;;d4,110;;b1,0;;m $key;;p">
</treenode>
<treenode node="haveInMemcached;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Memcache.php;f11;186;5;196;;;;vpos;;v;;r&#10;Definition&#10;    haveInMemcached($key, $value, $expiration = null)&#10;&#10;Description&#10;     Stores an item `$value` with `$key` on the Memcached server.&#10;&#10;Parameters:&#10;    string $key&#10;    mixed $value&#10;    int $expiration;;d4,187;;b1,0;;mstring $key;;pmixed $value;;pint $expiration;;p">
</treenode>
<treenode node="seeInMemcached;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Memcache.php;f11;135;5;145;;;;vpos;;v;;r&#10;Definition&#10;    seeInMemcached($key, $value = null)&#10;&#10;Description&#10;     Checks item in Memcached exists and the same as expected.&#10;&#10;Parameters:&#10;     $key&#10;     $value;;d4,136;;b1,0;;m $key;;p $value;;p">
</treenode>
</treenode>
<treenode node="MemoryCache;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\MemoryCache.php;f0;20;1;65;;;;vpos;;vCacheInterface;;c;;r&#10;Definition&#10;    class MemoryCache implements CacheInterface&#10;&#10;Description&#10;     Memory cache. Caches feature into a memory.;;d0,21;;b0,0;;m">
<treenode node="isFresh;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\MemoryCache.php;f11;33;5;40;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isFresh($path, $timestamp)&#10;&#10;Description&#10;     Checks that cache for feature exists and is fresh.&#10;&#10;Parameters:&#10;    string $path - Feature path&#10;    integer $timestamp - The last time feature was updated;;d4,34;;b1,0;;mstring $path;;pinteger $timestamp;;p">
</treenode>
<treenode node="read;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\MemoryCache.php;f11;49;5;52;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    read($path)&#10;&#10;Description&#10;     Reads feature cache from path.&#10;&#10;Parameters:&#10;    string $path - Feature path;;d4,50;;b1,0;;mstring $path;;p">
</treenode>
<treenode node="write;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Cache\MemoryCache.php;f11;60;5;64;;;;vpos;;v;;r&#10;Definition&#10;    write($path, FeatureNode $feature)&#10;&#10;Description&#10;     Caches feature node.&#10;&#10;Parameters:&#10;    string $path - Feature path&#10;    FeatureNode $feature - Feature instance;;d4,61;;b1,0;;mstring $path;;pFeatureNode $feature;;p">
</treenode>
</treenode>
<treenode node="MemoryCacheTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\MemoryCacheTest.php;f0;8;1;50;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,9;;b0,0;;m">
<treenode node="setUp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\MemoryCacheTest.php;f14;46;5;49;;;;vpos;;v;;r;;d4,47;;b2,0;;m">
</treenode>
<treenode node="testCacheAndRead;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\MemoryCacheTest.php;f11;35;5;44;;;;vpos;;v;;r;;d4,36;;b1,0;;m">
</treenode>
<treenode node="testIsFreshOnFreshFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\MemoryCacheTest.php;f11;17;5;24;;;;vpos;;v;;r;;d4,18;;b1,0;;m">
</treenode>
<treenode node="testIsFreshOnOutdated;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\MemoryCacheTest.php;f11;26;5;33;;;;vpos;;v;;r;;d4,27;;b1,0;;m">
</treenode>
<treenode node="testIsFreshWhenThereIsNoFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Cache\MemoryCacheTest.php;f11;12;5;15;;;;vpos;;v;;r;;d4,13;;b1,0;;m">
</treenode>
</treenode>
<treenode node="MemorySession;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f0;5;1;308;;;;vpos;;vAdapterInterface;;c;;r;;d0,6;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;32;5;39;;;;vpos;;v;;r;;d4,33;;b1,0;;moptions;;p">
</treenode>
<treenode node="__get;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;253;5;256;;;;vpos;;vmixed;;r&#10;Definition&#10;    __get($index)&#10;&#10;Description&#10;     Alias: Gets a session variable from an application context&#10;&#10;Parameters:&#10;    string $index;;d4,254;;b1,0;;mstring $index;;p">
</treenode>
<treenode node="__isset;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;275;5;278;;;;vpos;;vbool;;r&#10;Definition&#10;    __isset($index)&#10;&#10;Description&#10;     Alias: Check whether a session variable is set in an application context&#10;&#10;Parameters:&#10;    string $index;;d4,276;;b1,0;;mstring $index;;p">
</treenode>
<treenode node="__set;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;264;5;267;;;;vpos;;v;;r&#10;Definition&#10;    __set($index, $value)&#10;&#10;Description&#10;     Alias: Sets a session variable in an application context&#10;&#10;Parameters:&#10;    string $index&#10;    mixed $value;;d4,265;;b1,0;;mstring $index;;pmixed $value;;p">
</treenode>
<treenode node="__unset;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;285;5;288;;;;vpos;;v;;r&#10;Definition&#10;    __unset($index)&#10;&#10;Description&#10;     Alias: Removes a session variable from an application context&#10;&#10;Parameters:&#10;    string $index;;d4,286;;b1,0;;mstring $index;;p">
</treenode>
<treenode node="destroy;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;185;5;202;;;;vpos;;vbool;;r&#10;Definition&#10;    destroy($removeData = false)&#10;&#10;Description&#10;      inheritdoc&#10;&#10;Parameters:&#10;    bool $removeData;;d4,186;;b1,0;;mbool $removeData;;p">
</treenode>
<treenode node="generateId;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f12;304;5;307;;;;vpos;;vstring;;r&#10;Definition&#10;    generateId()&#10;&#10;Description&#10;     ;;d4,305;;b3,0;;m">
</treenode>
<treenode node="get;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;88;5;103;;;;vpos;;vmixed;;r&#10;Definition&#10;    get($index, $defaultValue = null, $remove = false)&#10;&#10;Description&#10;      inheritdoc&#10;&#10;Parameters:&#10;    string $index&#10;    mixed $defaultValue&#10;    bool $remove;;d4,89;;b1,0;;mstring $index;;pmixed $defaultValue;;pbool $remove;;p">
</treenode>
<treenode node="getId;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;142;5;145;;;;vpos;;vstring;;r&#10;Definition&#10;    getId()&#10;&#10;Description&#10;      inheritdoc;;d4,143;;b1,0;;m">
</treenode>
<treenode node="getName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;232;5;235;;;;vpos;;vstring;;r&#10;Definition&#10;    getName()&#10;&#10;Description&#10;      inheritdoc;;d4,233;;b1,0;;m">
</treenode>
<treenode node="getOptions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;75;5;78;;;;vpos;;varray;;r&#10;Definition&#10;    getOptions()&#10;&#10;Description&#10;      inheritdoc;;d4,76;;b1,0;;m">
</treenode>
<treenode node="has;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;122;5;125;;;;vpos;;vbool;;r&#10;Definition&#10;    has($index)&#10;&#10;Description&#10;      inheritdoc&#10;&#10;Parameters:&#10;    string $index;;d4,123;;b1,0;;mstring $index;;p">
</treenode>
<treenode node="isStarted;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;152;5;155;;;;vpos;;vbool;;r&#10;Definition&#10;    isStarted()&#10;&#10;Description&#10;      inheritdoc;;d4,153;;b1,0;;m">
</treenode>
<treenode node="prepareIndex;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f12;290;5;299;;;;vpos;;v;;r;;d4,291;;b3,0;;mindex;;p">
</treenode>
<treenode node="regenerateId;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;210;5;215;;;;vpos;;v;;r&#10;Definition&#10;    regenerateId($deleteOldSession = true)&#10;&#10;Description&#10;      inheritdoc&#10;&#10;Parameters:&#10;    bool $deleteOldSession;;d4,211;;b1,0;;mbool $deleteOldSession;;p">
</treenode>
<treenode node="remove;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;132;5;135;;;;vpos;;v;;r&#10;Definition&#10;    remove($index)&#10;&#10;Description&#10;      inheritdoc&#10;&#10;Parameters:&#10;    string $index;;d4,133;;b1,0;;mstring $index;;p">
</treenode>
<treenode node="set;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;111;5;114;;;;vpos;;v;;r&#10;Definition&#10;    set($index, $value)&#10;&#10;Description&#10;      inheritdoc&#10;&#10;Parameters:&#10;    string $index&#10;    mixed $value;;d4,112;;b1,0;;mstring $index;;pmixed $value;;p">
</treenode>
<treenode node="setName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;222;5;225;;;;vpos;;v;;r&#10;Definition&#10;    setName($name)&#10;&#10;Description&#10;      inheritdoc&#10;&#10;Parameters:&#10;    string $name;;d4,223;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="setOptions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;61;5;68;;;;vpos;;v;;r&#10;Definition&#10;    setOptions(array $options)&#10;&#10;Description&#10;      inheritdoc&#10;&#10;Parameters:&#10;    array $options;;d4,62;;b1,0;;marray $options;;p">
</treenode>
<treenode node="start;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;44;5;54;;;;vpos;;v;;r&#10;Definition&#10;    start()&#10;&#10;Description&#10;      inheritdoc;;d4,45;;b1,0;;m">
</treenode>
<treenode node="status;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;170;5;177;;;;vpos;;vint;;r&#10;Definition&#10;    status()&#10;&#10;Description&#10;     Returns the status of the current session;;d4,171;;b1,0;;m">
</treenode>
<treenode node="toArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon\MemorySession.php;f11;242;5;245;;;;vpos;;varray;;r&#10;Definition&#10;    toArray()&#10;&#10;Description&#10;     Dump all session;;d4,243;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Message;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f0;5;1;121;;;;vpos;;v;;r;;d0,6;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;10;5;14;;;;vpos;;v;;r;;d4,11;;b1,0;;mmessage;;poutput;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;117;5;120;;;;vpos;;v;;r;;d4,118;;b1,0;;m">
</treenode>
<treenode node="append;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;70;5;78;;;;vpos;;v;;r;;d4,71;;b1,0;;mstring;;p">
</treenode>
<treenode node="apply;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;80;5;84;;;;vpos;;v;;r;;d4,81;;b1,0;;mfunc;;p">
</treenode>
<treenode node="block;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;100;5;105;;;;vpos;;v;;r;;d4,101;;b1,0;;mstyle;;p">
</treenode>
<treenode node="center;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;86;5;90;;;;vpos;;v;;r;;d4,87;;b1,0;;mchar;;p">
</treenode>
<treenode node="cut;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;39;5;43;;;;vpos;;v;;r;;d4,40;;b1,0;;mlength;;p">
</treenode>
<treenode node="getLength;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;107;5;110;;;;vpos;;v;;r;;d4,108;;b1,0;;mincludeTags;;p">
</treenode>
<treenode node="getMessage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;95;5;98;;;;vpos;;vmixed;;r&#10;Definition&#10;    getMessage()&#10;&#10;Description&#10;     ;;d4,96;;b1,0;;m">
</treenode>
<treenode node="prepend;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;61;5;68;;;;vpos;;v;;r;;d4,62;;b1,0;;mstring;;p">
</treenode>
<treenode node="style;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;23;5;27;;;;vpos;;v;;r;;d4,24;;b1,0;;mname;;p">
</treenode>
<treenode node="ucfirst;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f18;112;5;115;;;;vpos;;v;;r;;d4,113;;b1,5;;mtext;;p">
</treenode>
<treenode node="width;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;29;5;37;;;;vpos;;v;;r;;d4,30;;b1,0;;mlength;;pchar;;p">
</treenode>
<treenode node="with;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;16;5;21;;;;vpos;;v;;r;;d4,17;;b1,0;;mparam;;p">
</treenode>
<treenode node="write;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;45;5;51;;;;vpos;;v;;r;;d4,46;;b1,0;;mverbose;;p">
</treenode>
<treenode node="writeln;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Message.php;f11;53;5;59;;;;vpos;;v;;r;;d4,54;;b1,0;;mverbose;;p">
</treenode>
</treenode>
<treenode node="MessageFactory;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\MessageFactory.php;f0;8;1;58;;;;vpos;;v;;r&#10;Definition&#10;    class MessageFactory&#10;&#10;Description&#10;     MessageFactory;;d0,9;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\MessageFactory.php;f11;28;5;33;;;;vpos;;v;;r&#10;Definition&#10;    __construct(Output $output)&#10;&#10;Description&#10;     MessageFactory constructor.&#10;&#10;Parameters:&#10;    Output $output;;d4,29;;b1,0;;mOutput $output;;p">
</treenode>
<treenode node="message;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\MessageFactory.php;f11;39;5;42;;;;vpos;;vMessage;;r&#10;Definition&#10;    message($text = &apos;&apos;)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $text;;d4,40;;b1,0;;mstring $text;;p">
</treenode>
<treenode node="prepareComparisonFailureMessage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\MessageFactory.php;f11;48;5;57;;;;vpos;;vstring;;r&#10;Definition&#10;    prepareComparisonFailureMessage(ComparisonFailure $failure)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    ComparisonFailure $failure;;d4,49;;b1,0;;mComparisonFailure $failure;;p">
</treenode>
</treenode>
<treenode node="Meta;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Meta.php;f0;6;1;41;;;;vpos;;vCodeceptionStep;;c;;r;;d0,7;;b0,0;;m">
<treenode node="getArgumentsAsString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Meta.php;f11;23;5;35;;;;vpos;;v;;r;;d4,24;;b1,0;;mmaxLength;;p">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Meta.php;f11;8;5;10;;;;vpos;;v;;r;;d4,9;;b1,0;;mcontainer;;p">
</treenode>
<treenode node="setFailed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Meta.php;f11;37;5;40;;;;vpos;;v;;r;;d4,38;;b1,0;;mfailed;;p">
</treenode>
<treenode node="setPrefix;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Meta.php;f11;18;5;21;;;;vpos;;v;;r;;d4,19;;b1,0;;mactor;;p">
</treenode>
<treenode node="setTraceInfo;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Meta.php;f11;12;5;16;;;;vpos;;v;;r;;d4,13;;b1,0;;mfile;;pline;;p">
</treenode>
</treenode>
<treenode node="Metadata;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f0;6;1;261;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="addReport;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;216;5;219;;;;vpos;;v;;r&#10;Definition&#10;    addReport($type, $report)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $type&#10;     $report;;d4,217;;b1,0;;m $type;;p $report;;p">
</treenode>
<treenode node="getCurrent;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;85;5;98;;;;vpos;;vmixed;;r&#10;Definition&#10;    getCurrent($key = null)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string|null $key;;d4,86;;b1,0;;mstring|null $key;;p">
</treenode>
<treenode node="getDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;156;5;159;;;;vpos;;varray;;r&#10;Definition&#10;    getDependencies()&#10;&#10;Description&#10;     ;;d4,157;;b1,0;;m">
</treenode>
<treenode node="getEnv;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;28;5;31;;;;vpos;;vmixed;;r&#10;Definition&#10;    getEnv()&#10;&#10;Description&#10;     ;;d4,29;;b1,0;;m">
</treenode>
<treenode node="getFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;169;5;172;;;;vpos;;vmixed;;r&#10;Definition&#10;    getFeature()&#10;&#10;Description&#10;     ;;d4,170;;b1,0;;m">
</treenode>
<treenode node="getFilename;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;124;5;127;;;;vpos;;vmixed;;r&#10;Definition&#10;    getFilename()&#10;&#10;Description&#10;     ;;d4,125;;b1,0;;m">
</treenode>
<treenode node="getGroups;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;36;5;39;;;;vpos;;varray;;r&#10;Definition&#10;    getGroups()&#10;&#10;Description&#10;     ;;d4,37;;b1,0;;m">
</treenode>
<treenode node="getIncomplete;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;68;5;71;;;;vpos;;vmixed;;r&#10;Definition&#10;    getIncomplete()&#10;&#10;Description&#10;     ;;d4,69;;b1,0;;m">
</treenode>
<treenode node="getIndex;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;140;5;143;;;;vpos;;vmixed;;r&#10;Definition&#10;    getIndex()&#10;&#10;Description&#10;     ;;d4,141;;b1,0;;m">
</treenode>
<treenode node="getName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;108;5;111;;;;vpos;;vmixed;;r&#10;Definition&#10;    getName()&#10;&#10;Description&#10;     ;;d4,109;;b1,0;;m">
</treenode>
<treenode node="getParam;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;228;5;238;;;;vpos;;varray;;r&#10;Definition&#10;    getParam($key = null)&#10;&#10;Description&#10;     Returns test params like: env, group, skip, incomplete, etc Can return by annotation or return all if no key passed&#10;&#10;Parameters:&#10;    null $key&#10;&#10;Return:&#10;   |mixed|null;;d4,229;;b1,0;;mnull $key;;p">
</treenode>
<treenode node="getReports;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;207;5;210;;;;vpos;;varray;;r&#10;Definition&#10;    getReports()&#10;&#10;Description&#10;     Returns all test reports;;d4,208;;b1,0;;m">
</treenode>
<treenode node="getService;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;187;5;193;;;;vpos;;varray;;r&#10;Definition&#10;    getService($service)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $service;;d4,188;;b1,0;;m $service;;p">
</treenode>
<treenode node="getSkip;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;52;5;55;;;;vpos;;vmixed;;r&#10;Definition&#10;    getSkip()&#10;&#10;Description&#10;     ;;d4,53;;b1,0;;m">
</treenode>
<treenode node="isBlocked;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;161;5;164;;;;vpos;;v;;r;;d4,162;;b1,0;;m">
</treenode>
<treenode node="setCurrent;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;100;5;103;;;;vpos;;v;;r;;d4,101;;b1,0;;mcurrents;;p">
</treenode>
<treenode node="setFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;177;5;180;;;;vpos;;v;;r&#10;Definition&#10;    setFeature($feature)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    mixed $feature;;d4,178;;b1,0;;mmixed $feature;;p">
</treenode>
<treenode node="setFilename;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;148;5;151;;;;vpos;;v;;r&#10;Definition&#10;    setFilename($filename)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    mixed $filename;;d4,149;;b1,0;;mmixed $filename;;p">
</treenode>
<treenode node="setGroups;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;44;5;47;;;;vpos;;v;;r&#10;Definition&#10;    setGroups($groups)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    mixed $groups;;d4,45;;b1,0;;mmixed $groups;;p">
</treenode>
<treenode node="setIncomplete;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;76;5;79;;;;vpos;;v;;r&#10;Definition&#10;    setIncomplete($incomplete)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    mixed $incomplete;;d4,77;;b1,0;;mmixed $incomplete;;p">
</treenode>
<treenode node="setIndex;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;132;5;135;;;;vpos;;v;;r&#10;Definition&#10;    setIndex($index)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    mixed $index;;d4,133;;b1,0;;mmixed $index;;p">
</treenode>
<treenode node="setName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;116;5;119;;;;vpos;;v;;r&#10;Definition&#10;    setName($name)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    mixed $name;;d4,117;;b1,0;;mmixed $name;;p">
</treenode>
<treenode node="setParams;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;257;5;260;;;;vpos;;v;;r&#10;Definition&#10;    setParams($params)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $params;;d4,258;;b1,0;;m $params;;p">
</treenode>
<treenode node="setParamsFromAnnotations;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;243;5;252;;;;vpos;;v;;r&#10;Definition&#10;    setParamsFromAnnotations($annotations)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    mixed $annotations;;d4,244;;b1,0;;mmixed $annotations;;p">
</treenode>
<treenode node="setServices;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;198;5;201;;;;vpos;;v;;r&#10;Definition&#10;    setServices($services)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    array $services;;d4,199;;b1,0;;marray $services;;p">
</treenode>
<treenode node="setSkip;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Metadata.php;f11;60;5;63;;;;vpos;;v;;r&#10;Definition&#10;    setSkip($skip)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    mixed $skip;;d4,61;;b1,0;;mmixed $skip;;p">
</treenode>
</treenode>
<treenode node="MetadataCollector;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\MetadataCollector.php;f0;5;1;31;;;;vpos;;v;;r;;d0,6;;b0,0;;m">
<treenode node="getFileName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\MetadataCollector.php;f11;27;5;30;;;;vpos;;v;;r;;d4,28;;b1,0;;m">
</treenode>
<treenode node="getMetadata;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\MetadataCollector.php;f11;17;5;20;;;;vpos;;v;;r;;d4,18;;b1,0;;m">
</treenode>
<treenode node="getName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\MetadataCollector.php;f11;22;5;25;;;;vpos;;v;;r;;d4,23;;b1,0;;m">
</treenode>
<treenode node="setMetadata;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\MetadataCollector.php;f14;12;5;15;;;;vpos;;v;;r;;d4,13;;b2,0;;mmetadata;;p">
</treenode>
</treenode>
<treenode node="MixedIncludeCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\MixedIncludeCest.php;f0;1;1;27;;;;vpos;;v;;r;;d0,2;;b0,0;;m">
<treenode node="checkAllSuitesExecuted;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\MixedIncludeCest.php;f14;22;5;26;;;;vpos;;v;;r;;d4,23;;b2,0;;mI;;p">
</treenode>
<treenode node="runIncludedSuiteFromCurrentDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\MixedIncludeCest.php;f11;17;5;20;;;;vpos;;v;;r&#10;Definition&#10;    runIncludedSuiteFromCurrentDir(\CliGuy $I)&#10;&#10;Description&#10;      after checkAllSuitesExecuted&#10;&#10;Parameters:&#10;    \CliGuy $I;;d4,18;;b1,0;;m\CliGuy $I;;p">
</treenode>
<treenode node="runIncludedSuites;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\MixedIncludeCest.php;f11;7;5;11;;;;vpos;;v;;r&#10;Definition&#10;    runIncludedSuites(\CliGuy $I)&#10;&#10;Description&#10;      after checkAllSuitesExecuted&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,8;;b1,0;;mCliGuy $I;;p">
</treenode>
</treenode>
<treenode node="Module;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Module.php;f0;12;1;93;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f9;16;1;360;;;;vpos;;vEventSubscriberInterface;;cStaticEvents;;c;;r;;d0,13;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;69;5;77;;;;vpos;;v;;r&#10;Definition&#10;    __construct(ModuleContainer $moduleContainer, $config = null)&#10;&#10;Description&#10;     Module constructor.&#10;&#10;Parameters:&#10;    ModuleContainer $moduleContainer&#10;    null $config;;d4,70;;b1,0;;mModuleContainer $moduleContainer;;pnull $config;;p">
</treenode>
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;252;5;254;;;;vpos;;v;;r&#10;Definition&#10;    _after(TestInterface $test)&#10;&#10;Description&#10;     **HOOK** executed after test&#10;&#10;Parameters:&#10;    TestInterface $test;;d4,253;;b1,0;;mTestInterface $test;;p">
</treenode>
<treenode node="_afterStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;234;5;236;;;;vpos;;v;;r&#10;Definition&#10;    _afterStep(Step $step)&#10;&#10;Description&#10;     **HOOK** executed after step&#10;&#10;Parameters:&#10;    Step $step;;d4,235;;b1,0;;mStep $step;;p">
</treenode>
<treenode node="_afterSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;216;5;218;;;;vpos;;v;;r&#10;Definition&#10;    _afterSuite()&#10;&#10;Description&#10;     **HOOK** executed after suite;;d4,217;;b1,0;;m">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;243;5;245;;;;vpos;;v;;r&#10;Definition&#10;    _before(TestInterface $test)&#10;&#10;Description&#10;     **HOOK** executed before test&#10;&#10;Parameters:&#10;    TestInterface $test;;d4,244;;b1,0;;mTestInterface $test;;p">
</treenode>
<treenode node="_beforeStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;225;5;227;;;;vpos;;v;;r&#10;Definition&#10;    _beforeStep(Step $step)&#10;&#10;Description&#10;     **HOOK** executed before step&#10;&#10;Parameters:&#10;    Step $step;;d4,226;;b1,0;;mStep $step;;p">
</treenode>
<treenode node="_beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;209;5;211;;;;vpos;;v;;r&#10;Definition&#10;    _beforeSuite($settings = [])&#10;&#10;Description&#10;     **HOOK** executed before suite&#10;&#10;Parameters:&#10;    array $settings;;d4,210;;b1,0;;marray $settings;;p">
</treenode>
<treenode node="_failed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;262;5;264;;;;vpos;;v;;r&#10;Definition&#10;    _failed(TestInterface $test, $fail)&#10;&#10;Description&#10;     **HOOK** executed when test fails but before `_after`&#10;&#10;Parameters:&#10;    TestInterface $test&#10;    \Exception $fail;;d4,263;;b1,0;;mTestInterface $test;;p\Exception $fail;;p">
</treenode>
<treenode node="_getConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;337;5;346;;;;vpos;;varray;;r&#10;Definition&#10;    _getConfig($key = null)&#10;&#10;Description&#10;     Get config values or specific config item.&#10;&#10;Parameters:&#10;    null $key&#10;&#10;Return:&#10;   |mixed|null;;d4,338;;b1,0;;mnull $key;;p">
</treenode>
<treenode node="_getName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;176;5;185;;;;vpos;;vstring;;r&#10;Definition&#10;    _getName()&#10;&#10;Description&#10;     Returns a module name for a Module, a class name for Helper;;d4,177;;b1,0;;m">
</treenode>
<treenode node="_hasRequiredFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;192;5;195;;;;vpos;;vbool;;r&#10;Definition&#10;    _hasRequiredFields()&#10;&#10;Description&#10;     Checks if a module has required fields;;d4,193;;b1,0;;m">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;200;5;202;;;;vpos;;v;;r&#10;Definition&#10;    _initialize()&#10;&#10;Description&#10;     **HOOK** triggered after module is created and configuration is loaded;;d4,201;;b1,0;;m">
</treenode>
<treenode node="_reconfigure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;118;5;123;;;;vpos;;v;;r&#10;Definition&#10;    _reconfigure($config)&#10;&#10;Description&#10;     Allows to redefine config for a specific test. Config is restored at the end of a test.&#10;&#10;Parameters:&#10;     $config;;d4,119;;b1,0;;m $config;;p">
</treenode>
<treenode node="_resetConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;136;5;139;;;;vpos;;v;;r&#10;Definition&#10;    _resetConfig()&#10;&#10;Description&#10;     Reverts config changed by `_reconfigure`;;d4,137;;b1,0;;m">
</treenode>
<treenode node="_setConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f11;94;5;98;;;;vpos;;v;;r&#10;Definition&#10;    _setConfig($config)&#10;&#10;Description&#10;     Allows to define initial module config. Can be used in `_beforeSuite` hook of Helpers or Extensions&#10;&#10;Parameters:&#10;     $config;;d4,95;;b1,0;;m $config;;p">
</treenode>
<treenode node="after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Module.php;f11;59;5;68;;;;vpos;;v;;r;;d4,60;;b1,0;;me;;p">
</treenode>
<treenode node="afterStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Module.php;f11;87;5;92;;;;vpos;;v;;r;;d4,88;;b1,0;;me;;p">
</treenode>
<treenode node="afterSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Module.php;f11;41;5;46;;;;vpos;;v;;r;;d4,42;;b1,0;;m">
</treenode>
<treenode node="before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Module.php;f11;48;5;57;;;;vpos;;v;;r;;d4,49;;b1,0;;mevent;;p">
</treenode>
<treenode node="beforeStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Module.php;f11;80;5;85;;;;vpos;;v;;r;;d4,81;;b1,0;;me;;p">
</treenode>
<treenode node="beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Module.php;f11;29;5;39;;;;vpos;;v;;r;;d4,30;;b1,0;;me;;p">
</treenode>
<treenode node="debug;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f14;271;5;274;;;;vpos;;v;;r&#10;Definition&#10;    debug($message)&#10;&#10;Description&#10;     Print debug message to the screen.&#10;&#10;Parameters:&#10;     $message;;d4,272;;b2,0;;m $message;;p">
</treenode>
<treenode node="debugSection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f14;282;5;288;;;;vpos;;v;;r&#10;Definition&#10;    debugSection($title, $message)&#10;&#10;Description&#10;     Print debug message with a title&#10;&#10;Parameters:&#10;     $title&#10;     $message;;d4,283;;b2,0;;m $title;;p $message;;p">
</treenode>
<treenode node="failed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Module.php;f11;70;5;78;;;;vpos;;v;;r;;d4,71;;b1,0;;me;;p">
</treenode>
<treenode node="getModule;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f14;323;5;329;;;;vpos;;vModule;;r&#10;Definition&#10;    getModule($name)&#10;&#10;Description&#10;     Get another module by its name:&#10;&#10;Parameters:&#10;     $name;;d4,324;;b2,0;;m $name;;p">
</treenode>
<treenode node="getModules;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f14;306;5;309;;;;vpos;;varray;;r&#10;Definition&#10;    getModules()&#10;&#10;Description&#10;     Get all enabled modules;;d4,307;;b2,0;;m">
</treenode>
<treenode node="hasModule;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f14;296;5;299;;;;vpos;;vbool;;r&#10;Definition&#10;    hasModule($name)&#10;&#10;Description&#10;     Checks that module is enabled.&#10;&#10;Parameters:&#10;     $name;;d4,297;;b2,0;;m $name;;p">
</treenode>
<treenode node="onReconfigure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f14;128;5;131;;;;vpos;;v;;r&#10;Definition&#10;    onReconfigure()&#10;&#10;Description&#10;     HOOK to be executed when config changes with `_reconfigure`.;;d4,129;;b2,0;;m">
</treenode>
<treenode node="scalarizeArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f14;348;5;359;;;;vpos;;v;;r;;d4,349;;b2,0;;marray;;p">
</treenode>
<treenode node="validateConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module.php;f14;147;5;169;;;;vpos;;v;;r&#10;Definition&#10;    validateConfig()&#10;&#10;Description&#10;     Validates current config for required fields and required packages.;;d4,148;;b2,0;;m">
</treenode>
</treenode>
<treenode node="ModuleConfigException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ModuleConfigException.php;f0;3;1;14;;;;vpos;;vException;;c;;r;;d0,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ModuleConfigException.php;f11;5;5;13;;;;vpos;;v;;r;;d4,6;;b1,0;;mmodule;;pmessage;;pprevious;;p">
</treenode>
</treenode>
<treenode node="ModuleConflictException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ModuleConflictException.php;f0;3;1;22;;;;vpos;;vException;;c;;r;;d0,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ModuleConflictException.php;f11;5;5;21;;;;vpos;;v;;r;;d4,6;;b1,0;;mmodule;;pconflicted;;padditional;;p">
</treenode>
</treenode>
<treenode node="ModuleContainer;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f0;17;1;503;;;;vpos;;v;;r&#10;Definition&#10;    class ModuleContainer&#10;&#10;Description&#10;     Class ModuleContainer;;d0,18;;b0,0;;m">
<treenode node="MODULE_NAMESPACE;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f9;22;26;22;;;;vposstring;;v;;r&apos;\\Codeception\\Module\\&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f11;55;5;60;;;;vpos;;v;;r&#10;Definition&#10;    __construct(Di $di, $config)&#10;&#10;Description&#10;     Constructor.&#10;&#10;Parameters:&#10;    Di $di&#10;    array $config;;d4,56;;b1,0;;mDi $di;;parray $config;;p">
</treenode>
<treenode node="all;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f11;281;5;284;;;;vpos;;varray;;r&#10;Definition&#10;    all()&#10;&#10;Description&#10;     Get all modules.&#10;&#10;Return:&#10;   An array with module names as keys and modules as values;;d4,282;;b1,0;;m">
</treenode>
<treenode node="checkForMissingDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;328;5;344;;;;vpos;;v;;r&#10;Definition&#10;    checkForMissingDependencies($moduleName, DependsOnModule $module)&#10;&#10;Description&#10;     Check for missing dependencies.&#10;&#10;Parameters:&#10;    string $moduleName&#10;    \Codeception\Lib\Interfaces\DependsOnModule $module;;d4,329;;b3,0;;mstring $moduleName;;p\Codeception\Lib\Interfaces\DependsOnModule $module;;p">
</treenode>
<treenode node="create;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f11;73;5;105;;;;vpos;;v;;r&#10;Definition&#10;    create($moduleName, $active = true)&#10;&#10;Description&#10;     Create a module.&#10;&#10;Parameters:&#10;    string $moduleName&#10;    bool $active;;d4,74;;b1,0;;mstring $moduleName;;pbool $active;;p">
</treenode>
<treenode node="getActions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f11;271;5;274;;;;vpos;;varray;;r&#10;Definition&#10;    getActions()&#10;&#10;Description&#10;     Get all actions.&#10;&#10;Return:&#10;   An array with actions as keys and module names as values;;d4,272;;b1,0;;m">
</treenode>
<treenode node="getActionsForModule;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;129;5;150;;;;vpos;;varray;;r&#10;Definition&#10;    getActionsForModule($module, $config)&#10;&#10;Description&#10;     Get the actions of a module.&#10;&#10;Parameters:&#10;    \Codeception\Module $module&#10;    array $config;;d4,130;;b3,0;;m\Codeception\Module $module;;parray $config;;p">
</treenode>
<treenode node="getConfiguredDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;375;5;384;;;;vpos;;varray;;r&#10;Definition&#10;    getConfiguredDependencies($moduleName)&#10;&#10;Description&#10;     Get the configured dependencies for a module.&#10;&#10;Parameters:&#10;    string $moduleName;;d4,376;;b3,0;;mstring $moduleName;;p">
</treenode>
<treenode node="getErrorMessageForDependency;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;393;5;398;;;;vpos;;vstring;;r&#10;Definition&#10;    getErrorMessageForDependency($module, $missingDependency)&#10;&#10;Description&#10;     Get the error message for a module dependency that is missing.&#10;&#10;Parameters:&#10;    \Codeception\Module $module&#10;    string $missingDependency;;d4,394;;b3,0;;m\Codeception\Module $module;;pstring $missingDependency;;p">
</treenode>
<treenode node="getModule;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f11;242;5;249;;;;vpos;;v;;r&#10;Definition&#10;    getModule($moduleName)&#10;&#10;Description&#10;     Get a module from this ModuleContainer.&#10;&#10;Parameters:&#10;    string $moduleName;;d4,243;;b1,0;;mstring $moduleName;;p">
</treenode>
<treenode node="getModuleClass;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;215;5;222;;;;vpos;;vstring;;r&#10;Definition&#10;    getModuleClass($moduleName)&#10;&#10;Description&#10;     Get the fully qualified class name for a module.&#10;&#10;Parameters:&#10;    string $moduleName;;d4,216;;b3,0;;mstring $moduleName;;p">
</treenode>
<treenode node="getModuleConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;414;5;440;;;;vpos;;varray;;r&#10;Definition&#10;    getModuleConfig($moduleName)&#10;&#10;Description&#10;     Get the configuration for a module.&#10;&#10;Parameters:&#10;    string $moduleName;;d4,415;;b3,0;;mstring $moduleName;;p">
</treenode>
<treenode node="getModuleDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;353;5;367;;;;vpos;;varray;;r&#10;Definition&#10;    getModuleDependencies(DependsOnModule $module)&#10;&#10;Description&#10;     Get the dependencies of a module.&#10;&#10;Parameters:&#10;    \Codeception\Lib\Interfaces\DependsOnModule $module;;d4,354;;b3,0;;m\Codeception\Lib\Interfaces\DependsOnModule $module;;p">
</treenode>
<treenode node="hasModule;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f11;230;5;233;;;;vpos;;vbool;;r&#10;Definition&#10;    hasModule($moduleName)&#10;&#10;Description&#10;     Is a module instantiated in this ModuleContainer?&#10;&#10;Parameters:&#10;    string $moduleName;;d4,231;;b1,0;;mstring $moduleName;;p">
</treenode>
<treenode node="includeMethodAsAction;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;160;5;196;;;;vpos;;vbool;;r&#10;Definition&#10;    includeMethodAsAction($module, $method, $configuredParts = null)&#10;&#10;Description&#10;     Should a method be included as an action?&#10;&#10;Parameters:&#10;    \Codeception\Module $module&#10;    \ReflectionMethod $method&#10;    array|null $configuredParts;;d4,161;;b3,0;;m\Codeception\Module $module;;p\ReflectionMethod $method;;parray|null $configuredParts;;p">
</treenode>
<treenode node="injectModuleDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;305;5;318;;;;vpos;;v;;r&#10;Definition&#10;    injectModuleDependencies($moduleName, DependsOnModule $module)&#10;&#10;Description&#10;     Inject the dependencies of a module.&#10;&#10;Parameters:&#10;    string $moduleName&#10;    \Codeception\Lib\Interfaces\DependsOnModule $module;;d4,306;;b3,0;;mstring $moduleName;;p\Codeception\Lib\Interfaces\DependsOnModule $module;;p">
</treenode>
<treenode node="isHelper;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;204;5;207;;;;vpos;;vbool;;r&#10;Definition&#10;    isHelper($moduleName)&#10;&#10;Description&#10;     Is the module a helper?&#10;&#10;Parameters:&#10;    string $moduleName;;d4,205;;b3,0;;mstring $moduleName;;p">
</treenode>
<treenode node="mock;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f11;292;5;295;;;;vpos;;v;;r&#10;Definition&#10;    mock($moduleName, $mock)&#10;&#10;Description&#10;     Mock a module in this ModuleContainer.&#10;&#10;Parameters:&#10;    string $moduleName&#10;    object $mock;;d4,293;;b1,0;;mstring $moduleName;;pobject $mock;;p">
</treenode>
<treenode node="moduleForAction;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f11;257;5;264;;;;vpos;;v;;r&#10;Definition&#10;    moduleForAction($action)&#10;&#10;Description&#10;     Get the module for an action.&#10;&#10;Parameters:&#10;    string $action;;d4,258;;b1,0;;mstring $action;;p">
</treenode>
<treenode node="moduleHasDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;113;5;120;;;;vpos;;vbool;;r&#10;Definition&#10;    moduleHasDependencies($module)&#10;&#10;Description&#10;     Does a module have dependencies?&#10;&#10;Parameters:&#10;    \Codeception\Module $module;;d4,114;;b3,0;;m\Codeception\Module $module;;p">
</treenode>
<treenode node="normalizeConflictSpecification;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;491;5;502;;;;vpos;;vstring;;r&#10;Definition&#10;    normalizeConflictSpecification($conflicts)&#10;&#10;Description&#10;     Normalize the return value of ConflictsWithModule::_conflicts() to a class name. This is necessary because it can return a module name instead of the name of a class or interface.&#10;&#10;Parameters:&#10;    string $conflicts;;d4,492;;b3,0;;mstring $conflicts;;p">
</treenode>
<treenode node="validateConflict;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f12;472;5;482;;;;vpos;;v;;r&#10;Definition&#10;    validateConflict($module, $otherModule)&#10;&#10;Description&#10;     Check if the modules passed as arguments to this method conflict with each other.&#10;&#10;Parameters:&#10;    \Codeception\Module $module&#10;    \Codeception\Module $otherModule;;d4,473;;b3,0;;m\Codeception\Module $module;;p\Codeception\Module $otherModule;;p">
</treenode>
<treenode node="validateConflicts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ModuleContainer.php;f11;447;5;463;;;;vpos;;v;;r&#10;Definition&#10;    validateConflicts()&#10;&#10;Description&#10;     Check if there are conflicting modules in this ModuleContainer.;;d4,448;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ModuleException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ModuleException.php;f0;3;1;17;;;;vpos;;vException;;c;;r;;d0,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ModuleException.php;f11;7;5;16;;;;vpos;;v;;r;;d4,8;;b1,0;;mmodule;;pmessage;;p">
</treenode>
</treenode>
<treenode node="ModuleRequireException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ModuleRequireException.php;f0;3;1;14;;;;vpos;;vException;;c;;r;;d0,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ModuleRequireException.php;f11;5;5;13;;;;vpos;;v;;r;;d4,6;;b1,0;;mmodule;;pmessage;;p">
</treenode>
</treenode>
<treenode node="MongoDb;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f0;52;1;440;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f0;8;1;263;;;;vpos;;vCodeceptionModule;;cRequiresPackage;;c;;r&#10;Definition&#10;    class MongoDb extends CodeceptionModule implements RequiresPackage&#10;&#10;Description&#10;     Works with MongoDb database.;;d0,53;;b0,0;;m">
<treenode node="DEFAULT_PORT;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f9;10;22;10;;;;vpos;;v;;r27017;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DUMP_TYPE_JS;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f9;54;22;54;;;;vpos;;v;;r&apos;js&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DUMP_TYPE_MONGODUMP;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f9;55;29;55;;;;vpos;;v;;r&apos;mongodump&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="DUMP_TYPE_MONGODUMP_TAR_GZ;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f9;56;36;56;;;;vpos;;v;;r&apos;mongodump-tar-gz&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f11;96;5;133;;;;vpos;;v;;r&#10;Definition&#10;    __construct($dsn, $user, $password)&#10;&#10;Description&#10;     $dsn has to contain db_name after the host. E.g. &quot;mongodb://localhost:27017/mongo_test_db&quot;&#10;&#10;Parameters:&#10;     $dsn&#10;     $user&#10;     $password;;d4,97;;b1,0;;m $dsn;;p $user;;p $password;;p">
</treenode>
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;188;5;191;;;;vpos;;v;;r;;d4,189;;b1,0;;mtest;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;180;5;186;;;;vpos;;v;;r;;d4,181;;b1,0;;mtest;;p">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;90;5;109;;;;vpos;;v;;r;;d4,91;;b1,0;;m">
</treenode>
<treenode node="_requires;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;436;5;439;;;;vpos;;v;;r&#10;Definition&#10;    _requires()&#10;&#10;Description&#10;     Returns list of classes and corresponding packages required for this module;;d4,437;;b1,0;;m">
</treenode>
<treenode node="cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f14;193;5;207;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f11;149;5;152;;;;vpos;;v;;r;;d4,194;;b2,0;;m">
</treenode>
<treenode node="cleanupMongo;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f14;68;5;82;;;;vpos;;v;;r&#10;Definition&#10;    cleanupMongo()&#10;&#10;Description&#10;     Clean up the Mongo database using the legacy Mongo extension.;;d4,69;;b2,0;;m">
</treenode>
<treenode node="cleanupMongoDB;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f14;56;5;63;;;;vpos;;v;;r&#10;Definition&#10;    cleanupMongoDB()&#10;&#10;Description&#10;     Clean up the Mongo database using the MongoDB extension.;;d4,57;;b2,0;;m">
</treenode>
<treenode node="connect;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f18;22;5;25;;;;vpos;;v;;r;;d4,23;;b1,5;;mdsn;;puser;;ppassword;;p">
</treenode>
<treenode node="create;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f18;144;5;147;;;;vpos;;vMongoDb;;r&#10;Definition&#10;    create($dsn, $user, $password)&#10;&#10;Description&#10;      static&#10;&#10;Parameters:&#10;     $dsn&#10;     $user&#10;     $password;;d4,145;;b1,5;;m $dsn;;p $user;;p $password;;p">
</treenode>
<treenode node="createUserPasswordCmdString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f12;215;5;225;;;;vpos;;v;;r;;d4,216;;b3,0;;m">
</treenode>
<treenode node="dontSeeInCollection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;302;5;307;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeInCollection($collection, $criteria = [])&#10;&#10;Description&#10;     Checks if collection doesn&apos;t contain an item.&#10;&#10;Parameters:&#10;     $collection&#10;    array $criteria;;d4,303;;b1,0;;m $collection;;parray $criteria;;p">
</treenode>
<treenode node="getDbh;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f11;227;5;230;;;;vpos;;v;;r;;d4,228;;b1,0;;m">
</treenode>
<treenode node="getHostPort;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f12;247;5;257;;;;vpos;;v;;r;;d4,248;;b3,0;;m">
</treenode>
<treenode node="grabCollectionCount;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;341;5;345;;;;vpos;;vinteger;;r&#10;Definition&#10;    grabCollectionCount($collection, $criteria = [])&#10;&#10;Description&#10;     Grabs the documents count from a collection&#10;&#10;Parameters:&#10;     $collection&#10;    array $criteria;;d4,342;;b1,0;;m $collection;;parray $criteria;;p">
</treenode>
<treenode node="grabFromCollection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;321;5;325;;;;vpos;;varray;;r&#10;Definition&#10;    grabFromCollection($collection, $criteria = [])&#10;&#10;Description&#10;     Grabs a data from collection&#10;&#10;Parameters:&#10;     $collection&#10;    array $criteria;;d4,322;;b1,0;;m $collection;;parray $criteria;;p">
</treenode>
<treenode node="haveInCollection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;261;5;271;;;;vpos;;v;;r&#10;Definition&#10;    haveInCollection($collection, array $data)&#10;&#10;Description&#10;     Inserts data into collection&#10;&#10;Parameters:&#10;     $collection&#10;    array $data;;d4,262;;b1,0;;m $collection;;parray $data;;p">
</treenode>
<treenode node="isLegacy;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f11;242;5;245;;;;vpos;;vbool;;r&#10;Definition&#10;    isLegacy()&#10;&#10;Description&#10;     Determine if this driver is using the legacy extension or not.;;d4,243;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f11;160;5;169;;;;vpos;;v;;r&#10;Definition&#10;    load($dumpFile)&#10;&#10;Description&#10;     dump file has to be a javascript document where one can use all the mongo shell&apos;s commands just FYI: this file can be easily created be RockMongo&apos;s export button&#10;&#10;Parameters:&#10;     $dumpFile;;d4,161;;b1,0;;m $dumpFile;;p">
</treenode>
<treenode node="loadDump;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f14;209;5;232;;;;vpos;;v;;r;;d4,210;;b2,0;;m">
</treenode>
<treenode node="loadFromMongoDump;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f11;171;5;184;;;;vpos;;v;;r;;d4,172;;b1,0;;mdumpFile;;p">
</treenode>
<treenode node="loadFromTarGzMongoDump;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f11;186;5;213;;;;vpos;;v;;r;;d4,187;;b1,0;;mdumpFile;;p">
</treenode>
<treenode node="seeElementIsArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;359;5;378;;;;vpos;;v;;r&#10;Definition&#10;    seeElementIsArray($collection, $criteria = [], $elementToCheck = null)&#10;&#10;Description&#10;     Asserts that an element in a collection exists and is an Array&#10;&#10;Parameters:&#10;    String $collection&#10;    Array $criteria&#10;    String $elementToCheck;;d4,360;;b1,0;;mString $collection;;pArray $criteria;;pString $elementToCheck;;p">
</treenode>
<treenode node="seeElementIsObject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;392;5;411;;;;vpos;;v;;r&#10;Definition&#10;    seeElementIsObject($collection, $criteria = [], $elementToCheck = null)&#10;&#10;Description&#10;     Asserts that an element in a collection exists and is an Object&#10;&#10;Parameters:&#10;    String $collection&#10;    Array $criteria&#10;    String $elementToCheck;;d4,393;;b1,0;;mString $collection;;pArray $criteria;;pString $elementToCheck;;p">
</treenode>
<treenode node="seeInCollection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;284;5;289;;;;vpos;;v;;r&#10;Definition&#10;    seeInCollection($collection, $criteria = [])&#10;&#10;Description&#10;     Checks if collection contains an item.&#10;&#10;Parameters:&#10;     $collection&#10;    array $criteria;;d4,285;;b1,0;;m $collection;;parray $criteria;;p">
</treenode>
<treenode node="seeNumElementsInCollection;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;426;5;431;;;;vpos;;v;;r&#10;Definition&#10;    seeNumElementsInCollection($collection, $expected, $criteria = [])&#10;&#10;Description&#10;     Count number of records in a collection&#10;&#10;Parameters:&#10;     $collection&#10;    integer $expected&#10;    array $criteria;;d4,427;;b1,0;;m $collection;;pinteger $expected;;parray $criteria;;p">
</treenode>
<treenode node="setDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f11;232;5;235;;;;vpos;;v;;r;;d4,233;;b1,0;;mdbName;;p">
</treenode>
<treenode node="setQuiet;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f11;259;5;262;;;;vpos;;v;;r;;d4,260;;b1,0;;mquiet;;p">
</treenode>
<treenode node="setupMongo;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f14;43;5;51;;;;vpos;;v;;r&#10;Definition&#10;    setupMongo($dsn, $options)&#10;&#10;Description&#10;     Connect to the Mongo server using the legacy mongo extension.;;d4,44;;b2,0;;mdsn;;poptions;;p">
</treenode>
<treenode node="setupMongoDB;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MongoDb.php;f14;30;5;38;;;;vpos;;v;;r&#10;Definition&#10;    setupMongoDB($dsn, $options)&#10;&#10;Description&#10;     Connect to the Mongo server using the MongoDB extension.;;d4,31;;b2,0;;mdsn;;poptions;;p">
</treenode>
<treenode node="useDatabase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f11;244;5;247;;;;vpos;;v;;r&#10;Definition&#10;    useDatabase($dbName)&#10;&#10;Description&#10;     Specify the database to use&#10;&#10;Parameters:&#10;     $dbName;;d4,245;;b1,0;;m $dbName;;p">
</treenode>
<treenode node="validateDump;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\MongoDb.php;f12;111;5;178;;;;vpos;;v;;r;;d4,112;;b3,0;;m">
</treenode>
</treenode>
<treenode node="MySql;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MySql.php;f0;3;1;49;;;;vpos;;vDb;;c;;r;;d0,4;;b0,0;;m">
<treenode node="cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MySql.php;f11;5;5;13;;;;vpos;;v;;r;;d4,6;;b1,0;;m">
</treenode>
<treenode node="getPrimaryKey;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MySql.php;f11;32;5;48;;;;vpos;;varray;;r&#10;Definition&#10;    getPrimaryKey($tableName)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $tableName&#10;&#10;Return:&#10;   [string];;d4,33;;b1,0;;mstring $tableName;;p">
</treenode>
<treenode node="getQuotedName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MySql.php;f11;22;5;25;;;;vpos;;v;;r;;d4,23;;b1,0;;mname;;p">
</treenode>
<treenode node="sqlQuery;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\MySql.php;f14;15;5;20;;;;vpos;;v;;r;;d4,16;;b2,0;;mquery;;p">
</treenode>
</treenode>
<treenode node="NameFilter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\NameFilter.php;f0;20;1;67;;;;vpos;;vSimpleFilter;;c;;r&#10;Definition&#10;    class NameFilter extends SimpleFilter&#10;&#10;Description&#10;     Filters scenarios by feature/scenario name.;;d0,21;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\NameFilter.php;f11;29;5;32;;;;vpos;;v;;r&#10;Definition&#10;    __construct($filterString)&#10;&#10;Description&#10;     Initializes filter.&#10;&#10;Parameters:&#10;    string $filterString - Name filter string;;d4,30;;b1,0;;mstring $filterString;;p">
</treenode>
<treenode node="isFeatureMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\NameFilter.php;f11;41;5;48;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isFeatureMatch(FeatureNode $feature)&#10;&#10;Description&#10;     Checks if Feature matches specified filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature - Feature instance;;d4,42;;b1,0;;mFeatureNode $feature;;p">
</treenode>
<treenode node="isScenarioMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\NameFilter.php;f11;57;5;66;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isScenarioMatch(ScenarioInterface $scenario)&#10;&#10;Description&#10;     Checks if scenario or outline matches specified filter.&#10;&#10;Parameters:&#10;    ScenarioInterface $scenario - Scenario or Outline node instance;;d4,58;;b1,0;;mScenarioInterface $scenario;;p">
</treenode>
</treenode>
<treenode node="NameFilterTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\NameFilterTest.php;f0;8;1;78;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,9;;b0,0;;m">
<treenode node="testFilterFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\NameFilterTest.php;f11;10;5;25;;;;vpos;;v;;r;;d4,11;;b1,0;;m">
</treenode>
<treenode node="testIsFeatureMatchFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\NameFilterTest.php;f11;27;5;54;;;;vpos;;v;;r;;d4,28;;b1,0;;m">
</treenode>
<treenode node="testIsScenarioMatchFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\NameFilterTest.php;f11;56;5;77;;;;vpos;;v;;r;;d4,57;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Namespaces;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Namespaces.php;f0;3;1;46;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="breakParts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Namespaces.php;f14;5;5;16;;;;vpos;;v;;r;;d4,6;;b2,0;;mclass;;p">
</treenode>
<treenode node="getNamespaceHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Namespaces.php;f14;30;5;37;;;;vpos;;v;;r;;d4,31;;b2,0;;mclass;;p">
</treenode>
<treenode node="getNamespaces;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Namespaces.php;f14;39;5;45;;;;vpos;;v;;r;;d4,40;;b2,0;;mclass;;p">
</treenode>
<treenode node="getNamespaceString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Namespaces.php;f14;24;5;28;;;;vpos;;v;;r;;d4,25;;b2,0;;mclass;;p">
</treenode>
<treenode node="getShortClassName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Shared\Namespaces.php;f14;18;5;22;;;;vpos;;v;;r;;d4,19;;b2,0;;mclass;;p">
</treenode>
</treenode>
<treenode node="NarrativeFilter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\NarrativeFilter.php;f0;20;1;60;;;;vpos;;vSimpleFilter;;c;;r&#10;Definition&#10;    class NarrativeFilter extends SimpleFilter&#10;&#10;Description&#10;     Filters features by their narrative using regular expression.;;d0,21;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\NarrativeFilter.php;f11;32;5;35;;;;vpos;;v;;r&#10;Definition&#10;    __construct($regex)&#10;&#10;Description&#10;     Initializes filter.&#10;&#10;Parameters:&#10;    string $regex;;d4,33;;b1,0;;mstring $regex;;p">
</treenode>
<treenode node="isFeatureMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\NarrativeFilter.php;f11;44;5;47;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isFeatureMatch(FeatureNode $feature)&#10;&#10;Description&#10;     Checks if Feature matches specified filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature - Feature instance;;d4,45;;b1,0;;mFeatureNode $feature;;p">
</treenode>
<treenode node="isScenarioMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\NarrativeFilter.php;f11;56;5;59;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isScenarioMatch(ScenarioInterface $scenario)&#10;&#10;Description&#10;     Checks if scenario or outline matches specified filter.&#10;&#10;Parameters:&#10;    ScenarioInterface $scenario - Scenario or Outline node instance;;d4,57;;b1,0;;mScenarioInterface $scenario;;p">
</treenode>
</treenode>
<treenode node="NarrativeFilterTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\NarrativeFilterTest.php;f0;7;1;33;;;;vpos;;vFilterTest;;c;;r;;d0,8;;b0,0;;m">
<treenode node="testIsFeatureMatchFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\NarrativeFilterTest.php;f11;9;5;32;;;;vpos;;v;;r;;d4,10;;b1,0;;m">
</treenode>
</treenode>
<treenode node="NodeException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Exception\NodeException.php;f0;14;1;16;;;;vpos;;vRuntimeException;;cException;;c;;r;;d0,15;;b0,0;;m">
</treenode>
<treenode node="NoSuchElementException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;55;99;55;;;;vpos;;vNoSuchElementException;;c;;r;;d97,55;;b0,0;;m">
</treenode>
<treenode node="Notification;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Notification.php;f0;3;1;31;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="all;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Notification.php;f18;25;5;30;;;;vpos;;v;;r;;d4,26;;b1,5;;m">
</treenode>
<treenode node="deprecate;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Notification.php;f18;12;5;15;;;;vpos;;v;;r;;d4,13;;b1,5;;mmessage;;plocation;;p">
</treenode>
<treenode node="formatMessage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Notification.php;f19;17;5;23;;;;vpos;;v;;r;;d4,18;;b3,5;;mmessage;;plocation;;p">
</treenode>
<treenode node="warning;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Notification.php;f18;7;5;10;;;;vpos;;v;;r;;d4,8;;b1,5;;mmessage;;plocation;;p">
</treenode>
</treenode>
<treenode node="Oci;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Oci.php;f0;3;1;108;;;;vpos;;vDb;;c;;r;;d0,4;;b0,0;;m">
<treenode node="cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Oci.php;f11;6;5;40;;;;vpos;;v;;r;;d4,7;;b1,0;;m">
</treenode>
<treenode node="getPrimaryKey;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Oci.php;f11;86;5;107;;;;vpos;;varray;;r&#10;Definition&#10;    getPrimaryKey($tableName)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $tableName&#10;&#10;Return:&#10;   [string];;d4,87;;b1,0;;mstring $tableName;;p">
</treenode>
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Oci.php;f11;50;5;79;;;;vpos;;v;;r&#10;Definition&#10;    load($sql)&#10;&#10;Description&#10;     SQL commands should ends with `//` in the dump file IF you want to load triggers too. IF you do not want to load triggers you can use the `;s` characters but in this case you need to change the $delimiter from `//` to `;s`&#10;&#10;Parameters:&#10;     $sql;;d4,51;;b1,0;;m $sql;;p">
</treenode>
</treenode>
<treenode node="OrderCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\OrderCest.php;f0;2;1;116;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
<treenode node="checkAfterBeforeClassInTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\OrderCest.php;f11;93;5;99;;;;vpos;;v;;r;;d4,94;;b1,0;;mI;;p">
</treenode>
<treenode node="checkAfterBeforeClassInTestWithDataProvider;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\OrderCest.php;f11;101;5;107;;;;vpos;;v;;r;;d4,102;;b1,0;;mI;;p">
</treenode>
<treenode node="checkBootstrapIsLoadedBeforeTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\OrderCest.php;f11;109;5;115;;;;vpos;;v;;r;;d4,110;;b1,0;;mI;;p">
</treenode>
<treenode node="checkCestOrder;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\OrderCest.php;f11;54;5;60;;;;vpos;;v;;r;;d4,55;;b1,0;;mI;;p">
</treenode>
<treenode node="checkCodeceptionTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\OrderCest.php;f11;70;5;91;;;;vpos;;v;;r;;d4,71;;b1,0;;mI;;p">
</treenode>
<treenode node="checkFailingCestOrder;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\OrderCest.php;f11;62;5;68;;;;vpos;;v;;r;;d4,63;;b1,0;;mI;;p">
</treenode>
<treenode node="checkForCanCantFails;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\OrderCest.php;f11;22;5;32;;;;vpos;;v;;r;;d4,23;;b1,0;;mI;;p">
</treenode>
<treenode node="checkForCanCantFailsInCest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\OrderCest.php;f11;34;5;44;;;;vpos;;v;;r;;d4,35;;b1,0;;mI;;p">
</treenode>
<treenode node="checkForFails;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\OrderCest.php;f11;13;5;20;;;;vpos;;v;;r;;d4,14;;b1,0;;mI;;p">
</treenode>
<treenode node="checkOneFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\OrderCest.php;f11;4;5;11;;;;vpos;;v;;r;;d4,5;;b1,0;;mI;;p">
</treenode>
<treenode node="checkSimpleFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\OrderCest.php;f11;46;5;52;;;;vpos;;v;;r;;d4,47;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="OutlineNode;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f0;17;1;217;;;;vpos;;vScenarioInterface;;c;;r&#10;Definition&#10;    class OutlineNode implements ScenarioInterface&#10;&#10;Description&#10;     Represents Gherkin Outline.;;d0,18;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;58;5;72;;;;vpos;;v;;r&#10;Definition&#10;    __construct(&#10;        $title,&#10;        array $tags,&#10;        array $steps,&#10;        ExampleTableNode $table,&#10;        $keyword,&#10;        $line&#10;    )&#10;&#10;Description&#10;     Initializes outline.&#10;&#10;Parameters:&#10;    null|string $title&#10;    string[] $tags&#10;    StepNode[] $steps&#10;    ExampleTableNode $table&#10;    string $keyword&#10;    integer $line;;d6,65;;b1,0;;mnull|string $title;;pstring[] $tags;;pStepNode[] $steps;;pExampleTableNode $table;;pstring $keyword;;pinteger $line;;p">
</treenode>
<treenode node="createExamples;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f14;201;5;216;;;;vpos;;vExampleNode;;r&#10;Definition&#10;    createExamples()&#10;&#10;Description&#10;     Creates examples for this outline using examples table.&#10;&#10;Return:&#10;   [];;d4,202;;b2,0;;m">
</treenode>
<treenode node="getExamples;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;171;5;174;;;;vpos;;vExampleNode;;r&#10;Definition&#10;    getExamples()&#10;&#10;Description&#10;     Returns list of examples for the outline.&#10;&#10;Return:&#10;   [];;d4,172;;b1,0;;m">
</treenode>
<treenode node="getExampleTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;161;5;164;;;;vpos;;vExampleTableNode;;r&#10;Definition&#10;    getExampleTable()&#10;&#10;Description&#10;     Returns examples table.;;d4,162;;b1,0;;m">
</treenode>
<treenode node="getKeyword;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;181;5;184;;;;vpos;;vstring;;r&#10;Definition&#10;    getKeyword()&#10;&#10;Description&#10;     Returns outline keyword.;;d4,182;;b1,0;;m">
</treenode>
<treenode node="getLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;191;5;194;;;;vpos;;vinteger;;r&#10;Definition&#10;    getLine()&#10;&#10;Description&#10;     Returns outline declaration line number.;;d4,192;;b1,0;;m">
</treenode>
<treenode node="getNodeType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;79;5;82;;;;vpos;;vstring;;r&#10;Definition&#10;    getNodeType()&#10;&#10;Description&#10;     Returns node type string;;d4,80;;b1,0;;m">
</treenode>
<treenode node="getSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;141;5;144;;;;vpos;;vStepNode;;r&#10;Definition&#10;    getSteps()&#10;&#10;Description&#10;     Returns outline steps.&#10;&#10;Return:&#10;   [];;d4,142;;b1,0;;m">
</treenode>
<treenode node="getTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;121;5;124;;;;vpos;;vstring;;r&#10;Definition&#10;    getTags()&#10;&#10;Description&#10;     Returns outline tags (including inherited from feature).&#10;&#10;Return:&#10;   [];;d4,122;;b1,0;;m">
</treenode>
<treenode node="getTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;89;5;92;;;;vpos;;vnull;;r&#10;Definition&#10;    getTitle()&#10;&#10;Description&#10;     Returns outline title.&#10;&#10;Return:&#10;   |string;;d4,90;;b1,0;;m">
</treenode>
<treenode node="hasExamples;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;151;5;154;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasExamples()&#10;&#10;Description&#10;     Checks if outline has examples.;;d4,152;;b1,0;;m">
</treenode>
<treenode node="hasSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;131;5;134;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasSteps()&#10;&#10;Description&#10;     Checks if outline has steps.;;d4,132;;b1,0;;m">
</treenode>
<treenode node="hasTag;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;101;5;104;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasTag($tag)&#10;&#10;Description&#10;     Checks if outline is tagged with tag.&#10;&#10;Parameters:&#10;    string $tag;;d4,102;;b1,0;;mstring $tag;;p">
</treenode>
<treenode node="hasTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\OutlineNode.php;f11;111;5;114;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasTags()&#10;&#10;Description&#10;     Checks if outline has tags (both inherited from feature and own).;;d4,112;;b1,0;;m">
</treenode>
</treenode>
<treenode node="OutlineNodeTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\OutlineNodeTest.php;f0;8;1;67;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,9;;b0,0;;m">
<treenode node="testCreatesEmptyExamplesForEmptyExampleTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\OutlineNodeTest.php;f11;34;5;50;;;;vpos;;v;;r;;d4,35;;b1,0;;m">
</treenode>
<treenode node="testCreatesEmptyExamplesForNoExampleTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\OutlineNodeTest.php;f11;52;5;66;;;;vpos;;v;;r;;d4,53;;b1,0;;m">
</treenode>
<treenode node="testCreatesExamplesForExampleTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\OutlineNodeTest.php;f11;10;5;32;;;;vpos;;v;;r;;d4,11;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Output;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Output.php;f0;8;1;99;;;;vpos;;vConsoleOutput;;c;;r;;d0,9;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Output.php;f11;25;5;51;;;;vpos;;v;;r;;d4,26;;b1,0;;mconfig;;p">
</treenode>
<treenode node="clean;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Output.php;f14;58;5;63;;;;vpos;;v;;r;;d4,59;;b2,0;;mmessage;;p">
</treenode>
<treenode node="debug;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Output.php;f11;65;5;77;;;;vpos;;v;;r;;d4,66;;b1,0;;mmessage;;p">
</treenode>
<treenode node="exception;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Output.php;f11;85;5;93;;;;vpos;;v;;r;;d4,86;;b1,0;;me;;p">
</treenode>
<treenode node="isInteractive;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Output.php;f11;53;5;56;;;;vpos;;v;;r;;d4,54;;b1,0;;m">
</treenode>
<treenode node="message;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Output.php;f11;79;5;83;;;;vpos;;v;;r;;d4,80;;b1,0;;mmessage;;p">
</treenode>
<treenode node="notification;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Console\Output.php;f11;95;5;98;;;;vpos;;v;;r;;d4,96;;b1,0;;mmessage;;p">
</treenode>
</treenode>
<treenode node="PageObject;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\PageObject.php;f0;6;1;93;;;;vpos;;vNamespaces;;cClassname;;c;;r;;d0,7;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\PageObject.php;f11;59;5;64;;;;vpos;;v;;r;;d4,60;;b1,0;;msettings;;pname;;p">
</treenode>
<treenode node="produce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\PageObject.php;f11;66;5;73;;;;vpos;;v;;r;;d4,67;;b1,0;;m">
</treenode>
<treenode node="produceActions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\PageObject.php;f14;75;5;92;;;;vpos;;v;;r;;d4,76;;b2,0;;m">
</treenode>
</treenode>
<treenode node="ParamsLoader;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ParamsLoader.php;f0;6;1;98;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ParamsLoader.php;f11;11;5;50;;;;vpos;;v;;r;;d4,12;;b1,0;;mparamStorage;;p">
</treenode>
<treenode node="loadArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ParamsLoader.php;f11;52;5;55;;;;vpos;;v;;r;;d4,53;;b1,0;;m">
</treenode>
<treenode node="loadDotEnvFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ParamsLoader.php;f14;76;5;92;;;;vpos;;v;;r;;d4,77;;b2,0;;m">
</treenode>
<treenode node="loadEnvironmentVars;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ParamsLoader.php;f14;94;5;97;;;;vpos;;v;;r;;d4,95;;b2,0;;m">
</treenode>
<treenode node="loadIniFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ParamsLoader.php;f14;57;5;60;;;;vpos;;v;;r;;d4,58;;b2,0;;m">
</treenode>
<treenode node="loadPhpFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ParamsLoader.php;f14;62;5;65;;;;vpos;;v;;r;;d4,63;;b2,0;;m">
</treenode>
<treenode node="loadYamlFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\ParamsLoader.php;f14;67;5;74;;;;vpos;;v;;r;;d4,68;;b2,0;;m">
</treenode>
</treenode>
<treenode node="ParseError;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\autoload.php;f8;31;46;31;;;;vpos;;vException;;c;;r;;d44,31;;b0,0;;m">
</treenode>
<treenode node="ParseException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\ParseException.php;f0;3;1;5;;;;vpos;;vException;;c;;r;;d0,4;;b0,0;;m">
</treenode>
<treenode node="Parser;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f0;9;1;211;;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f9;15;1;388;;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f0;33;1;698;;;;vpos;;v;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f11;21;5;25;;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f11;46;5;49;;;;vpos;;v;;r;;d4,22;;b1,0;;mscenario;;pmetadata;;p">
</treenode>
<treenode node="acceptTokenType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;153;5;160;;;;vpos;;vnull;;r&#10;Definition&#10;    acceptTokenType($type)&#10;&#10;Description&#10;     Returns next token if it&apos;s type equals to expected.&#10;&#10;Parameters:&#10;    string $type - Token type&#10;&#10;Return:&#10;   |array;;d4,154;;b2,0;;mstring $type;;p">
</treenode>
<treenode node="addCommentStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f14;98;5;101;;;;vpos;;v;;r;;d4,99;;b2,0;;mcomment;;p">
</treenode>
<treenode node="addStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f14;89;5;96;;;;vpos;;v;;r;;d4,90;;b2,0;;mmatches;;p">
</treenode>
<treenode node="blockTypes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;115;2;128;;;;vpos;;varray;;r&#10;Definition&#10;    blockTypes()&#10;&#10;Description&#10;      a list of block element types available.&#10;&#10;Return:&#10;   a list of block element types available;;d1,116;;b2,0;;m">
</treenode>
<treenode node="cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;103;2;105;;;;vpos;;v;;r&#10;Definition&#10;    cleanup()&#10;&#10;Description&#10;     This method will be called after `parse()` and `parseParagraph()`. You can override it to do cleanup.;;d1,104;;b2,0;;m">
</treenode>
<treenode node="consumeParagraph;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;215;2;231;;;;vpos;;varray;;r&#10;Definition&#10;    consumeParagraph($lines, $current)&#10;&#10;Description&#10;     Consume lines for a paragraph&#10;&#10;Parameters:&#10;     $lines&#10;     $current;;d1,216;;b2,0;;m $lines;;p $current;;p">
</treenode>
<treenode node="detectLineType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;137;2;148;;;;vpos;;vstring;;r&#10;Definition&#10;    detectLineType($lines, $current)&#10;&#10;Description&#10;     Given a set of lines and an index of a current line it uses the registed block types to detect the type of this line.&#10;&#10;Parameters:&#10;    array $lines&#10;    integer $current&#10;&#10;Return:&#10;   name of the block type in lower case;;d1,138;;b2,0;;marray $lines;;pinteger $current;;p">
</treenode>
<treenode node="expectTokenType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;128;5;144;;;;vpos;;varray;;r&#10;Definition&#10;    expectTokenType($type)&#10;&#10;Description&#10;     Returns next token if it&apos;s type equals to expected.&#10;&#10;Parameters:&#10;    string $type - Token type;;d4,129;;b2,0;;mstring $type;;p">
</treenode>
<treenode node="getClassesFromFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f18;133;5;174;;;;vpos;;v;;r;;d4,134;;b1,5;;mfile;;p">
</treenode>
<treenode node="includeFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f19;179;5;182;;;;vpos;;v;;r;;d4,180;;b3,5;;mfile;;p">
</treenode>
<treenode node="inlineMarkers;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;269;2;284;;;;vpos;;varray;;r&#10;Definition&#10;    inlineMarkers()&#10;&#10;Description&#10;     Returns a map of inline markers to the corresponding parser methods.&#10;&#10;Return:&#10;   a map of markers to parser methods;;d1,270;;b2,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f18;119;5;131;;;;vpos;;v;;r;;d4,120;;b1,5;;mfile;;p">
</treenode>
<treenode node="matchComments;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f14;195;5;210;;;;vpos;;v;;r;;d4,196;;b2,0;;mcode;;p">
</treenode>
<treenode node="normalizeStepNodeKeywordType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f12;679;5;697;;;;vpos;;vStepNode;;r&#10;Definition&#10;    normalizeStepNodeKeywordType(StepNode $node, array $steps = array())&#10;&#10;Description&#10;     Changes step node type for types But, And to type of previous step if it exists else sets to Given&#10;&#10;Parameters:&#10;    StepNode $node&#10;    StepNode[] $steps;;d4,680;;b3,0;;mStepNode $node;;pStepNode[] $steps;;p">
</treenode>
<treenode node="parse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f8;47;2;64;;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f11;61;5;117;;;;vpos;;vstring;;r&#10;Definition&#10;    parse($text)&#10;&#10;Description&#10;     Parses the given text considering the full language.&#10;&#10;Parameters:&#10;    string $text - the text to parse&#10;&#10;Return:&#10;   parsed markup;;d1,48;;b1,0;;mstring $text;;p">
</treenode>
<treenode node="parseBackground;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;297;5;353;;;;vpos;;vBackgroundNode;;r&#10;Definition&#10;    parseBackground()&#10;&#10;Description&#10;     Parses background token &amp; returns it&apos;s node.;;d4,298;;b2,0;;m">
</treenode>
<treenode node="parseBlock;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;188;2;195;;;;vpos;;varray;;r&#10;Definition&#10;    parseBlock($lines, $current)&#10;&#10;Description&#10;     Parses the block at current line by identifying the block type and parsing the content&#10;&#10;Parameters:&#10;     $lines&#10;     $current&#10;&#10;Return:&#10;   Array of two elements, the first element contains the block,;;d1,189;;b2,0;;m $lines;;p $current;;p">
</treenode>
<treenode node="parseBlocks;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;154;2;179;;;;vpos;;v;;r&#10;Definition&#10;    parseBlocks($lines)&#10;&#10;Description&#10;     Parse block elements by calling `detectLineType()` to identify them and call consume function afterwards.;;d1,155;;b2,0;;mlines;;p">
</treenode>
<treenode node="parseComment;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;617;5;622;;;;vpos;;vBackgroundNode;;r&#10;Definition&#10;    parseComment()&#10;&#10;Description&#10;     Parses next comment token &amp; returns it&apos;s string content.&#10;&#10;Return:&#10;   |FeatureNode|OutlineNode|ScenarioNode|StepNode|TableNode|string;;d4,618;;b2,0;;m">
</treenode>
<treenode node="parseEscape;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;371;2;377;;;;vpos;;v;;r&#10;Definition&#10;    parseEscape($text)&#10;&#10;Description&#10;     Parses escaped special characters.;;d1,372;;b2,0;;mtext;;p">
</treenode>
<treenode node="parseExamples;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;520;5;527;;;;vpos;;vExampleTableNode;;r&#10;Definition&#10;    parseExamples()&#10;&#10;Description&#10;     Parses examples table node.;;d4,521;;b2,0;;m">
</treenode>
<treenode node="parseExpression;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;181;5;215;;;;vpos;;vstring;;r&#10;Definition&#10;    parseExpression()&#10;&#10;Description&#10;     Parses current expression &amp; returns Node.&#10;&#10;Return:&#10;   |FeatureNode|BackgroundNode|ScenarioNode|OutlineNode|TableNode|StepNode;;d4,182;;b2,0;;m">
</treenode>
<treenode node="parseFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f11;33;5;47;;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;224;5;288;;;;vpos;;v;;r;;d4,34;;b1,0;;mcode;;p">
</treenode>
<treenode node="parseInline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;318;2;365;;;;vpos;;varray;;r&#10;Definition&#10;    parseInline($text)&#10;&#10;Description&#10;     Parses inline elements of the language.&#10;&#10;Parameters:&#10;    string $text - the inline text to parse;;d1,319;;b2,0;;mstring $text;;p">
</treenode>
<treenode node="parseLanguage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;631;5;648;;;;vpos;;vBackgroundNode;;r&#10;Definition&#10;    parseLanguage()&#10;&#10;Description&#10;     Parses language block and updates lexer configuration based on it.&#10;&#10;Return:&#10;   |FeatureNode|OutlineNode|ScenarioNode|StepNode|TableNode|string;;d4,632;;b2,0;;m">
</treenode>
<treenode node="parseNewline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;605;5;610;;;;vpos;;vstring;;r&#10;Definition&#10;    parseNewline()&#10;&#10;Description&#10;     Parses next newline &amp; returns \n.;;d4,606;;b2,0;;m">
</treenode>
<treenode node="parseOutline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;419;5;482;;;;vpos;;vOutlineNode;;r&#10;Definition&#10;    parseOutline()&#10;&#10;Description&#10;     Parses scenario outline token &amp; returns it&apos;s node.;;d4,420;;b2,0;;m">
</treenode>
<treenode node="parseParagraph;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f8;72;2;89;;;;vpos;;vstring;;r&#10;Definition&#10;    parseParagraph($text)&#10;&#10;Description&#10;     Parses a paragraph without block elements (block elements are ignored).&#10;&#10;Parameters:&#10;    string $text - the text to parse&#10;&#10;Return:&#10;   parsed markup;;d1,73;;b1,0;;mstring $text;;p">
</treenode>
<treenode node="parsePyString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;544;5;560;;;;vpos;;vPyStringNode;;r&#10;Definition&#10;    parsePyString()&#10;&#10;Description&#10;     Parses PyString token &amp; returns it&apos;s node.;;d4,545;;b2,0;;m">
</treenode>
<treenode node="parseScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;362;5;410;;;;vpos;;vScenarioNode;;r&#10;Definition&#10;    parseScenario()&#10;&#10;Description&#10;     Parses scenario token &amp; returns it&apos;s node.;;d4,363;;b2,0;;m">
</treenode>
<treenode node="parseScenarioOptions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f11;49;5;52;;;;vpos;;v;;r;;d4,50;;b1,0;;mcode;;p">
</treenode>
<treenode node="parseStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;489;5;513;;;;vpos;;vStepNode;;r&#10;Definition&#10;    parseStep()&#10;&#10;Description&#10;     Parses step token &amp; returns it&apos;s node.;;d4,490;;b2,0;;m">
</treenode>
<treenode node="parseSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f11;54;5;87;;;;vpos;;v;;r;;d4,55;;b1,0;;mcode;;p">
</treenode>
<treenode node="parseTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;534;5;537;;;;vpos;;vTableNode;;r&#10;Definition&#10;    parseTable()&#10;&#10;Description&#10;     Parses table token &amp; returns it&apos;s node.;;d4,535;;b2,0;;m">
</treenode>
<treenode node="parseTableRows;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f12;655;5;670;;;;vpos;;vstring;;r&#10;Definition&#10;    parseTableRows()&#10;&#10;Description&#10;     Parses the rows of a table&#10;&#10;Return:&#10;   [][];;d4,656;;b3,0;;m">
</treenode>
<treenode node="parseTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;567;5;573;;;;vpos;;vBackgroundNode;;r&#10;Definition&#10;    parseTags()&#10;&#10;Description&#10;     Parses tags.&#10;&#10;Return:&#10;   |FeatureNode|OutlineNode|ScenarioNode|StepNode|TableNode|string;;d4,568;;b2,0;;m">
</treenode>
<treenode node="parseText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;593;5;598;;;;vpos;;vstring;;r&#10;Definition&#10;    parseText()&#10;&#10;Description&#10;     Parses next text line &amp; returns it.;;d4,594;;b2,0;;m">
</treenode>
<treenode node="popTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;580;5;586;;;;vpos;;varray;;r&#10;Definition&#10;    popTags()&#10;&#10;Description&#10;     Returns current set of tags and clears tag buffer.;;d4,581;;b2,0;;m">
</treenode>
<treenode node="predictTokenType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Parser.php;f14;167;5;172;;;;vpos;;vstring;;r&#10;Definition&#10;    predictTokenType()&#10;&#10;Description&#10;     Returns next token type without real input reading (prediction).;;d4,168;;b2,0;;m">
</treenode>
<treenode node="prepare;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;95;2;97;;;;vpos;;v;;r&#10;Definition&#10;    prepare()&#10;&#10;Description&#10;     This method will be called before `parse()` and `parseParagraph()`. You can override it to do some initialization work.;;d1,96;;b2,0;;m">
</treenode>
<treenode node="prepareMarkers;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;293;2;310;;;;vpos;;v;;r&#10;Definition&#10;    prepareMarkers($text)&#10;&#10;Description&#10;     Prepare markers that are used in the text to parse&#10;&#10;Parameters:&#10;    string $text;;d1,294;;b2,0;;mstring $text;;p">
</treenode>
<treenode node="prepareToRun;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f11;27;5;31;;;;vpos;;v;;r;;d4,28;;b1,0;;mcode;;p">
</treenode>
<treenode node="renderAbsy;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;197;2;206;;;;vpos;;v;;r;;d1,198;;b2,0;;mblocks;;p">
</treenode>
<treenode node="renderParagraph;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;239;2;242;;;;vpos;;vstring;;r&#10;Definition&#10;    renderParagraph($block)&#10;&#10;Description&#10;     Render a paragraph block&#10;&#10;Parameters:&#10;     $block;;d1,240;;b2,0;;m $block;;p">
</treenode>
<treenode node="renderText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\Parser.php;f11;384;2;387;;;;vpos;;v;;r&#10;Definition&#10;    renderText($block)&#10;&#10;Description&#10;     This function renders plain text sections in the markdown text. It can be used to work on normal text sections for example to highlight keywords or do special escaping.;;d1,385;;b2,0;;mblock;;p">
</treenode>
<treenode node="stripComments;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f14;188;5;193;;;;vpos;;vmixed;;r&#10;Definition&#10;    stripComments($code)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $code;;d4,189;;b2,0;;m $code;;p">
</treenode>
<treenode node="validate;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Parser.php;f18;103;5;117;;;;vpos;;v;;r;;d4,104;;b1,5;;mfile;;p">
</treenode>
</treenode>
<treenode node="ParserException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Exception\ParserException.php;f0;14;1;16;;;;vpos;;vRuntimeException;;cException;;c;;r;;d0,15;;b0,0;;m">
</treenode>
<treenode node="ParserExceptionsTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f0;8;1;290;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,9;;b0,0;;m">
<treenode node="setUp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f14;15;5;44;;;;vpos;;v;;r;;d4,16;;b2,0;;m">
</treenode>
<treenode node="testAmbigiousLanguage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f11;146;5;159;;;;vpos;;v;;r&#10;Definition&#10;    testAmbigiousLanguage()&#10;&#10;Description&#10;      expectedException \Behat\Gherkin\Exception\ParserException;;d4,147;;b1,0;;m">
</treenode>
<treenode node="testBackgroundWithTag;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f11;195;5;206;;;;vpos;;v;;r&#10;Definition&#10;    testBackgroundWithTag()&#10;&#10;Description&#10;      expectedException \Behat\Gherkin\Exception\ParserException;;d4,196;;b1,0;;m">
</treenode>
<treenode node="testEmptyOutline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f11;164;5;173;;;;vpos;;v;;r&#10;Definition&#10;    testEmptyOutline()&#10;&#10;Description&#10;      expectedException \Behat\Gherkin\Exception\ParserException;;d4,165;;b1,0;;m">
</treenode>
<treenode node="testEndlessPyString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f11;211;5;223;;;;vpos;;v;;r&#10;Definition&#10;    testEndlessPyString()&#10;&#10;Description&#10;      expectedException \Behat\Gherkin\Exception\ParserException;;d4,212;;b1,0;;m">
</treenode>
<treenode node="testMultipleBackgrounds;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f11;245;5;258;;;;vpos;;v;;r&#10;Definition&#10;    testMultipleBackgrounds()&#10;&#10;Description&#10;      expectedException \Behat\Gherkin\Exception\ParserException;;d4,246;;b1,0;;m">
</treenode>
<treenode node="testMultipleFeatures;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f11;263;5;272;;;;vpos;;v;;r&#10;Definition&#10;    testMultipleFeatures()&#10;&#10;Description&#10;      expectedException \Behat\Gherkin\Exception\ParserException;;d4,264;;b1,0;;m">
</treenode>
<treenode node="testStepRightAfterFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f11;46;5;57;;;;vpos;;v;;r;;d4,47;;b1,0;;m">
</treenode>
<treenode node="testTableWithoutRightBorder;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f11;277;5;289;;;;vpos;;v;;r&#10;Definition&#10;    testTableWithoutRightBorder()&#10;&#10;Description&#10;      expectedException \Behat\Gherkin\Exception\ParserException;;d4,278;;b1,0;;m">
</treenode>
<treenode node="testTextInBackground;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f11;59;5;79;;;;vpos;;v;;r;;d4,60;;b1,0;;m">
</treenode>
<treenode node="testTextInScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f11;81;5;141;;;;vpos;;v;;r;;d4,82;;b1,0;;m">
</treenode>
<treenode node="testWrongStepType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f11;228;5;240;;;;vpos;;v;;r&#10;Definition&#10;    testWrongStepType()&#10;&#10;Description&#10;      expectedException \Behat\Gherkin\Exception\ParserException;;d4,229;;b1,0;;m">
</treenode>
<treenode node="testWrongTagPlacement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserExceptionsTest.php;f11;178;5;190;;;;vpos;;v;;r&#10;Definition&#10;    testWrongTagPlacement()&#10;&#10;Description&#10;      expectedException \Behat\Gherkin\Exception\ParserException;;d4,179;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ParserTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\ParserTest.php;f0;17;1;66;;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserTest.php;f0;10;1;146;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r&#10;Definition&#10;    class ParserTest extends  \PHPUnit_Framework_TestCase&#10;&#10;Description&#10;     Test case for the parser base class.;;d0,18;;b0,0;;m">
<treenode node="getGherkinParser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserTest.php;f14;66;5;111;;;;vpos;;v;;r;;d4,67;;b2,0;;m">
</treenode>
<treenode node="getYamlParser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserTest.php;f14;113;5;120;;;;vpos;;v;;r;;d4,114;;b2,0;;m">
</treenode>
<treenode node="parseEtalon;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserTest.php;f14;129;5;145;;;;vpos;;v;;r;;d4,130;;b2,0;;metalon;;p">
</treenode>
<treenode node="parseFixture;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserTest.php;f14;122;5;127;;;;vpos;;v;;r;;d4,123;;b2,0;;mfixture;;p">
</treenode>
<treenode node="parserTestDataProvider;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserTest.php;f11;15;5;26;;;;vpos;;v;;r;;d4,16;;b1,0;;m">
</treenode>
<treenode node="testKeepZeroAlive;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\ParserTest.php;f8;59;2;65;;;;vpos;;v;;r;;d1,60;;b1,0;;m">
</treenode>
<treenode node="testMarkerOrder;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\ParserTest.php;f8;19;2;42;;;;vpos;;v;;r;;d1,20;;b1,0;;m">
</treenode>
<treenode node="testMaxNestingLevel;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\ParserTest.php;f8;44;2;57;;;;vpos;;v;;r;;d1,45;;b1,0;;m">
</treenode>
<treenode node="testParser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserTest.php;f11;33;5;43;;;;vpos;;v;;r&#10;Definition&#10;    testParser($fixtureName)&#10;&#10;Description&#10;      dataProvider parserTestDataProvider&#10;&#10;Parameters:&#10;    string $fixtureName - name of the fixture;;d4,34;;b1,0;;mstring $fixtureName;;p">
</treenode>
<treenode node="testParserResetsTagsBetweenFeatures;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\ParserTest.php;f11;45;5;64;;;;vpos;;v;;r;;d4,46;;b1,0;;m">
</treenode>
</treenode>
<treenode node="PasswordArgument;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Argument\PasswordArgument.php;f0;4;1;31;;;;vpos;;vFormattedOutput;;c;;r;;d0,5;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Argument\PasswordArgument.php;f11;11;5;14;;;;vpos;;v;;r;;d4,12;;b1,0;;mpassword;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Argument\PasswordArgument.php;f11;27;5;30;;;;vpos;;v;;r&#10;Definition&#10;    __toString()&#10;&#10;Description&#10;     { inheritdoc};;d4,28;;b1,0;;m">
</treenode>
<treenode node="getOutput;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Argument\PasswordArgument.php;f11;19;5;22;;;;vpos;;v;;r&#10;Definition&#10;    getOutput()&#10;&#10;Description&#10;     { inheritdoc};;d4,20;;b1,0;;m">
</treenode>
</treenode>
<treenode node="PathResolver;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\PathResolver.php;f0;6;1;126;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="fsCaseStrCmp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\PathResolver.php;f19;73;5;77;;;;vpos;;vint;;r&#10;Definition&#10;    fsCaseStrCmp($str1, $str2, $dirSep = DIRECTORY_SEPARATOR)&#10;&#10;Description&#10;     FileSystem Case String Compare compare two strings with the filesystem&apos;s case-sensitiveness&#10;&#10;Parameters:&#10;    string $str1&#10;    string $str2&#10;    string $dirSep&#10;&#10;Return:&#10;   -1 / 0 / 1 for &lt; / = / &gt; respectively;;d4,74;;b3,5;;mstring $str1;;pstring $str2;;pstring $dirSep;;p">
</treenode>
<treenode node="getPathAbsolutenessPrefix;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\PathResolver.php;f19;100;5;114;;;;vpos;;vstring;;r&#10;Definition&#10;    getPathAbsolutenessPrefix($path, $dirSep = DIRECTORY_SEPARATOR)&#10;&#10;Description&#10;     What part of this path (leftmost 0-3 characters) what it is absolute relative to:&#10;&#10;Parameters:&#10;    string $path&#10;    string $dirSep;;d4,101;;b3,5;;mstring $path;;pstring $dirSep;;p">
</treenode>
<treenode node="getRelativeDir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\PathResolver.php;f18;15;5;63;;;;vpos;;vstring;;r&#10;Definition&#10;    getRelativeDir($path, $projDir, $dirSep = DIRECTORY_SEPARATOR)&#10;&#10;Description&#10;     Returns path to a given directory relative to $projDir.&#10;&#10;Parameters:&#10;    string $path&#10;    string $projDir&#10;    string $dirSep;;d4,16;;b1,5;;mstring $path;;pstring $projDir;;pstring $dirSep;;p">
</treenode>
<treenode node="isWindows;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\PathResolver.php;f19;122;5;125;;;;vpos;;vbool;;r&#10;Definition&#10;    isWindows($dirSep = DIRECTORY_SEPARATOR)&#10;&#10;Description&#10;     Are we in a Windows style filesystem?&#10;&#10;Parameters:&#10;    string $dirSep;;d4,123;;b3,5;;mstring $dirSep;;p">
</treenode>
</treenode>
<treenode node="PathsFilter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\PathsFilter.php;f0;20;1;71;;;;vpos;;vSimpleFilter;;c;;r&#10;Definition&#10;    class PathsFilter extends SimpleFilter&#10;&#10;Description&#10;     Filters features by their paths.;;d0,21;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\PathsFilter.php;f11;29;5;40;;;;vpos;;v;;r&#10;Definition&#10;    __construct(array $paths)&#10;&#10;Description&#10;     Initializes filter.&#10;&#10;Parameters:&#10;    string[] $paths - List of approved paths;;d4,30;;b1,0;;mstring[] $paths;;p">
</treenode>
<treenode node="isFeatureMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\PathsFilter.php;f11;49;5;58;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isFeatureMatch(FeatureNode $feature)&#10;&#10;Description&#10;     Checks if Feature matches specified filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature - Feature instance;;d4,50;;b1,0;;mFeatureNode $feature;;p">
</treenode>
<treenode node="isScenarioMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\PathsFilter.php;f11;67;5;70;;;;vpos;;vfalse;;r&#10;Definition&#10;    isScenarioMatch(ScenarioInterface $scenario)&#10;&#10;Description&#10;     Checks if scenario or outline matches specified filter.&#10;&#10;Parameters:&#10;    ScenarioInterface $scenario - Scenario or Outline node instance&#10;&#10;Return:&#10;   This filter is designed to work only with features;;d4,68;;b1,0;;mScenarioInterface $scenario;;p">
</treenode>
</treenode>
<treenode node="PathsFilterTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\PathsFilterTest.php;f0;7;1;57;;;;vpos;;vFilterTest;;c;;r;;d0,8;;b0,0;;m">
<treenode node="testIsFeatureMatchFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\PathsFilterTest.php;f11;9;5;27;;;;vpos;;v;;r;;d4,10;;b1,0;;m">
</treenode>
<treenode node="testItDoesNotMatchIfFileWithSameNameButNotPathExistsInFolder;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\PathsFilterTest.php;f11;48;5;56;;;;vpos;;v;;r;;d4,49;;b1,0;;m">
</treenode>
<treenode node="testItDoesNotMatchPartialPaths;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\PathsFilterTest.php;f11;29;5;46;;;;vpos;;v;;r;;d4,30;;b1,0;;m">
</treenode>
</treenode>
<treenode node="PersistentServiceManager;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2\PersistentServiceManager.php;f0;7;1;42;;;;vpos;;vServiceManager;;cServiceLocatorInterface;;c;;r;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2\PersistentServiceManager.php;f11;14;5;17;;;;vpos;;v;;r;;d4,15;;b1,0;;mserviceManager;;p">
</treenode>
<treenode node="get;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2\PersistentServiceManager.php;f11;19;5;25;;;;vpos;;v;;r;;d4,20;;b1,0;;mname;;p">
</treenode>
<treenode node="has;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2\PersistentServiceManager.php;f11;27;5;36;;;;vpos;;v;;r;;d4,28;;b1,0;;mname;;p">
</treenode>
<treenode node="setService;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2\PersistentServiceManager.php;f11;38;5;41;;;;vpos;;v;;r;;d4,39;;b1,0;;mname;;pservice;;p">
</treenode>
</treenode>
<treenode node="Phalcon;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f0;87;1;661;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon.php;f0;16;1;158;;;;vpos;;vFramework;;cActiveRecord;;cPartedModule;;c;;r&#10;Definition&#10;    class Phalcon extends Framework implements ActiveRecord, PartedModule&#10;&#10;Description&#10;     This module provides integration with [Phalcon framework](http://www.phalconphp.com/) (3.x). Please try it and leave your feedback.;;d0,88;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;200;5;220;;;;vpos;;v;;r&#10;Definition&#10;    _after(TestInterface $test)&#10;&#10;Description&#10;     HOOK: after scenario&#10;&#10;Parameters:&#10;    TestInterface $test;;d4,201;;b1,0;;mTestInterface $test;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;145;5;193;;;;vpos;;v;;r&#10;Definition&#10;    _before(TestInterface $test)&#10;&#10;Description&#10;     HOOK: before scenario&#10;&#10;Parameters:&#10;    TestInterface $test;;d4,146;;b1,0;;mTestInterface $test;;p">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;117;5;137;;;;vpos;;v;;r&#10;Definition&#10;    _initialize()&#10;&#10;Description&#10;     HOOK: used after configuration is loaded;;d4,118;;b1,0;;m">
</treenode>
<treenode node="_parts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;222;5;225;;;;vpos;;v;;r;;d4,223;;b1,0;;m">
</treenode>
<treenode node="addServiceToContainer;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;473;5;483;;;;vpos;;vmixed;;r&#10;Definition&#10;    addServiceToContainer($name, $definition, $shared = false)&#10;&#10;Description&#10;     Registers a service in the services container and resolve it. This record will be erased after the test. Recommended to use for unit testing.&#10;&#10;Parameters:&#10;    string $name&#10;    mixed $definition&#10;    boolean $shared&#10;&#10;Return:&#10;   |null;;d4,474;;b1,0;;mstring $name;;pmixed $definition;;pboolean $shared;;p">
</treenode>
<treenode node="amOnRoute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;513;5;529;;;;vpos;;v;;r&#10;Definition&#10;    amOnRoute($routeName, array $params = [])&#10;&#10;Description&#10;     Opens web page using route name and parameters.&#10;&#10;Parameters:&#10;    string $routeName&#10;    array $params;;d4,514;;b1,0;;mstring $routeName;;parray $params;;p">
</treenode>
<treenode node="dontSeeRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;393;5;400;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeRecord($model, $attributes = [])&#10;&#10;Description&#10;     Checks that record does not exist in database.&#10;&#10;Parameters:&#10;    string $model - Model name&#10;    array $attributes - Model attributes;;d4,394;;b1,0;;mstring $model;;parray $attributes;;p">
</treenode>
<treenode node="doRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon.php;f11;63;5;157;;;;vpos;;v;;r&#10;Definition&#10;    doRequest($request)&#10;&#10;Description&#10;     Makes a request.&#10;&#10;Parameters:&#10;    \Symfony\Component\BrowserKit\Request $request;;d4,64;;b1,0;;m\Symfony\Component\BrowserKit\Request $request;;p">
</treenode>
<treenode node="findRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f14;560;5;570;;;;vpos;;v;;r&#10;Definition&#10;    findRecord($model, $attributes = [])&#10;&#10;Description&#10;     Allows to query the first record that match the specified conditions&#10;&#10;Parameters:&#10;    string $model - Model name&#10;    array $attributes - Model attributes;;d4,561;;b2,0;;mstring $model;;parray $attributes;;p">
</treenode>
<treenode node="getApplication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;233;5;236;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon.php;f11;41;5;53;;;;vpos;;v;;r&#10;Definition&#10;    getApplication()&#10;&#10;Description&#10;     Provides access the Phalcon application object.;;d4,234;;b1,0;;m">
</treenode>
<treenode node="getApplicationDomainRegex;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f12;654;5;660;;;;vpos;;vstring;;r&#10;Definition&#10;    getApplicationDomainRegex()&#10;&#10;Description&#10;     ;;d4,655;;b3,0;;m">
</treenode>
<treenode node="getInternalDomains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f14;627;5;649;;;;vpos;;varray;;r&#10;Definition&#10;    getInternalDomains()&#10;&#10;Description&#10;     Returns a list of recognized domain names;;d4,628;;b2,0;;m">
</treenode>
<treenode node="getModelIdentity;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f14;600;5;620;;;;vpos;;vmixed;;r&#10;Definition&#10;    getModelIdentity(PhalconModel $model)&#10;&#10;Description&#10;     Get identity.&#10;&#10;Parameters:&#10;    \Phalcon\Mvc\Model $model;;d4,601;;b2,0;;m\Phalcon\Mvc\Model $model;;p">
</treenode>
<treenode node="getModelRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f14;580;5;592;;;;vpos;;v;;r&#10;Definition&#10;    getModelRecord($model)&#10;&#10;Description&#10;     Get Model Record&#10;&#10;Parameters:&#10;     $model;;d4,581;;b2,0;;m $model;;p">
</treenode>
<treenode node="grabRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;416;5;419;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabRecord($model, $attributes = [])&#10;&#10;Description&#10;     Retrieves record from database&#10;&#10;Parameters:&#10;    string $model - Model name&#10;    array $attributes - Model attributes;;d4,417;;b1,0;;mstring $model;;parray $attributes;;p">
</treenode>
<treenode node="grabServiceFromContainer;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;430;5;437;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabServiceFromContainer($service, array $parameters = [])&#10;&#10;Description&#10;     Resolves the service based on its configuration from Phalcon&apos;s DI container Recommended to use for unit testing.&#10;&#10;Parameters:&#10;    string $service - Service name&#10;    array $parameters - Parameters [Optional];;d4,431;;b1,0;;mstring $service;;parray $parameters;;p">
</treenode>
<treenode node="grabServiceFromDi;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;449;5;452;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabServiceFromDi($service, array $parameters = [])&#10;&#10;Description&#10;     Alias for `grabServiceFromContainer`.&#10;&#10;Parameters:&#10;    string $service - Service name&#10;    array $parameters - Parameters [Optional];;d4,450;;b1,0;;mstring $service;;parray $parameters;;p">
</treenode>
<treenode node="haveInSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;244;5;248;;;;vpos;;v;;r&#10;Definition&#10;    haveInSession($key, $val)&#10;&#10;Description&#10;     Sets value to session. Use for authorization.&#10;&#10;Parameters:&#10;    string $key&#10;    mixed $val;;d4,245;;b1,0;;mstring $key;;pmixed $val;;p">
</treenode>
<treenode node="haveRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;323;5;356;;;;vpos;;vmixed;;r&#10;Definition&#10;    haveRecord($model, $attributes = [])&#10;&#10;Description&#10;     Inserts record into the database.&#10;&#10;Parameters:&#10;    string $model - Model name&#10;    array $attributes - Model attributes;;d4,324;;b1,0;;mstring $model;;parray $attributes;;p">
</treenode>
<treenode node="haveServiceInDi;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;496;5;499;;;;vpos;;vmixed;;r&#10;Definition&#10;    haveServiceInDi($name, $definition, $shared = false)&#10;&#10;Description&#10;     Alias for `addServiceToContainer`.&#10;&#10;Parameters:&#10;    string $name&#10;    mixed $definition&#10;    boolean $shared&#10;&#10;Return:&#10;   |null;;d4,497;;b1,0;;mstring $name;;pmixed $definition;;pboolean $shared;;p">
</treenode>
<treenode node="seeCurrentRouteIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;541;5;550;;;;vpos;;v;;r&#10;Definition&#10;    seeCurrentRouteIs($routeName)&#10;&#10;Description&#10;     Checks that current url matches route&#10;&#10;Parameters:&#10;    string $routeName;;d4,542;;b1,0;;mstring $routeName;;p">
</treenode>
<treenode node="seeInSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;264;5;282;;;;vpos;;v;;r&#10;Definition&#10;    seeInSession($key, $value = null)&#10;&#10;Description&#10;     Checks that session contains value. If value is `null` checks that session has key.&#10;&#10;Parameters:&#10;    string $key&#10;    mixed $value;;d4,265;;b1,0;;mstring $key;;pmixed $value;;p">
</treenode>
<treenode node="seeRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;371;5;378;;;;vpos;;v;;r&#10;Definition&#10;    seeRecord($model, $attributes = [])&#10;&#10;Description&#10;     Checks that record exists in database.&#10;&#10;Parameters:&#10;    string $model - Model name&#10;    array $attributes - Model attributes;;d4,372;;b1,0;;mstring $model;;parray $attributes;;p">
</treenode>
<treenode node="seeSessionHasValues;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Phalcon.php;f11;297;5;306;;;;vpos;;vvoid;;r&#10;Definition&#10;    seeSessionHasValues(array $bindings)&#10;&#10;Description&#10;     Assert that the session has a given list of values.&#10;&#10;Parameters:&#10;    array $bindings;;d4,298;;b1,0;;marray $bindings;;p">
</treenode>
<treenode node="setApplication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Phalcon.php;f11;31;5;34;;;;vpos;;v;;r&#10;Definition&#10;    setApplication($application)&#10;&#10;Description&#10;     Set Phalcon Application by \Phalcon\DI\Injectable, Closure or bootstrap file path&#10;&#10;Parameters:&#10;    mixed $application;;d4,32;;b1,0;;mmixed $application;;p">
</treenode>
</treenode>
<treenode node="Phalcon1;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f4;31;5;32;;;;vpos;;vPhalcon;;c;;r;;d35,31;;b0,0;;m">
</treenode>
<treenode node="Phalcon2;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f4;34;5;35;;;;vpos;;vPhalcon;;c;;r;;d35,34;;b0,0;;m">
</treenode>
<treenode node="PhpBrowser;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f0;76;1;289;;;;vpos;;vInnerBrowser;;cRemote;;cMultiSession;;cRequiresPackage;;c;;r&#10;Definition&#10;    class PhpBrowser extends InnerBrowser implements Remote, MultiSession, RequiresPackage&#10;&#10;Description&#10;     Uses [Guzzle](http://guzzlephp.org/) to interact with your application over CURL. Module works over CURL and requires **PHP CURL extension** to be enabled.;;d0,77;;b0,0;;m">
<treenode node="_backupSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;268;5;276;;;;vpos;;v;;r;;d4,269;;b1,0;;m">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;142;5;148;;;;vpos;;v;;r;;d4,143;;b1,0;;mtest;;p">
</treenode>
<treenode node="_closeSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;285;5;288;;;;vpos;;v;;r;;d4,286;;b1,0;;msession;;p">
</treenode>
<treenode node="_getResponseCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;221;5;224;;;;vpos;;v;;r;;d4,222;;b1,0;;m">
</treenode>
<treenode node="_getUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;150;5;153;;;;vpos;;v;;r;;d4,151;;b1,0;;m">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;127;5;130;;;;vpos;;v;;r;;d4,128;;b1,0;;m">
</treenode>
<treenode node="_initializeSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;226;5;231;;;;vpos;;v;;r;;d4,227;;b1,0;;m">
</treenode>
<treenode node="_loadSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;278;5;283;;;;vpos;;v;;r;;d4,279;;b1,0;;msession;;p">
</treenode>
<treenode node="_prepareSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;233;5;266;;;;vpos;;v;;r;;d4,234;;b1,0;;m">
</treenode>
<treenode node="_requires;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;122;5;125;;;;vpos;;v;;r;;d4,123;;b1,0;;m">
</treenode>
<treenode node="amHttpAuthenticated;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;166;5;169;;;;vpos;;v;;r;;d4,167;;b1,0;;musername;;ppassword;;p">
</treenode>
<treenode node="amOnSubdomain;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;183;5;189;;;;vpos;;v;;r;;d4,184;;b1,0;;msubdomain;;p">
</treenode>
<treenode node="amOnUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;171;5;181;;;;vpos;;v;;r;;d4,172;;b1,0;;murl;;p">
</treenode>
<treenode node="executeInGuzzle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;215;5;218;;;;vpos;;v;;r&#10;Definition&#10;    executeInGuzzle(\Closure $function)&#10;&#10;Description&#10;     Low-level API method. If Codeception commands are not enough, use [Guzzle HTTP Client](http://guzzlephp.org/) methods directly&#10;&#10;Parameters:&#10;    callable $function;;d4,216;;b1,0;;mcallable $function;;p">
</treenode>
<treenode node="guessGuzzleConnector;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f14;132;5;140;;;;vpos;;v;;r;;d4,133;;b2,0;;m">
</treenode>
<treenode node="onReconfigure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f14;191;5;194;;;;vpos;;v;;r;;d4,192;;b2,0;;m">
</treenode>
<treenode node="setHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\PhpBrowser.php;f11;161;5;164;;;;vpos;;v;;r&#10;Definition&#10;    setHeader($name, $value)&#10;&#10;Description&#10;     Alias to `haveHttpHeader`&#10;&#10;Parameters:&#10;     $name&#10;     $value;;d4,162;;b1,0;;m $name;;p $value;;p">
</treenode>
</treenode>
<treenode node="PhpSuperGlobalsConverter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\PhpSuperGlobalsConverter.php;f0;11;1;116;;;;vpos;;v;;r&#10;Definition&#10;    trait PhpSuperGlobalsConverter&#10;&#10;Description&#10;     Converts BrowserKit\Request&apos;s request parameters and files into PHP-compatible structure;;d0,12;;b0,0;;m">
<treenode node="rearrangeFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\PhpSuperGlobalsConverter.php;f12;42;5;98;;;;vpos;;v;;r;;d4,43;;b3,0;;mrequestFiles;;p">
</treenode>
<treenode node="remapFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\PhpSuperGlobalsConverter.php;f14;21;5;26;;;;vpos;;varray;;r&#10;Definition&#10;    remapFiles(array $requestFiles)&#10;&#10;Description&#10;     Rearrange files array to be compatible with PHP $_FILES superglobal structure&#10;&#10;Parameters:&#10;    array $requestFiles;;d4,22;;b2,0;;marray $requestFiles;;p">
</treenode>
<treenode node="remapRequestParameters;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\PhpSuperGlobalsConverter.php;f14;37;5;40;;;;vpos;;varray;;r&#10;Definition&#10;    remapRequestParameters(array $parameters)&#10;&#10;Description&#10;     Escape high-level variable name with dots, underscores and other &quot;special&quot; chars to be compatible with PHP &quot;bug&quot;&#10;&#10;Parameters:&#10;    array $parameters;;d4,38;;b2,0;;marray $parameters;;p">
</treenode>
<treenode node="replaceSpaces;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Shared\PhpSuperGlobalsConverter.php;f12;109;5;115;;;;vpos;;varray;;r&#10;Definition&#10;    replaceSpaces($parameters)&#10;&#10;Description&#10;     Replace spaces and dots and other chars in high-level query parameters for compatibility with PHP bug (or not a bug)&#10;&#10;Parameters:&#10;    array $parameters - Array of request parameters to be converted;;d4,110;;b3,0;;marray $parameters;;p">
</treenode>
</treenode>
<treenode node="Post;PHP:Class Name;H:\OSPanel\domains\yii\models\Post.php;f0;11;1;17;;;;vpos;;vActiveRecord;;c;;r;;d32,11;;b0,0;;m">
<treenode node="tablename;PHP:Function Name;H:\OSPanel\domains\yii\models\Post.php;f18;12;5;15;;;;vpos;;v;;r;;d4,13;;b1,5;;m">
</treenode>
</treenode>
<treenode node="PostgreSql;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\PostgreSql.php;f0;6;1;176;;;;vpos;;vDb;;c;;r;;d0,7;;b0,0;;m">
<treenode node="cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\PostgreSql.php;f11;63;5;67;;;;vpos;;v;;r;;d4,64;;b1,0;;m">
</treenode>
<treenode node="getPrimaryKey;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\PostgreSql.php;f11;156;5;175;;;;vpos;;varray;;r&#10;Definition&#10;    getPrimaryKey($tableName)&#10;&#10;Description&#10;     Returns the primary key(s) of the table, based on: https://wiki.postgresql.org/wiki/Retrieve_primary_key_columns.&#10;&#10;Parameters:&#10;    string $tableName&#10;&#10;Return:&#10;   [string];;d4,157;;b1,0;;mstring $tableName;;p">
</treenode>
<treenode node="lastInsertId;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\PostgreSql.php;f11;121;5;146;;;;vpos;;v;;r&#10;Definition&#10;    lastInsertId($table)&#10;&#10;Description&#10;     Get the last inserted ID of table.;;d4,122;;b1,0;;mtable;;p">
</treenode>
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\PostgreSql.php;f11;19;5;61;;;;vpos;;v;;r&#10;Definition&#10;    load($sql)&#10;&#10;Description&#10;     Loads a SQL file.&#10;&#10;Parameters:&#10;    string $sql - sql file;;d4,20;;b1,0;;mstring $sql;;p">
</treenode>
<treenode node="sqlLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\PostgreSql.php;f11;69;5;85;;;;vpos;;v;;r;;d4,70;;b1,0;;msql;;p">
</treenode>
<treenode node="sqlQuery;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\PostgreSql.php;f11;87;5;116;;;;vpos;;v;;r;;d4,88;;b1,0;;mquery;;p">
</treenode>
</treenode>
<treenode node="PrepareTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\PrepareTest.php;f0;11;1;43;;;;vpos;;vEventSubscriberInterface;;cStaticEvents;;c;;r;;d0,12;;b0,0;;m">
<treenode node="prepare;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\PrepareTest.php;f11;21;5;42;;;;vpos;;v;;r;;d4,22;;b1,0;;mevent;;p">
</treenode>
</treenode>
<treenode node="Printer;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Printer.php;f0;10;1;150;;;;vpos;;vEventSubscriberInterface;;cStaticEvents;;c;;r;;d0,11;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Printer.php;f11;30;5;42;;;;vpos;;v;;r;;d4,31;;b1,0;;moptions;;p">
</treenode>
<treenode node="absolutePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Printer.php;f14;44;5;50;;;;vpos;;v;;r;;d4,45;;b2,0;;mpath;;p">
</treenode>
<treenode node="printConsole;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Printer.php;f14;88;5;97;;;;vpos;;v;;r;;d4,89;;b2,0;;mprinter;;p">
</treenode>
<treenode node="printCrap4j;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Printer.php;f14;139;5;143;;;;vpos;;v;;r;;d4,140;;b2,0;;m">
</treenode>
<treenode node="printHtml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Printer.php;f14;99;5;111;;;;vpos;;v;;r;;d4,100;;b2,0;;m">
</treenode>
<treenode node="printPHP;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Printer.php;f14;119;5;123;;;;vpos;;v;;r;;d4,120;;b2,0;;m">
</treenode>
<treenode node="printPHPUnit;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Printer.php;f14;145;5;149;;;;vpos;;v;;r;;d4,146;;b2,0;;m">
</treenode>
<treenode node="printResult;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Printer.php;f11;52;5;86;;;;vpos;;v;;r;;d4,53;;b1,0;;me;;p">
</treenode>
<treenode node="printText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Printer.php;f14;125;5;137;;;;vpos;;v;;r;;d4,126;;b2,0;;m">
</treenode>
<treenode node="printXml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\Printer.php;f14;113;5;117;;;;vpos;;v;;r;;d4,114;;b2,0;;m">
</treenode>
</treenode>
<treenode node="PrintResultEvent;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\PrintResultEvent.php;f0;5;1;38;;;;vpos;;vEvent;;c;;r;;d0,6;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\PrintResultEvent.php;f11;17;5;21;;;;vpos;;v;;r;;d4,18;;b1,0;;mresult;;pprinter;;p">
</treenode>
<treenode node="getPrinter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\PrintResultEvent.php;f11;26;5;29;;;;vpos;;v;;r&#10;Definition&#10;    getPrinter()&#10;&#10;Description&#10;      \PHPUnit\Util\Printer;;d4,27;;b1,0;;m">
</treenode>
<treenode node="getResult;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\PrintResultEvent.php;f11;34;5;37;;;;vpos;;v;;r&#10;Definition&#10;    getResult()&#10;&#10;Description&#10;      \PHPUnit\Framework\TestResult;;d4,35;;b1,0;;m">
</treenode>
</treenode>
<treenode node="PropertyAccess;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\PropertyAccess.php;f0;3;1;16;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="readPrivateProperty;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\PropertyAccess.php;f18;12;5;15;;;;vpos;;vmixed;;r&#10;Definition&#10;    readPrivateProperty($object, $property, $class = null)&#10;&#10;Description&#10;      deprecated Use ReflectionHelper::readPrivateProperty()&#10;&#10;Parameters:&#10;    object $object&#10;    string $property&#10;    string|null $class;;d4,13;;b1,5;;mobject $object;;pstring $property;;pstring|null $class;;p">
</treenode>
</treenode>
<treenode node="PyStringNode;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\PyStringNode.php;f0;17;1;89;;;;vpos;;vArgumentInterface;;c;;r&#10;Definition&#10;    class PyStringNode implements ArgumentInterface&#10;&#10;Description&#10;     Represents Gherkin PyString argument.;;d0,18;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\PyStringNode.php;f11;34;5;38;;;;vpos;;v;;r&#10;Definition&#10;    __construct(array $strings, $line)&#10;&#10;Description&#10;     Initializes PyString.&#10;&#10;Parameters:&#10;    array $strings - String in form of [$stringLine]&#10;    integer $line - Line number where string been started;;d4,35;;b1,0;;marray $strings;;pinteger $line;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\PyStringNode.php;f11;75;5;78;;;;vpos;;vstring;;r&#10;Definition&#10;    __toString()&#10;&#10;Description&#10;     Converts PyString into string.;;d4,76;;b1,0;;m">
</treenode>
<treenode node="getLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\PyStringNode.php;f11;85;5;88;;;;vpos;;vinteger;;r&#10;Definition&#10;    getLine()&#10;&#10;Description&#10;     Returns line number at which PyString was started.;;d4,86;;b1,0;;m">
</treenode>
<treenode node="getNodeType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\PyStringNode.php;f11;45;5;48;;;;vpos;;vstring;;r&#10;Definition&#10;    getNodeType()&#10;&#10;Description&#10;     Returns node type.;;d4,46;;b1,0;;m">
</treenode>
<treenode node="getRaw;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\PyStringNode.php;f11;65;5;68;;;;vpos;;vstring;;r&#10;Definition&#10;    getRaw()&#10;&#10;Description&#10;     Returns raw string.;;d4,66;;b1,0;;m">
</treenode>
<treenode node="getStrings;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\PyStringNode.php;f11;55;5;58;;;;vpos;;varray;;r&#10;Definition&#10;    getStrings()&#10;&#10;Description&#10;     Returns entire PyString lines set.;;d4,56;;b1,0;;m">
</treenode>
</treenode>
<treenode node="PyStringNodeTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\PyStringNodeTest.php;f0;6;1;26;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,7;;b0,0;;m">
<treenode node="testGetRaw;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\PyStringNodeTest.php;f11;15;5;25;;;;vpos;;v;;r;;d4,16;;b1,0;;m">
</treenode>
<treenode node="testGetStrings;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\PyStringNodeTest.php;f11;8;5;13;;;;vpos;;v;;r;;d4,9;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Queue;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f0;126;1;401;;;;vpos;;vCodeceptionModule;;c;;r&#10;Definition&#10;    class Queue extends CodeceptionModule&#10;&#10;Description&#10;      Works with Queue servers.;;d0,127;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;138;5;141;;;;vpos;;v;;r&#10;Definition&#10;    _before(TestInterface $test)&#10;&#10;Description&#10;     Setup connection and open/setup the connection with config settings&#10;&#10;Parameters:&#10;    \Codeception\TestInterface $test;;d4,139;;b1,0;;m\Codeception\TestInterface $test;;p">
</treenode>
<treenode node="addMessageToQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;328;5;331;;;;vpos;;v;;r&#10;Definition&#10;    addMessageToQueue($message, $queue)&#10;&#10;Description&#10;     Add a message to a queue/tube&#10;&#10;Parameters:&#10;    string $message - Message Body&#10;    string $queue - Queue Name;;d4,329;;b1,0;;mstring $message;;pstring $queue;;p">
</treenode>
<treenode node="clearQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;344;5;347;;;;vpos;;v;;r&#10;Definition&#10;    clearQueue($queue)&#10;&#10;Description&#10;     Clear all messages of the queue/tube&#10;&#10;Parameters:&#10;    string $queue - Queue Name;;d4,345;;b1,0;;mstring $queue;;p">
</treenode>
<treenode node="createQueueDriver;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f14;158;5;178;;;;vpos;;v;;r&#10;Definition&#10;    createQueueDriver()&#10;&#10;Description&#10;      \Codeception\Lib\Interfaces\Queue;;d4,159;;b2,0;;m">
</treenode>
<treenode node="dontSeeEmptyQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;241;5;244;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeEmptyQueue($queue)&#10;&#10;Description&#10;     Check if a queue/tube is NOT empty of all messages&#10;&#10;Parameters:&#10;    string $queue - Queue Name;;d4,242;;b1,0;;mstring $queue;;p">
</treenode>
<treenode node="dontSeeQueueExists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;209;5;212;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeQueueExists($queue)&#10;&#10;Description&#10;     Check if a queue/tube does NOT exist on the queueing server.&#10;&#10;Parameters:&#10;    string $queue - Queue Name;;d4,210;;b1,0;;mstring $queue;;p">
</treenode>
<treenode node="dontSeeQueueHasCurrentCount;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;275;5;278;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeQueueHasCurrentCount($queue, $expected)&#10;&#10;Description&#10;     Check if a queue/tube does NOT have a given current number of messages&#10;&#10;Parameters:&#10;    string $queue - Queue Name&#10;    int $expected - Number of messages expected;;d4,276;;b1,0;;mstring $queue;;pint $expected;;p">
</treenode>
<treenode node="dontSeeQueueHasTotalCount;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;309;5;312;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeQueueHasTotalCount($queue, $expected)&#10;&#10;Description&#10;     Check if a queue/tube does NOT have a given total number of messages&#10;&#10;Parameters:&#10;    string $queue - Queue Name&#10;    int $expected - Number of messages expected;;d4,310;;b1,0;;mstring $queue;;pint $expected;;p">
</treenode>
<treenode node="grabQueueCurrentCount;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;379;5;382;;;;vpos;;vint;;r&#10;Definition&#10;    grabQueueCurrentCount($queue)&#10;&#10;Description&#10;     Grabber method to get the current number of messages on the queue/tube (pending/ready)&#10;&#10;Parameters:&#10;    string $queue - Queue Name&#10;&#10;Return:&#10;   Count;;d4,380;;b1,0;;mstring $queue;;p">
</treenode>
<treenode node="grabQueues;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;362;5;365;;;;vpos;;varray;;r&#10;Definition&#10;    grabQueues()&#10;&#10;Description&#10;     Grabber method to get the list of queues/tubes on the server&#10;&#10;Return:&#10;   List of Queues/Tubes;;d4,363;;b1,0;;m">
</treenode>
<treenode node="grabQueueTotalCount;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;397;5;400;;;;vpos;;vint;;r&#10;Definition&#10;    grabQueueTotalCount($queue)&#10;&#10;Description&#10;     Grabber method to get the total number of messages on the queue/tube&#10;&#10;Parameters:&#10;     $queue - Queue Name&#10;&#10;Return:&#10;   Count;;d4,398;;b1,0;;m $queue;;p">
</treenode>
<treenode node="seeEmptyQueue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;225;5;228;;;;vpos;;v;;r&#10;Definition&#10;    seeEmptyQueue($queue)&#10;&#10;Description&#10;     Check if a queue/tube is empty of all messages&#10;&#10;Parameters:&#10;    string $queue - Queue Name;;d4,226;;b1,0;;mstring $queue;;p">
</treenode>
<treenode node="seeQueueExists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;193;5;196;;;;vpos;;v;;r&#10;Definition&#10;    seeQueueExists($queue)&#10;&#10;Description&#10;     Check if a queue/tube exists on the queueing server.&#10;&#10;Parameters:&#10;    string $queue - Queue Name;;d4,194;;b1,0;;mstring $queue;;p">
</treenode>
<treenode node="seeQueueHasCurrentCount;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;258;5;261;;;;vpos;;v;;r&#10;Definition&#10;    seeQueueHasCurrentCount($queue, $expected)&#10;&#10;Description&#10;     Check if a queue/tube has a given current number of messages&#10;&#10;Parameters:&#10;    string $queue - Queue Name&#10;    int $expected - Number of messages expected;;d4,259;;b1,0;;mstring $queue;;pint $expected;;p">
</treenode>
<treenode node="seeQueueHasTotalCount;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f11;292;5;295;;;;vpos;;v;;r&#10;Definition&#10;    seeQueueHasTotalCount($queue, $expected)&#10;&#10;Description&#10;     Check if a queue/tube has a given total number of messages&#10;&#10;Parameters:&#10;    string $queue - Queue Name&#10;    int $expected - Number of messages expected;;d4,293;;b1,0;;mstring $queue;;pint $expected;;p">
</treenode>
<treenode node="validateConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Queue.php;f14;146;5;152;;;;vpos;;v;;r&#10;Definition&#10;    validateConfig()&#10;&#10;Description&#10;     Provide and override for the config settings and allow custom settings depending on the service being used.;;d4,147;;b2,0;;m">
</treenode>
</treenode>
<treenode node="QuoteTrait;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\QuoteTrait.php;f0;12;1;62;;;;vpos;;v;;r&#10;Definition&#10;    trait QuoteTrait&#10;&#10;Description&#10;     Adds the block quote elements;;d0,13;;b0,0;;m">
<treenode node="consumeQuote;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\QuoteTrait.php;f11;25;2;49;;;;vpos;;v;;r&#10;Definition&#10;    consumeQuote($lines, $current)&#10;&#10;Description&#10;     Consume lines for a blockquote element;;d1,26;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="identifyQuote;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\QuoteTrait.php;f11;17;2;20;;;;vpos;;v;;r&#10;Definition&#10;    identifyQuote($line)&#10;&#10;Description&#10;     identify a line as the beginning of a block quote.;;d1,18;;b2,0;;mline;;p">
</treenode>
<treenode node="parseBlocks;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\QuoteTrait.php;f20;60;48;60;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mlines;;p">
</treenode>
<treenode node="renderAbsy;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\QuoteTrait.php;f20;61;46;61;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mabsy;;p">
</treenode>
<treenode node="renderQuote;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\QuoteTrait.php;f11;55;2;58;;;;vpos;;v;;r&#10;Definition&#10;    renderQuote($block)&#10;&#10;Description&#10;     Renders a blockquote;;d1,56;;b2,0;;mblock;;p">
</treenode>
</treenode>
<treenode node="Recorder;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Recorder.php;f0;47;1;347;;;;vpos;;vExtension;;c;;r&#10;Definition&#10;    class Recorder extends \Codeception\Extension&#10;&#10;Description&#10;     Saves a screenshot of each step in acceptance tests and shows them as a slideshow on one HTML page (here&apos;s an [example](http://codeception.com/images/recorder.gif)) Activated only for suites with WebDriver module enabled.;;d0,48;;b0,0;;m">
<treenode node="afterStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Recorder.php;f11;333;5;346;;;;vpos;;v;;r;;d4,334;;b1,0;;me;;p">
</treenode>
<treenode node="afterSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Recorder.php;f11;253;5;269;;;;vpos;;v;;r;;d4,254;;b1,0;;m">
</treenode>
<treenode node="before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Recorder.php;f11;271;5;282;;;;vpos;;v;;r;;d4,272;;b1,0;;me;;p">
</treenode>
<treenode node="beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Recorder.php;f11;231;5;251;;;;vpos;;v;;r;;d4,232;;b1,0;;m">
</treenode>
<treenode node="cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Recorder.php;f11;284;5;296;;;;vpos;;v;;r;;d4,285;;b1,0;;me;;p">
</treenode>
<treenode node="persist;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\Recorder.php;f11;298;5;331;;;;vpos;;v;;r;;d4,299;;b1,0;;me;;p">
</treenode>
</treenode>
<treenode node="Redis;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f0;45;1;694;;;;vpos;;vCodeceptionModule;;cRequiresPackage;;c;;r&#10;Definition&#10;    class Redis extends CodeceptionModule implements RequiresPackage&#10;&#10;Description&#10;     This module uses the [Predis](https://github.com/nrk/predis) library to interact with a Redis server.;;d0,46;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f11;115;5;120;;;;vpos;;v;;r&#10;Definition&#10;    _before(TestInterface $test)&#10;&#10;Description&#10;     Code to run before each test&#10;&#10;Parameters:&#10;    TestInterface $test;;d4,116;;b1,0;;mTestInterface $test;;p">
</treenode>
<treenode node="_beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f11;103;5;108;;;;vpos;;v;;r&#10;Definition&#10;    _beforeSuite($settings = [])&#10;&#10;Description&#10;     Code to run before each suite&#10;&#10;Parameters:&#10;    array $settings;;d4,104;;b1,0;;marray $settings;;p">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f11;82;5;96;;;;vpos;;v;;r&#10;Definition&#10;    _initialize()&#10;&#10;Description&#10;     Instructions to run after configuration is loaded;;d4,83;;b1,0;;m">
</treenode>
<treenode node="_requires;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f11;72;5;75;;;;vpos;;v;;r;;d4,73;;b1,0;;m">
</treenode>
<treenode node="boolToString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f12;536;5;547;;;;vpos;;vmixed;;r&#10;Definition&#10;    boolToString($var)&#10;&#10;Description&#10;     Converts boolean values to &quot;0&quot; and &quot;1&quot;&#10;&#10;Parameters:&#10;    mixed $var - The variable;;d4,537;;b3,0;;mmixed $var;;p">
</treenode>
<treenode node="checkKeyContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f12;561;5;616;;;;vpos;;vbool;;r&#10;Definition&#10;    checkKeyContains($key, $item, $itemValue = null)&#10;&#10;Description&#10;     Checks whether a key contains a given item&#10;&#10;Parameters:&#10;    string $key - The key&#10;    mixed $item - The item&#10;    null $itemValue - Optional and only used for zsets and hashes;;d4,562;;b3,0;;mstring $key;;pmixed $item;;pnull $itemValue;;p">
</treenode>
<treenode node="checkKeyExists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f12;627;5;677;;;;vpos;;vbool;;r&#10;Definition&#10;    checkKeyExists($key, $value = null)&#10;&#10;Description&#10;     Checks whether a key exists and, optionally, whether it has a given $value&#10;&#10;Parameters:&#10;    string $key - The key name&#10;    mixed $value - Optional;;d4,628;;b3,0;;mstring $key;;pmixed $value;;p">
</treenode>
<treenode node="cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f11;127;5;137;;;;vpos;;v;;r&#10;Definition&#10;    cleanup()&#10;&#10;Description&#10;     Delete all the keys in the Redis database;;d4,128;;b1,0;;m">
</treenode>
<treenode node="dontSeeInRedis;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f11;359;5;365;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeInRedis($key, $value = null)&#10;&#10;Description&#10;     Asserts that a key does not exist or, optionally, that it doesn&apos;t have the provided $value&#10;&#10;Parameters:&#10;    string $key - The key name&#10;    mixed $value - Optional;;d4,360;;b1,0;;mstring $key;;pmixed $value;;p">
</treenode>
<treenode node="dontSeeRedisKeyContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f11;403;5;413;;;;vpos;;vbool;;r&#10;Definition&#10;    dontSeeRedisKeyContains($key, $item, $itemValue = null)&#10;&#10;Description&#10;     Asserts that a given key does not contain a given item&#10;&#10;Parameters:&#10;    string $key - The key&#10;    mixed $item - The item&#10;    null $itemValue - Optional and only used for zsets and hashes;;d4,404;;b1,0;;mstring $key;;pmixed $item;;pnull $itemValue;;p">
</treenode>
<treenode node="grabFromRedis;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f11;180;5;239;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabFromRedis($key)&#10;&#10;Description&#10;     Returns the value of a given key&#10;&#10;Parameters:&#10;    string $key - The key name;;d4,181;;b1,0;;mstring $key;;p">
</treenode>
<treenode node="haveInRedis;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f11;275;5;326;;;;vpos;;v;;r&#10;Definition&#10;    haveInRedis($type, $key, $value)&#10;&#10;Description&#10;     Creates or modifies keys&#10;&#10;Parameters:&#10;    string $type - The type of the key&#10;    string $key - The key name&#10;    mixed $value - The value;;d4,276;;b1,0;;mstring $type;;pstring $key;;pmixed $value;;p">
</treenode>
<treenode node="scoresToFloat;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f12;686;5;693;;;;vpos;;varray;;r&#10;Definition&#10;    scoresToFloat(array $arr)&#10;&#10;Description&#10;     Explicitly cast the scores of a Zset associative array as float/double&#10;&#10;Parameters:&#10;    array $arr - The ZSet associative array;;d4,687;;b3,0;;marray $arr;;p">
</treenode>
<treenode node="seeInRedis;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f11;445;5;451;;;;vpos;;v;;r&#10;Definition&#10;    seeInRedis($key, $value = null)&#10;&#10;Description&#10;     Asserts that a key exists, and optionally that it has the provided $value&#10;&#10;Parameters:&#10;    string $key - The key name&#10;    mixed $value - Optional;;d4,446;;b1,0;;mstring $key;;pmixed $value;;p">
</treenode>
<treenode node="seeRedisKeyContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f11;517;5;527;;;;vpos;;vbool;;r&#10;Definition&#10;    seeRedisKeyContains($key, $item, $itemValue = null)&#10;&#10;Description&#10;     Asserts that a given key contains a given item&#10;&#10;Parameters:&#10;    string $key - The key&#10;    mixed $item - The item&#10;    null $itemValue - Optional and only used for zsets and hashes;;d4,518;;b1,0;;mstring $key;;pmixed $item;;pnull $itemValue;;p">
</treenode>
<treenode node="sendCommandToRedis;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Redis.php;f11;473;5;479;;;;vpos;;vmixed;;r&#10;Definition&#10;    sendCommandToRedis($command)&#10;&#10;Description&#10;     Sends a command directly to the Redis driver. See documentation at https://github.com/nrk/predis Every argument that follows the $command name will be passed to it.&#10;&#10;Parameters:&#10;    string $command - The command name;;d4,474;;b1,0;;mstring $command;;p">
</treenode>
</treenode>
<treenode node="ReflectionHelper;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ReflectionHelper.php;f0;6;1;62;;;;vpos;;v;;r&#10;Definition&#10;    class ReflectionHelper&#10;&#10;Description&#10;     This class contains helper methods to help with common Reflection tasks.;;d0,7;;b0,0;;m">
<treenode node="getClassShortName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ReflectionHelper.php;f18;57;5;61;;;;vpos;;vmixed;;r&#10;Definition&#10;    getClassShortName($object)&#10;&#10;Description&#10;     Returns class name without namespace&#10;&#10;Parameters:&#10;     $object;;d4,58;;b1,5;;m $object;;p">
</treenode>
<treenode node="invokePrivateMethod;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ReflectionHelper.php;f18;37;5;47;;;;vpos;;vmixed;;r&#10;Definition&#10;    invokePrivateMethod($object, $method, $args = [], $class = null)&#10;&#10;Description&#10;     Invoke a private method of an object.&#10;&#10;Parameters:&#10;    object $object&#10;    string $method&#10;    array $args&#10;    string|null $class;;d4,38;;b1,5;;mobject $object;;pstring $method;;parray $args;;pstring|null $class;;p">
</treenode>
<treenode node="readPrivateProperty;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\ReflectionHelper.php;f18;16;5;26;;;;vpos;;vmixed;;r&#10;Definition&#10;    readPrivateProperty($object, $property, $class = null)&#10;&#10;Description&#10;     Read a private property of an object.&#10;&#10;Parameters:&#10;    object $object&#10;    string $property&#10;    string|null $class;;d4,17;;b1,5;;mobject $object;;pstring $property;;pstring|null $class;;p">
</treenode>
</treenode>
<treenode node="RegisterCommandCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RegisterCommandCest.php;f0;2;1;34;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
<treenode node="registerCommand;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RegisterCommandCest.php;f11;4;5;9;;;;vpos;;v;;r;;d4,5;;b1,0;;mI;;p">
</treenode>
<treenode node="registerCommandWithConfigurationAtNewPlace;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RegisterCommandCest.php;f11;11;5;16;;;;vpos;;v;;r;;d4,12;;b1,0;;mI;;p">
</treenode>
<treenode node="startMyCommand;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RegisterCommandCest.php;f11;18;5;24;;;;vpos;;v;;r;;d4,19;;b1,0;;mI;;p">
</treenode>
<treenode node="startMyCommandWithOptionAndConfigurationAtNewPlace;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RegisterCommandCest.php;f11;26;5;33;;;;vpos;;v;;r;;d4,27;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="RemoteException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\RemoteException.php;f0;3;1;10;;;;vpos;;vException;;c;;r;;d0,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\RemoteException.php;f11;5;5;9;;;;vpos;;v;;r;;d4,6;;b1,0;;mmessage;;p">
</treenode>
</treenode>
<treenode node="RemoteServer;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\RemoteServer.php;f0;14;1;89;;;;vpos;;vLocalServer;;c;;r&#10;Definition&#10;    class RemoteServer extends LocalServer&#10;&#10;Description&#10;     When collecting code coverage on remote server data is retrieved over HTTP and not merged with the local code coverage results.;;d0,15;;b0,0;;m">
<treenode node="afterSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\RemoteServer.php;f11;21;5;40;;;;vpos;;v;;r;;d4,22;;b1,0;;me;;p">
</treenode>
<treenode node="isEnabled;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\RemoteServer.php;f11;16;5;19;;;;vpos;;v;;r;;d4,17;;b1,0;;m">
</treenode>
<treenode node="retrieveAndPrintCrap4j;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\RemoteServer.php;f14;66;5;70;;;;vpos;;v;;r;;d4,67;;b2,0;;msuite;;p">
</treenode>
<treenode node="retrieveAndPrintHtml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\RemoteServer.php;f14;42;5;58;;;;vpos;;v;;r;;d4,43;;b2,0;;msuite;;p">
</treenode>
<treenode node="retrieveAndPrintPHPUnit;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\RemoteServer.php;f14;72;5;88;;;;vpos;;v;;r;;d4,73;;b2,0;;msuite;;p">
</treenode>
<treenode node="retrieveAndPrintXml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\Subscriber\RemoteServer.php;f14;60;5;64;;;;vpos;;v;;r;;d4,61;;b2,0;;msuite;;p">
</treenode>
</treenode>
<treenode node="RemoteWebDriver;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;53;83;53;;;;vpos;;vRemoteWebDriver;;c;;r;;d81,53;;b0,0;;m">
</treenode>
<treenode node="RemoteWebElement;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;63;84;63;;;;vpos;;vRemoteWebElement;;c;;r;;d82,63;;b0,0;;m">
</treenode>
<treenode node="ResponseCollector;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZendExpressive\ResponseCollector.php;f0;6;1;30;;;;vpos;;vEmitterInterface;;c;;r;;d0,7;;b0,0;;m">
<treenode node="clearResponse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZendExpressive\ResponseCollector.php;f11;26;5;29;;;;vpos;;v;;r;;d4,27;;b1,0;;m">
</treenode>
<treenode node="emit;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZendExpressive\ResponseCollector.php;f11;13;5;16;;;;vpos;;v;;r;;d4,14;;b1,0;;mresponse;;p">
</treenode>
<treenode node="getResponse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZendExpressive\ResponseCollector.php;f11;18;5;24;;;;vpos;;v;;r;;d4,19;;b1,0;;m">
</treenode>
</treenode>
<treenode node="REST;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f0;57;1;1436;;;;vpos;;vCodeceptionModule;;cDependsOnModule;;cPartedModule;;cAPI;;cConflictsWithModule;;c;;r&#10;Definition&#10;    class REST extends CodeceptionModule implements DependsOnModule, PartedModule, API, ConflictsWithModule&#10;&#10;Description&#10;     Module for testing REST WebService.;;d0,58;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;90;5;94;;;;vpos;;v;;r;;d4,91;;b1,0;;mtest;;p">
</treenode>
<treenode node="_conflicts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;103;5;106;;;;vpos;;v;;r;;d4,104;;b1,0;;m">
</treenode>
<treenode node="_depends;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;108;5;111;;;;vpos;;v;;r;;d4,109;;b1,0;;m">
</treenode>
<treenode node="_inject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;118;5;129;;;;vpos;;v;;r;;d4,119;;b1,0;;mconnection;;p">
</treenode>
<treenode node="_parts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;113;5;116;;;;vpos;;v;;r;;d4,114;;b1,0;;m">
</treenode>
<treenode node="amAWSAuthenticated;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;362;5;382;;;;vpos;;v;;r&#10;Definition&#10;    amAWSAuthenticated($additionalAWSConfig = [])&#10;&#10;Description&#10;     Allows to send REST request using AWS Authorization Only works with PhpBrowser Example Config -&#10;&#10;Parameters:&#10;    array $additionalAWSConfig;;d4,363;;b1,0;;marray $additionalAWSConfig;;p">
</treenode>
<treenode node="amBearerAuthenticated;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;302;5;305;;;;vpos;;v;;r&#10;Definition&#10;    amBearerAuthenticated($accessToken)&#10;&#10;Description&#10;     Adds Bearer authentication via access token.&#10;&#10;Parameters:&#10;     $accessToken;;d4,303;;b1,0;;m $accessToken;;p">
</treenode>
<treenode node="amDigestAuthenticated;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;287;5;293;;;;vpos;;v;;r&#10;Definition&#10;    amDigestAuthenticated($username, $password)&#10;&#10;Description&#10;     Adds Digest authentication via username/password.&#10;&#10;Parameters:&#10;     $username&#10;     $password;;d4,288;;b1,0;;m $username;;p $password;;p">
</treenode>
<treenode node="amHttpAuthenticated;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;269;5;277;;;;vpos;;v;;r&#10;Definition&#10;    amHttpAuthenticated($username, $password)&#10;&#10;Description&#10;     Adds HTTP authentication via username/password.&#10;&#10;Parameters:&#10;     $username&#10;     $password;;d4,270;;b1,0;;m $username;;p $password;;p">
</treenode>
<treenode node="amNTLMAuthenticated;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;325;5;337;;;;vpos;;v;;r&#10;Definition&#10;    amNTLMAuthenticated($username, $password)&#10;&#10;Description&#10;     Adds NTLM authentication via username/password. Requires client to be Guzzle &gt;=6.3.0 Out of scope for functional modules.&#10;&#10;Parameters:&#10;     $username&#10;     $password;;d4,326;;b1,0;;m $username;;p $password;;p">
</treenode>
<treenode node="binaryToDebugString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f14;629;5;632;;;;vpos;;vstring;;r&#10;Definition&#10;    binaryToDebugString($data)&#10;&#10;Description&#10;     Format a binary string for debug printing&#10;&#10;Parameters:&#10;    string $data - the binary data string&#10;&#10;Return:&#10;   the debug string;;d4,630;;b2,0;;mstring $data;;p">
</treenode>
<treenode node="checkFileBeforeUpload;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f12;705;5;716;;;;vpos;;v;;r;;d4,706;;b3,0;;mfile;;p">
</treenode>
<treenode node="deleteHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;178;5;181;;;;vpos;;v;;r&#10;Definition&#10;    deleteHeader($name)&#10;&#10;Description&#10;     Deletes the header with the passed name.  Subsequent requests will not have the deleted header in its request.&#10;&#10;Parameters:&#10;    string $name - the name of the header to delete;;d4,179;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="dontSeeBinaryResponseEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1383;5;1387;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeBinaryResponseEquals($hash, $algo = &apos;md5&apos;)&#10;&#10;Description&#10;     Checks if the hash of a binary response is not the same as provided.&#10;&#10;Parameters:&#10;     $hash - the hashed data response expected&#10;     $algo - the hash algorithm to use;;d4,1384;;b1,0;;m $hash;;p $algo;;p">
</treenode>
<treenode node="dontSeeHttpHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;213;5;223;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeHttpHeader($name, $value = null)&#10;&#10;Description&#10;     Checks over the given HTTP header and (optionally) its value, asserting that are not there&#10;&#10;Parameters:&#10;     $name&#10;     $value;;d4,214;;b1,0;;m $name;;p $value;;p">
</treenode>
<treenode node="dontSeeResponseCodeIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1158;5;1161;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeResponseCodeIs($code)&#10;&#10;Description&#10;     Checks that response code is not equal to provided value.&#10;&#10;Parameters:&#10;     $code;;d4,1159;;b1,0;;m $code;;p">
</treenode>
<treenode node="dontSeeResponseContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;761;5;764;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeResponseContains($text)&#10;&#10;Description&#10;     Checks whether last response do not contain text.&#10;&#10;Parameters:&#10;     $text;;d4,762;;b1,0;;m $text;;p">
</treenode>
<treenode node="dontSeeResponseContainsJson;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;991;5;1000;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeResponseContainsJson($json = [])&#10;&#10;Description&#10;     Opposite to seeResponseContainsJson&#10;&#10;Parameters:&#10;    array $json;;d4,992;;b1,0;;marray $json;;p">
</treenode>
<treenode node="dontSeeResponseJsonMatchesJsonPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;976;5;983;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeResponseJsonMatchesJsonPath($jsonPath)&#10;&#10;Description&#10;     Opposite to seeResponseJsonMatchesJsonPath&#10;&#10;Parameters:&#10;    string $jsonPath;;d4,977;;b1,0;;mstring $jsonPath;;p">
</treenode>
<treenode node="dontSeeResponseJsonMatchesXpath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;906;5;914;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeResponseJsonMatchesXpath($xpath)&#10;&#10;Description&#10;     Opposite to seeResponseJsonMatchesXpath&#10;&#10;Parameters:&#10;    string $xpath;;d4,907;;b1,0;;mstring $xpath;;p">
</treenode>
<treenode node="dontSeeResponseMatchesJsonType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1101;5;1109;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeResponseMatchesJsonType($jsonType, $jsonPath = null)&#10;&#10;Description&#10;     Opposite to `seeResponseMatchesJsonType`.&#10;&#10;Parameters:&#10;     $jsonType - jsonType structure&#10;    null $jsonPath - optionally set specific path to structure with JsonPath;;d4,1102;;b1,0;;m $jsonType;;pnull $jsonPath;;p">
</treenode>
<treenode node="dontSeeXmlResponseEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1277;5;1283;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeXmlResponseEquals($xml)&#10;&#10;Description&#10;     Checks XML response does not equal to provided XML. Comparison is done by canonicalizing both xml`s.&#10;&#10;Parameters:&#10;     $xml;;d4,1278;;b1,0;;m $xml;;p">
</treenode>
<treenode node="dontSeeXmlResponseIncludes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1318;5;1325;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeXmlResponseIncludes($xml)&#10;&#10;Description&#10;     Checks XML response does not include provided XML. Comparison is done by canonicalizing both xml`s. Parameter can be passed either as XmlBuilder, DOMDocument, DOMNode, XML string, or array (if no attributes).&#10;&#10;Parameters:&#10;     $xml;;d4,1319;;b1,0;;m $xml;;p">
</treenode>
<treenode node="dontSeeXmlResponseMatchesXpath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1215;5;1219;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeXmlResponseMatchesXpath($xpath)&#10;&#10;Description&#10;     Checks whether XML response does not match XPath&#10;&#10;Parameters:&#10;     $xpath;;d4,1216;;b1,0;;m $xpath;;p">
</treenode>
<treenode node="encodeApplicationJson;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f14;634;5;650;;;;vpos;;v;;r;;d4,635;;b2,0;;mmethod;;pparameters;;p">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f14;566;5;610;;;;vpos;;v;;r;;d4,567;;b2,0;;mmethod;;purl;;pparameters;;pfiles;;p">
</treenode>
<treenode node="formatFilesArray;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f12;652;5;695;;;;vpos;;v;;r;;d4,653;;b3,0;;mfiles;;p">
</treenode>
<treenode node="getFileType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f12;697;5;703;;;;vpos;;v;;r;;d4,698;;b3,0;;mfile;;p">
</treenode>
<treenode node="getRunningClient;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f14;131;5;137;;;;vpos;;v;;r;;d4,132;;b2,0;;m">
</treenode>
<treenode node="grabAttributeFromXmlElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1244;5;1251;;;;vpos;;vstring;;r&#10;Definition&#10;    grabAttributeFromXmlElement($cssOrXPath, $attribute)&#10;&#10;Description&#10;     Finds and returns attribute of element. Element is matched by either CSS or XPath&#10;&#10;Parameters:&#10;     $cssOrXPath&#10;     $attribute;;d4,1245;;b1,0;;m $cssOrXPath;;p $attribute;;p">
</treenode>
<treenode node="grabDataFromJsonResponse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1396;5;1403;;;;vpos;;v;;r&#10;Definition&#10;    grabDataFromJsonResponse($path)&#10;&#10;Description&#10;     Deprecated since 2.0.9 and removed since 2.1.0&#10;&#10;Parameters:&#10;     $path;;d4,1397;;b1,0;;m $path;;p">
</treenode>
<treenode node="grabDataFromResponseByJsonPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;844;5;847;;;;vpos;;varray;;r&#10;Definition&#10;    grabDataFromResponseByJsonPath($jsonPath)&#10;&#10;Description&#10;     Returns data from the current JSON response using [JSONPath](http://goessner.net/articles/JsonPath/) as selector. JsonPath is XPath equivalent for querying Json structures. Try your JsonPath expressions [online](http://jsonpath.curiousconcept.com/). Even for a single value an array is returned.&#10;&#10;Parameters:&#10;    string $jsonPath&#10;&#10;Return:&#10;   Array of matching items;;d4,845;;b1,0;;mstring $jsonPath;;p">
</treenode>
<treenode node="grabHttpHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;256;5;259;;;;vpos;;vstring;;r&#10;Definition&#10;    grabHttpHeader($name, $first = true)&#10;&#10;Description&#10;     Returns the value of the specified header name&#10;&#10;Parameters:&#10;     $name&#10;    Boolean $first - Whether to return the first value or all header values&#10;&#10;Return:&#10;   |array The first header value if $first is true, an array of values otherwise;;d4,257;;b1,0;;m $name;;pBoolean $first;;p">
</treenode>
<treenode node="grabResponse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;815;5;818;;;;vpos;;vstring;;r&#10;Definition&#10;    grabResponse()&#10;&#10;Description&#10;     Returns current response so that it can be used in next scenario steps.;;d4,816;;b1,0;;m">
</treenode>
<treenode node="grabTextContentFromXmlElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1229;5;1233;;;;vpos;;vstring;;r&#10;Definition&#10;    grabTextContentFromXmlElement($cssOrXPath)&#10;&#10;Description&#10;     Finds and returns text contents of element. Element is matched by either CSS or XPath&#10;&#10;Parameters:&#10;     $cssOrXPath;;d4,1230;;b1,0;;m $cssOrXPath;;p">
</treenode>
<treenode node="haveHttpHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;154;5;157;;;;vpos;;v;;r&#10;Definition&#10;    haveHttpHeader($name, $value)&#10;&#10;Description&#10;     Sets HTTP header valid for all next requests. Use `deleteHeader` to unset it&#10;&#10;Parameters:&#10;     $name&#10;     $value;;d4,155;;b1,0;;m $name;;p $value;;p">
</treenode>
<treenode node="isBinaryData;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f14;618;5;621;;;;vpos;;vboolean;;r&#10;Definition&#10;    isBinaryData($data)&#10;&#10;Description&#10;     Check if data has non-printable bytes and it is not a valid unicode string&#10;&#10;Parameters:&#10;    string $data - the text or binary data string;;d4,619;;b2,0;;mstring $data;;p">
</treenode>
<treenode node="resetVariables;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f14;96;5;101;;;;vpos;;v;;r;;d4,97;;b2,0;;m">
</treenode>
<treenode node="seeBinaryResponseEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1362;5;1366;;;;vpos;;v;;r&#10;Definition&#10;    seeBinaryResponseEquals($hash, $algo = &apos;md5&apos;)&#10;&#10;Description&#10;     Checks if the hash of a binary response is exactly the same as provided. Parameter can be passed as any hash string supported by hash(), with an optional second parameter to specify the hash type, which defaults to md5.&#10;&#10;Parameters:&#10;     $hash - the hashed data response expected&#10;     $algo - the hash algorithm to use;;d4,1363;;b1,0;;m $hash;;p $algo;;p">
</treenode>
<treenode node="seeHttpHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;192;5;202;;;;vpos;;v;;r&#10;Definition&#10;    seeHttpHeader($name, $value = null)&#10;&#10;Description&#10;     Checks over the given HTTP header and (optionally) its value, asserting that are there&#10;&#10;Parameters:&#10;     $name&#10;     $value;;d4,193;;b1,0;;m $name;;p $value;;p">
</treenode>
<treenode node="seeHttpHeaderOnce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;240;5;244;;;;vpos;;v;;r&#10;Definition&#10;    seeHttpHeaderOnce($name)&#10;&#10;Description&#10;     Checks that http response header is received only once. HTTP RFC2616 allows multiple response headers with the same name. You can check that you didn&apos;t accidentally sent the same header twice.&#10;&#10;Parameters:&#10;     $name;;d4,241;;b1,0;;m $name;;p">
</treenode>
<treenode node="seeResponseCodeIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1138;5;1141;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseCodeIs($code)&#10;&#10;Description&#10;     Checks response code equals to provided value.&#10;&#10;Parameters:&#10;     $code;;d4,1139;;b1,0;;m $code;;p">
</treenode>
<treenode node="seeResponseContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;749;5;752;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseContains($text)&#10;&#10;Description&#10;     Checks whether the last response contains text.&#10;&#10;Parameters:&#10;     $text;;d4,750;;b1,0;;m $text;;p">
</treenode>
<treenode node="seeResponseContainsJson;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;790;5;796;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseContainsJson($json = [])&#10;&#10;Description&#10;     Checks whether the last JSON response contains provided array. The response is converted to array with json_decode($response, true) Thus, JSON is represented by associative array. This method matches that response array contains provided array.&#10;&#10;Parameters:&#10;    array $json;;d4,791;;b1,0;;marray $json;;p">
</treenode>
<treenode node="seeResponseEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1118;5;1121;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseEquals($expected)&#10;&#10;Description&#10;     Checks if response is exactly the same as provided.&#10;&#10;Parameters:&#10;     $response;;d4,1119;;b1,0;;m $response;;p">
</treenode>
<treenode node="seeResponseIsJson;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;724;5;740;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseIsJson()&#10;&#10;Description&#10;     Checks whether last response was valid JSON. This is done with json_last_error function.;;d4,725;;b1,0;;m">
</treenode>
<treenode node="seeResponseIsXml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1169;5;1187;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseIsXml()&#10;&#10;Description&#10;     Checks whether last response was valid XML. This is done with libxml_get_last_error function.;;d4,1170;;b1,0;;m">
</treenode>
<treenode node="seeResponseJsonMatchesJsonPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;961;5;968;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseJsonMatchesJsonPath($jsonPath)&#10;&#10;Description&#10;     Checks if json structure in response matches [JsonPath](http://goessner.net/articles/JsonPath/). JsonPath is XPath equivalent for querying Json structures. Try your JsonPath expressions [online](http://jsonpath.curiousconcept.com/). This assertion allows you to check the structure of response json.&#10;&#10;Parameters:&#10;    string $jsonPath;;d4,962;;b1,0;;mstring $jsonPath;;p">
</treenode>
<treenode node="seeResponseJsonMatchesXpath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;890;5;898;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseJsonMatchesXpath($xpath)&#10;&#10;Description&#10;     Checks if json structure in response matches the xpath provided. JSON is not supposed to be checked against XPath, yet it can be converted to xml and used with XPath. This assertion allows you to check the structure of response json. * ```json { &quot;store&quot;: { &quot;book&quot;: [ { &quot;category&quot;: &quot;reference&quot;, &quot;author&quot;: &quot;Nigel Rees&quot;, &quot;title&quot;: &quot;Sayings of the Century&quot;, &quot;price&quot;: 8.95 }, { &quot;category&quot;: &quot;fiction&quot;, &quot;author&quot;: &quot;Evelyn Waugh&quot;, &quot;title&quot;: &quot;Sword of Honour&quot;, &quot;price&quot;: 12.99 } ], &quot;bicycle&quot;: { &quot;color&quot;: &quot;red&quot;, &quot;price&quot;: 19.95 } } } ```&#10;&#10;Parameters:&#10;    string $xpath;;d4,891;;b1,0;;mstring $xpath;;p">
</treenode>
<treenode node="seeResponseMatchesJsonType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1082;5;1090;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseMatchesJsonType(array $jsonType, $jsonPath = null)&#10;&#10;Description&#10;     Checks that Json matches provided types. In case you don&apos;t know the actual values of JSON data returned you can match them by type. Starts check with a root element. If JSON data is array it will check the first element of an array. You can specify the path in the json which should be checked with JsonPath&#10;&#10;Parameters:&#10;    array $jsonType&#10;    string $jsonPath;;d4,1083;;b1,0;;marray $jsonType;;pstring $jsonPath;;p">
</treenode>
<treenode node="seeXmlResponseEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1262;5;1265;;;;vpos;;v;;r&#10;Definition&#10;    seeXmlResponseEquals($xml)&#10;&#10;Description&#10;     Checks XML response equals provided XML. Comparison is done by canonicalizing both xml`s.&#10;&#10;Parameters:&#10;     $xml;;d4,1263;;b1,0;;m $xml;;p">
</treenode>
<treenode node="seeXmlResponseIncludes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1301;5;1308;;;;vpos;;v;;r&#10;Definition&#10;    seeXmlResponseIncludes($xml)&#10;&#10;Description&#10;     Checks XML response includes provided XML. Comparison is done by canonicalizing both xml`s. Parameter can be passed either as XmlBuilder, DOMDocument, DOMNode, XML string, or array (if no attributes).&#10;&#10;Parameters:&#10;     $xml;;d4,1302;;b1,0;;m $xml;;p">
</treenode>
<treenode node="seeXmlResponseMatchesXpath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1199;5;1203;;;;vpos;;v;;r&#10;Definition&#10;    seeXmlResponseMatchesXpath($xpath)&#10;&#10;Description&#10;     Checks whether XML response matches XPath&#10;&#10;Parameters:&#10;     $xpath;;d4,1200;;b1,0;;m $xpath;;p">
</treenode>
<treenode node="sendDELETE;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;498;5;501;;;;vpos;;v;;r&#10;Definition&#10;    sendDELETE($url, $params = [], $files = [])&#10;&#10;Description&#10;     Sends DELETE request to given uri.&#10;&#10;Parameters:&#10;     $url&#10;    array $params&#10;    array $files;;d4,499;;b1,0;;m $url;;parray $params;;parray $files;;p">
</treenode>
<treenode node="sendGET;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;456;5;459;;;;vpos;;v;;r&#10;Definition&#10;    sendGET($url, $params = [])&#10;&#10;Description&#10;     Sends a GET request to given uri.&#10;&#10;Parameters:&#10;     $url&#10;    array $params;;d4,457;;b1,0;;m $url;;parray $params;;p">
</treenode>
<treenode node="sendHEAD;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;430;5;433;;;;vpos;;v;;r&#10;Definition&#10;    sendHEAD($url, $params = [])&#10;&#10;Description&#10;     Sends a HEAD request to given uri.&#10;&#10;Parameters:&#10;     $url&#10;    array $params;;d4,431;;b1,0;;m $url;;parray $params;;p">
</treenode>
<treenode node="sendLINK;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;544;5;548;;;;vpos;;v;;r&#10;Definition&#10;    sendLINK($url, array $linkEntries)&#10;&#10;Description&#10;     Sends LINK request to given uri.&#10;&#10;Parameters:&#10;     $url&#10;    array $linkEntries - (entry is array with keys &quot;uri&quot; and &quot;link-param&quot;);;d4,545;;b1,0;;m $url;;parray $linkEntries;;p">
</treenode>
<treenode node="sendOPTIONS;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;443;5;446;;;;vpos;;v;;r&#10;Definition&#10;    sendOPTIONS($url, $params = [])&#10;&#10;Description&#10;     Sends an OPTIONS request to given uri.&#10;&#10;Parameters:&#10;     $url&#10;    array $params;;d4,444;;b1,0;;m $url;;parray $params;;p">
</treenode>
<treenode node="sendPATCH;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;484;5;487;;;;vpos;;v;;r&#10;Definition&#10;    sendPATCH($url, $params = [], $files = [])&#10;&#10;Description&#10;     Sends PATCH request to given uri.&#10;&#10;Parameters:&#10;     $url&#10;    array $params&#10;    array $files;;d4,485;;b1,0;;m $url;;parray $params;;parray $files;;p">
</treenode>
<treenode node="sendPOST;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;417;5;420;;;;vpos;;v;;r&#10;Definition&#10;    sendPOST($url, $params = [], $files = [])&#10;&#10;Description&#10;     Sends a POST request to given uri. Parameters and files can be provided separately.&#10;&#10;Parameters:&#10;     $url&#10;    array|\JsonSerializable $params&#10;    array $files - A list of filenames or &quot;mocks&quot; of $_FILES (each entry being an array with the following;;d4,418;;b1,0;;m $url;;parray|\JsonSerializable $params;;parray $files;;p">
</treenode>
<treenode node="sendPUT;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;470;5;473;;;;vpos;;v;;r&#10;Definition&#10;    sendPUT($url, $params = [], $files = [])&#10;&#10;Description&#10;     Sends PUT request to given uri.&#10;&#10;Parameters:&#10;     $url&#10;    array $params&#10;    array $files;;d4,471;;b1,0;;m $url;;parray $params;;parray $files;;p">
</treenode>
<treenode node="sendUNLINK;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;560;5;564;;;;vpos;;v;;r&#10;Definition&#10;    sendUNLINK($url, array $linkEntries)&#10;&#10;Description&#10;     Sends UNLINK request to given uri.&#10;&#10;Parameters:&#10;     $url&#10;    array $linkEntries - (entry is array with keys &quot;uri&quot; and &quot;link-param&quot;);;d4,561;;b1,0;;m $url;;parray $linkEntries;;p">
</treenode>
<treenode node="setHeaderLink;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f12;512;5;530;;;;vpos;;v;;r&#10;Definition&#10;    setHeaderLink(array $linkEntries)&#10;&#10;Description&#10;     Sets Headers &quot;Link&quot; as one header &quot;Link&quot; based on linkEntries&#10;&#10;Parameters:&#10;    array $linkEntries - (entry is array with keys &quot;uri&quot; and &quot;link-param&quot;);;d4,513;;b3,0;;marray $linkEntries;;p">
</treenode>
<treenode node="startFollowingRedirects;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1432;5;1435;;;;vpos;;v;;r&#10;Definition&#10;    startFollowingRedirects()&#10;&#10;Description&#10;     Enables automatic redirects to be followed by the client;;d4,1433;;b1,0;;m">
</treenode>
<treenode node="stopFollowingRedirects;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\REST.php;f11;1416;5;1419;;;;vpos;;v;;r&#10;Definition&#10;    stopFollowingRedirects()&#10;&#10;Description&#10;     Prevents automatic redirects to be followed by the client;;d4,1417;;b1,0;;m">
</treenode>
</treenode>
<treenode node="RoboFile;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f0;6;1;974;;;;vpos;;vTasks;;c;;r;;d0,7;;b0,0;;m">
<treenode node="REPO_BLOB_URL;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f9;9;23;9;;;;vpos;;v;;r&apos;https://github.com/Codeception/Codeception/blob&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STABLE_BRANCH;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f9;8;23;8;;;;vpos;;v;;r&apos;2.4&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="buildActors;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;804;5;813;;;;vpos;;v;;r;;d4,805;;b1,0;;m">
</treenode>
<treenode node="buildDocs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;271;5;280;;;;vpos;;v;;r&#10;Definition&#10;    buildDocs()&#10;&#10;Description&#10;      desc generates modules reference from source files;;d4,272;;b1,0;;m">
</treenode>
<treenode node="buildDocsApi;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;407;5;416;;;;vpos;;v;;r;;d4,408;;b1,0;;m">
</treenode>
<treenode node="buildDocsCommands;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;418;5;439;;;;vpos;;v;;r;;d4,419;;b1,0;;m">
</treenode>
<treenode node="buildDocsExtensions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;441;5;466;;;;vpos;;v;;r;;d4,442;;b1,0;;m">
</treenode>
<treenode node="buildDocsModules;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;282;5;348;;;;vpos;;v;;r;;d4,283;;b1,0;;m">
</treenode>
<treenode node="buildDocsStub;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;363;5;405;;;;vpos;;v;;r;;d4,364;;b1,0;;m">
</treenode>
<treenode node="buildDocsUtils;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;350;5;361;;;;vpos;;v;;r;;d4,351;;b1,0;;m">
</treenode>
<treenode node="buildPhar;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;166;5;175;;;;vpos;;v;;r&#10;Definition&#10;    buildPhar()&#10;&#10;Description&#10;      desc creates codecept.phar;;d4,167;;b1,0;;m">
</treenode>
<treenode node="buildPhar5;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;181;5;194;;;;vpos;;v;;r&#10;Definition&#10;    buildPhar5()&#10;&#10;Description&#10;      desc creates codecept.phar with Guzzle 5.3 and Symfony 2.8;;d4,182;;b1,0;;m">
</treenode>
<treenode node="changed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;47;5;53;;;;vpos;;v;;r;;d4,48;;b1,0;;mchange;;p">
</treenode>
<treenode node="clean;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;788;5;802;;;;vpos;;v;;r&#10;Definition&#10;    clean()&#10;&#10;Description&#10;      desc cleans all log and temp directories;;d4,789;;b1,0;;m">
</treenode>
<treenode node="cloneSite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f14;815;5;823;;;;vpos;;v;;r;;d4,816;;b2,0;;m">
</treenode>
<treenode node="codestyleCheck;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;903;5;913;;;;vpos;;v;;r&#10;Definition&#10;    codestyleCheck($opt = [&apos;report|r&apos; =&gt; &apos;summary&apos;])&#10;&#10;Description&#10;     Checks Codeception code style Most useful values for `report` option: `full`, `summary`, `diff`&#10;&#10;Parameters:&#10;    array $opt;;d4,904;;b1,0;;marray $opt;;p">
</treenode>
<treenode node="codestyleFix;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;915;5;922;;;;vpos;;v;;r;;d4,916;;b1,0;;m">
</treenode>
<treenode node="documentApiClass;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f14;929;5;973;;;;vpos;;v;;r&#10;Definition&#10;    documentApiClass($file, $className, $all = false)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $file&#10;     $className&#10;     $source;;d4,930;;b2,0;;m $file;;p $className;;p $source;;p">
</treenode>
<treenode node="installDependenciesForPhp5;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f12;133;5;141;;;;vpos;;v;;r;;d4,134;;b3,0;;m">
</treenode>
<treenode node="installDependenciesForPhp70;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f12;143;5;151;;;;vpos;;v;;r;;d4,144;;b3,0;;m">
</treenode>
<treenode node="packPhar;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f12;196;5;266;;;;vpos;;v;;r;;d4,197;;b3,0;;mpharFileName;;p">
</treenode>
<treenode node="processChangelog;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f14;753;5;783;;;;vpos;;v;;r;;d4,754;;b2,0;;m">
</treenode>
<treenode node="publishBase;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;845;5;895;;;;vpos;;v;;r&#10;Definition&#10;    publishBase($branch = null, $tag = null)&#10;&#10;Description&#10;     Publishes Codeception base&#10;&#10;Parameters:&#10;    null $branch&#10;    null $tag;;d4,846;;b1,0;;mnull $branch;;pnull $tag;;p">
</treenode>
<treenode node="publishDocs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;550;5;733;;;;vpos;;v;;r&#10;Definition&#10;    publishDocs()&#10;&#10;Description&#10;     Updates docs on codeception.com;;d4,551;;b1,0;;m">
</treenode>
<treenode node="publishGit;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;740;5;751;;;;vpos;;v;;r&#10;Definition&#10;    publishGit($branch = null, $opt = [&apos;tag|t&apos; =&gt; null])&#10;&#10;Description&#10;      desc creates a new version tag and pushes to github&#10;&#10;Parameters:&#10;    null $branch&#10;    array $opt;;d4,741;;b1,0;;mnull $branch;;parray $opt;;p">
</treenode>
<treenode node="publishPhar;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;471;5;544;;;;vpos;;v;;r&#10;Definition&#10;    publishPhar()&#10;&#10;Description&#10;      desc publishes generated phar to codeception.com;;d4,472;;b1,0;;m">
</treenode>
<treenode node="publishSite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f14;825;5;838;;;;vpos;;v;;r;;d4,826;;b2,0;;m">
</treenode>
<treenode node="release;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;11;5;24;;;;vpos;;v;;r;;d4,12;;b1,0;;m">
</treenode>
<treenode node="revertComposerJsonChanges;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f12;153;5;159;;;;vpos;;v;;r;;d4,154;;b3,0;;m">
</treenode>
<treenode node="server;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f14;55;5;61;;;;vpos;;v;;r;;d4,56;;b2,0;;m">
</treenode>
<treenode node="testCli;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;122;5;131;;;;vpos;;v;;r;;d4,123;;b1,0;;m">
</treenode>
<treenode node="testCoverage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;87;5;93;;;;vpos;;v;;r;;d4,88;;b1,0;;m">
</treenode>
<treenode node="testLaunchServer;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;111;5;120;;;;vpos;;v;;r;;d4,112;;b1,0;;m">
</treenode>
<treenode node="testPhpbrowser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;63;5;71;;;;vpos;;v;;r;;d4,64;;b1,0;;margs;;popt;;p">
</treenode>
<treenode node="testRestBrowser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;73;5;85;;;;vpos;;v;;r;;d4,74;;b1,0;;margs;;popt;;p">
</treenode>
<treenode node="testWebdriver;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;95;5;109;;;;vpos;;v;;r;;d4,96;;b1,0;;margs;;popt;;p">
</treenode>
<treenode node="update;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;40;5;45;;;;vpos;;v;;r;;d4,41;;b1,0;;m">
</treenode>
<treenode node="versionBump;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\RoboFile.php;f11;26;5;38;;;;vpos;;v;;r;;d4,27;;b1,0;;mversion;;p">
</treenode>
</treenode>
<treenode node="RoleFilter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\RoleFilter.php;f0;20;1;62;;;;vpos;;vSimpleFilter;;c;;r&#10;Definition&#10;    class RoleFilter extends SimpleFilter&#10;&#10;Description&#10;     Filters features by their actors role.;;d0,21;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\RoleFilter.php;f11;29;5;37;;;;vpos;;v;;r&#10;Definition&#10;    __construct($role)&#10;&#10;Description&#10;     Initializes filter.&#10;&#10;Parameters:&#10;    string $role - Approved role wildcard;;d4,30;;b1,0;;mstring $role;;p">
</treenode>
<treenode node="isFeatureMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\RoleFilter.php;f11;46;5;49;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isFeatureMatch(FeatureNode $feature)&#10;&#10;Description&#10;     Checks if Feature matches specified filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature - Feature instance;;d4,47;;b1,0;;mFeatureNode $feature;;p">
</treenode>
<treenode node="isScenarioMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\RoleFilter.php;f11;58;5;61;;;;vpos;;vfalse;;r&#10;Definition&#10;    isScenarioMatch(ScenarioInterface $scenario)&#10;&#10;Description&#10;     Checks if scenario or outline matches specified filter.&#10;&#10;Parameters:&#10;    ScenarioInterface $scenario - Scenario or Outline node instance&#10;&#10;Return:&#10;   This filter is designed to work only with features;;d4,59;;b1,0;;mScenarioInterface $scenario;;p">
</treenode>
</treenode>
<treenode node="RoleFilterTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\RoleFilterTest.php;f0;7;1;72;;;;vpos;;vFilterTest;;c;;r;;d0,8;;b0,0;;m">
<treenode node="testFeatureRolePrefixedWithAn;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\RoleFilterTest.php;f11;41;5;71;;;;vpos;;v;;r;;d4,42;;b1,0;;m">
</treenode>
<treenode node="testIsFeatureMatchFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\RoleFilterTest.php;f11;9;5;39;;;;vpos;;v;;r;;d4,10;;b1,0;;m">
</treenode>
</treenode>
<treenode node="RuleTrait;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\RuleTrait.php;f0;12;1;39;;;;vpos;;v;;r&#10;Definition&#10;    trait RuleTrait&#10;&#10;Description&#10;     Adds horizontal rules;;d0,13;;b0,0;;m">
<treenode node="consumeHr;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\RuleTrait.php;f11;26;2;29;;;;vpos;;v;;r&#10;Definition&#10;    consumeHr($lines, $current)&#10;&#10;Description&#10;     Consume a horizontal rule;;d1,27;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="identifyHr;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\RuleTrait.php;f11;17;2;21;;;;vpos;;v;;r&#10;Definition&#10;    identifyHr($line)&#10;&#10;Description&#10;     identify a line as a horizontal rule.;;d1,18;;b2,0;;mline;;p">
</treenode>
<treenode node="renderHr;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\RuleTrait.php;f11;34;2;37;;;;vpos;;v;;r&#10;Definition&#10;    renderHr($block)&#10;&#10;Description&#10;     Renders a horizontal rule;;d1,35;;b2,0;;mblock;;p">
</treenode>
</treenode>
<treenode node="Run;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f0;90;1;557;;;;vpos;;vCommand;;cConfig;;c;;r&#10;Definition&#10;    class Run extends Command&#10;&#10;Description&#10;     Executes tests.;;d0,91;;b0,0;;m">
<treenode node="booleanOptions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f14;531;5;544;;;;vpos;;v;;r;;d4,532;;b2,0;;minput;;poptions;;p">
</treenode>
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f14;118;5;206;;;;vpos;;v;;r&#10;Definition&#10;    configure()&#10;&#10;Description&#10;     Sets Run arguments;;d4,119;;b2,0;;m">
</treenode>
<treenode node="currentNamespace;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f14;442;5;453;;;;vpos;;v;;r;;d4,443;;b2,0;;m">
</treenode>
<treenode node="ensureCurlIsAvailable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f12;546;5;556;;;;vpos;;v;;r;;d4,547;;b3,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f11;221;5;382;;;;vpos;;vint;;r&#10;Definition&#10;    execute(InputInterface $input, OutputInterface $output)&#10;&#10;Description&#10;     Executes Run&#10;&#10;Parameters:&#10;    \Symfony\Component\Console\Input\InputInterface $input&#10;    \Symfony\Component\Console\Output\OutputInterface $output&#10;&#10;Return:&#10;   |null|void;;d4,222;;b1,0;;m\Symfony\Component\Console\Input\InputInterface $input;;p\Symfony\Component\Console\Output\OutputInterface $output;;p">
</treenode>
<treenode node="getDescription;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f11;208;5;211;;;;vpos;;v;;r;;d4,209;;b1,0;;m">
</treenode>
<treenode node="matchFilteredTestName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f12;488;5;503;;;;vpos;;v;;r;;d4,489;;b3,0;;mpath;;p">
</treenode>
<treenode node="matchSingleTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f14;384;5;414;;;;vpos;;v;;r;;d4,385;;b2,0;;msuite;;pconfig;;p">
</treenode>
<treenode node="matchTestFromFilename;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f14;472;5;486;;;;vpos;;v;;r;;d4,473;;b2,0;;mfilename;;ptestsPath;;p">
</treenode>
<treenode node="passedOptionKeys;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f14;505;5;529;;;;vpos;;v;;r;;d4,506;;b2,0;;minput;;p">
</treenode>
<treenode node="runIncludedSuites;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f14;422;5;439;;;;vpos;;v;;r&#10;Definition&#10;    runIncludedSuites($suites, $parent_dir)&#10;&#10;Description&#10;     Runs included suites recursively&#10;&#10;Parameters:&#10;    array $suites&#10;    string $parent_dir;;d4,423;;b2,0;;marray $suites;;pstring $parent_dir;;p">
</treenode>
<treenode node="runSuites;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Run.php;f14;455;5;470;;;;vpos;;v;;r;;d4,456;;b2,0;;msuites;;pskippedSuites;;p">
</treenode>
</treenode>
<treenode node="RunCest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f0;2;1;496;;;;vpos;;v;;r;;d0,3;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;4;5;7;;;;vpos;;v;;r;;d4,5;;b1,0;;mI;;p">
</treenode>
<treenode node="checkExampleFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f14;403;5;409;;;;vpos;;v;;r;;d4,404;;b2,0;;mI;;p">
</treenode>
<treenode node="overrideConfigOptionsToChangeReporter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;421;5;429;;;;vpos;;v;;r;;d4,422;;b1,0;;mI;;p">
</treenode>
<treenode node="overrideModuleOptions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;431;5;437;;;;vpos;;v;;r;;d4,432;;b1,0;;mI;;p">
</treenode>
<treenode node="reportsCorrectFailedStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;346;5;351;;;;vpos;;v;;r;;d4,347;;b1,0;;mI;;p">
</treenode>
<treenode node="runCestWithTwoFailedTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;477;5;484;;;;vpos;;v;;r;;d4,478;;b1,0;;mI;;p">
</treenode>
<treenode node="runCustomReport;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;99;5;107;;;;vpos;;v;;r&#10;Definition&#10;    runCustomReport(\CliGuy $I)&#10;&#10;Description&#10;      group reports&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,100;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runDependentCest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;311;5;315;;;;vpos;;v;;r;;d4,312;;b1,0;;mI;;p">
</treenode>
<treenode node="runDependentTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;317;5;323;;;;vpos;;v;;r;;d4,318;;b1,0;;mI;;p">
</treenode>
<treenode node="runErrorTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;225;5;231;;;;vpos;;v;;r;;d4,226;;b1,0;;mI;;p">
</treenode>
<treenode node="runFailedTestAndCheckOutput;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;461;5;469;;;;vpos;;v;;r;;d4,462;;b1,0;;mI;;p">
</treenode>
<treenode node="runFailingGherkinTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;353;5;358;;;;vpos;;v;;r;;d4,354;;b1,0;;mI;;p">
</treenode>
<treenode node="runGherkinScenarioOutline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;369;5;373;;;;vpos;;v;;r;;d4,370;;b1,0;;mI;;p">
</treenode>
<treenode node="runGherkinScenarioWithMultipleStepDefinitions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;360;5;367;;;;vpos;;v;;r;;d4,361;;b1,0;;mI;;p">
</treenode>
<treenode node="runGherkinTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;325;5;344;;;;vpos;;v;;r;;d4,326;;b1,0;;mI;;p">
</treenode>
<treenode node="runHtml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;30;5;35;;;;vpos;;v;;r&#10;Definition&#10;    runHtml(\CliGuy $I)&#10;&#10;Description&#10;      group reports&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,31;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runJsonReport;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;42;5;49;;;;vpos;;v;;r&#10;Definition&#10;    runJsonReport(\CliGuy $I)&#10;&#10;Description&#10;      group reports&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,43;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runOneFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;9;5;14;;;;vpos;;v;;r;;d4,10;;b1,0;;mI;;p">
</treenode>
<treenode node="runOneFileWithColors;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;16;5;22;;;;vpos;;v;;r;;d4,17;;b1,0;;mI;;p">
</treenode>
<treenode node="runOneGroup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;109;5;115;;;;vpos;;v;;r;;d4,110;;b1,0;;mI;;p">
</treenode>
<treenode node="runOneGroupWithDataProviders;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;181;5;189;;;;vpos;;v;;r;;d4,182;;b1,0;;mI;;p">
</treenode>
<treenode node="runOneTestFromCest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;164;5;169;;;;vpos;;v;;r;;d4,165;;b1,0;;mI;;p">
</treenode>
<treenode node="runOneTestFromUnit;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;156;5;162;;;;vpos;;v;;r;;d4,157;;b1,0;;mI;;p">
</treenode>
<treenode node="runTapReport;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;56;5;61;;;;vpos;;v;;r&#10;Definition&#10;    runTapReport(\CliGuy $I)&#10;&#10;Description&#10;      group reports&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,57;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestsWithDependencyInjections;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;213;5;223;;;;vpos;;v;;r;;d4,214;;b1,0;;mI;;p">
</treenode>
<treenode node="runTestsWithSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;243;5;253;;;;vpos;;v;;r;;d4,244;;b1,0;;mI;;p">
</treenode>
<treenode node="runTestWithAnnotationDataprovider;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;455;5;459;;;;vpos;;v;;r;;d4,456;;b1,0;;mI;;p">
</treenode>
<treenode node="runTestWithAnnotationExamples;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;380;5;383;;;;vpos;;v;;r&#10;Definition&#10;    runTestWithAnnotationExamples(CliGuy $I)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    CliGuy $I;;d4,381;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestWithAnnotationExamplesFromGroupFileTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;440;5;444;;;;vpos;;v;;r;;d4,441;;b1,0;;mI;;p">
</treenode>
<treenode node="runTestWithArrayExamples;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;398;5;401;;;;vpos;;v;;r&#10;Definition&#10;    runTestWithArrayExamples(CliGuy $I)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    CliGuy $I;;d4,399;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestWithComplexExample;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;411;5;419;;;;vpos;;v;;r;;d4,412;;b1,0;;mI;;p">
</treenode>
<treenode node="runTestWithCustomSetupMethod;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;471;5;475;;;;vpos;;v;;r;;d4,472;;b1,0;;mI;;p">
</treenode>
<treenode node="runTestWithDataProviders;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;171;5;179;;;;vpos;;v;;r;;d4,172;;b1,0;;mI;;p">
</treenode>
<treenode node="runTestWithException;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;233;5;241;;;;vpos;;v;;r;;d4,234;;b1,0;;mI;;p">
</treenode>
<treenode node="runTestWithFailedScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;258;5;283;;;;vpos;;v;;r&#10;Definition&#10;    runTestWithFailedScenario(\CliGuy $I, $scenario)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    CliGuy $I;;d4,259;;b1,0;;mI;;pscenario;;p">
</treenode>
<treenode node="runTestWithFailFast;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;191;5;199;;;;vpos;;v;;r;;d4,192;;b1,0;;mI;;p">
</treenode>
<treenode node="runTestWithJsonExamples;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;389;5;392;;;;vpos;;v;;r&#10;Definition&#10;    runTestWithJsonExamples(CliGuy $I)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    CliGuy $I;;d4,390;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runTestWithSubSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;288;5;309;;;;vpos;;v;;r&#10;Definition&#10;    runTestWithSubSteps(\CliGuy $I, $scenario)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    CliGuy $I;;d4,289;;b1,0;;mI;;pscenario;;p">
</treenode>
<treenode node="runTwoSuites;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;136;5;142;;;;vpos;;v;;r;;d4,137;;b1,0;;mI;;p">
</treenode>
<treenode node="runWarningTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;487;5;494;;;;vpos;;v;;r;;d4,488;;b1,0;;mI;;p">
</treenode>
<treenode node="runWithCustomOutputPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;201;5;211;;;;vpos;;v;;r;;d4,202;;b1,0;;mI;;p">
</treenode>
<treenode node="runXmlReport;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;68;5;77;;;;vpos;;v;;r&#10;Definition&#10;    runXmlReport(\CliGuy $I)&#10;&#10;Description&#10;      group reports&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,69;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="runXmlReportsInStrictMode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;83;5;92;;;;vpos;;v;;r&#10;Definition&#10;    runXmlReportsInStrictMode(\CliGuy $I)&#10;&#10;Description&#10;      group reports&#10;&#10;Parameters:&#10;    CliGuy $I;;d4,84;;b1,0;;mCliGuy $I;;p">
</treenode>
<treenode node="skipGroupOfCest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;125;5;134;;;;vpos;;v;;r;;d4,126;;b1,0;;mI;;p">
</treenode>
<treenode node="skipRunOneGroup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;117;5;123;;;;vpos;;v;;r;;d4,118;;b1,0;;mI;;p">
</treenode>
<treenode node="skipSuites;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;144;5;154;;;;vpos;;v;;r;;d4,145;;b1,0;;mI;;p">
</treenode>
<treenode node="testsWithConditionalFails;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\tests\cli\RunCest.php;f11;446;5;453;;;;vpos;;v;;r;;d4,447;;b1,0;;mI;;p">
</treenode>
</treenode>
<treenode node="RunFailed;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\RunFailed.php;f0;32;1;79;;;;vpos;;vExtension;;c;;r&#10;Definition&#10;    class RunFailed extends Extension&#10;&#10;Description&#10;     Saves failed tests into tests/log/failed in order to rerun failed tests.;;d0,33;;b0,0;;m">
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\RunFailed.php;f11;41;5;48;;;;vpos;;v;;r;;d4,42;;b1,0;;m">
</treenode>
<treenode node="localizePath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\RunFailed.php;f14;71;5;78;;;;vpos;;v;;r;;d4,72;;b2,0;;mpath;;p">
</treenode>
<treenode node="saveFailed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\RunFailed.php;f11;50;5;69;;;;vpos;;v;;r;;d4,51;;b1,0;;me;;p">
</treenode>
</treenode>
<treenode node="RunProcess;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\RunProcess.php;f0;51;1;104;;;;vpos;;vExtension;;c;;r&#10;Definition&#10;    class RunProcess extends Extension&#10;&#10;Description&#10;     Extension to start and stop processes per suite. Can be used to start/stop selenium server, chromedriver, phantomjs, mailcatcher, etc.;;d0,52;;b0,0;;m">
<treenode node="__destruct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\RunProcess.php;f11;87;5;90;;;;vpos;;v;;r;;d4,88;;b1,0;;m">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\RunProcess.php;f11;62;5;67;;;;vpos;;v;;r;;d4,63;;b1,0;;m">
</treenode>
<treenode node="runProcess;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\RunProcess.php;f11;69;5;85;;;;vpos;;v;;r;;d4,70;;b1,0;;m">
</treenode>
<treenode node="stopProcess;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\RunProcess.php;f11;92;5;103;;;;vpos;;v;;r;;d4,93;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Scenario;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f0;7;1;167;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
<treenode node="__call;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;146;5;150;;;;vpos;;v;;r;;d4,147;;b1,0;;mmethod;;pargs;;p">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;35;5;39;;;;vpos;;v;;r&#10;Definition&#10;    __construct(TestInterface $test)&#10;&#10;Description&#10;     Constructor&#10;&#10;Parameters:&#10;    TestInterface $test;;d4,36;;b1,0;;mTestInterface $test;;p">
</treenode>
<treenode node="addStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;89;5;92;;;;vpos;;v;;r;;d4,90;;b1,0;;mstep;;p">
</treenode>
<treenode node="comment;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;131;5;134;;;;vpos;;v;;r;;d4,132;;b1,0;;mcomment;;p">
</treenode>
<treenode node="current;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;56;5;59;;;;vpos;;v;;r;;d4,57;;b1,0;;mkey;;p">
</treenode>
<treenode node="getFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;46;5;49;;;;vpos;;v;;r;;d4,47;;b1,0;;m">
</treenode>
<treenode node="getGroups;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;51;5;54;;;;vpos;;v;;r;;d4,52;;b1,0;;m">
</treenode>
<treenode node="getHtml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;104;5;118;;;;vpos;;v;;r;;d4,105;;b1,0;;m">
</treenode>
<treenode node="getMetaStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;163;5;166;;;;vpos;;vStep;;r&#10;Definition&#10;    getMetaStep()&#10;&#10;Description&#10;      \Meta&#10;&#10;Return:&#10;   \Meta;;d4,164;;b1,0;;m">
</treenode>
<treenode node="getSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;99;5;102;;;;vpos;;varray;;r&#10;Definition&#10;    getSteps()&#10;&#10;Description&#10;     Returns the steps of this scenario.;;d4,100;;b1,0;;m">
</treenode>
<treenode node="getText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;120;5;129;;;;vpos;;v;;r;;d4,121;;b1,0;;m">
</treenode>
<treenode node="incomplete;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;141;5;144;;;;vpos;;v;;r;;d4,142;;b1,0;;mmessage;;p">
</treenode>
<treenode node="runStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;61;5;87;;;;vpos;;v;;r;;d4,62;;b1,0;;mstep;;p">
</treenode>
<treenode node="setFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;41;5;44;;;;vpos;;v;;r;;d4,42;;b1,0;;mfeature;;p">
</treenode>
<treenode node="setMetaStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;155;5;158;;;;vpos;;v;;r&#10;Definition&#10;    setMetaStep($metaStep)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    Step\Meta $metaStep;;d4,156;;b1,0;;mStep\Meta $metaStep;;p">
</treenode>
<treenode node="skip;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Scenario.php;f11;136;5;139;;;;vpos;;v;;r;;d4,137;;b1,0;;mmessage;;p">
</treenode>
</treenode>
<treenode node="ScenarioLoader;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\ScenarioLoader.php;f0;7;1;53;;;;vpos;;v;;r;;d0,8;;b0,0;;m">
<treenode node="createScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\ScenarioLoader.php;f14;19;5;22;;;;vpos;;v;;r;;d4,20;;b2,0;;m">
</treenode>
<treenode node="getFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\ScenarioLoader.php;f11;32;5;35;;;;vpos;;v;;r;;d4,33;;b1,0;;m">
</treenode>
<treenode node="getMetadata;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\ScenarioLoader.php;f20;17;42;17;;;;vpos;;vMetadata;;r&#10;Description&#10;     ;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="getParser;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\ScenarioLoader.php;f23;51;43;51;;;;vpos;;vParser;;r&#10;Description&#10;     ;;d-1,-1;;b2,0;;m">
</treenode>
<treenode node="getScenario;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\ScenarioLoader.php;f11;27;5;30;;;;vpos;;vScenario;;r&#10;Definition&#10;    getScenario()&#10;&#10;Description&#10;     ;;d4,28;;b1,0;;m">
</treenode>
<treenode node="getScenarioText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\ScenarioLoader.php;f11;37;5;46;;;;vpos;;v;;r;;d4,38;;b1,0;;mformat;;p">
</treenode>
<treenode node="getSourceCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Feature\ScenarioLoader.php;f20;52;44;52;;;;vpos;;v;;r;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="ScenarioNode;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioNode.php;f0;17;1;149;;;;vpos;;vScenarioInterface;;c;;r&#10;Definition&#10;    class ScenarioNode implements ScenarioInterface&#10;&#10;Description&#10;     Represents Gherkin Scenario.;;d0,18;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioNode.php;f11;49;5;56;;;;vpos;;v;;r&#10;Definition&#10;    __construct($title, array $tags, array $steps, $keyword, $line)&#10;&#10;Description&#10;     Initializes scenario.&#10;&#10;Parameters:&#10;    null|string $title&#10;    array $tags&#10;    StepNode[] $steps&#10;    string $keyword&#10;    integer $line;;d4,50;;b1,0;;mnull|string $title;;parray $tags;;pStepNode[] $steps;;pstring $keyword;;pinteger $line;;p">
</treenode>
<treenode node="getKeyword;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioNode.php;f11;135;5;138;;;;vpos;;vstring;;r&#10;Definition&#10;    getKeyword()&#10;&#10;Description&#10;     Returns scenario keyword.;;d4,136;;b1,0;;m">
</treenode>
<treenode node="getLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioNode.php;f11;145;5;148;;;;vpos;;vinteger;;r&#10;Definition&#10;    getLine()&#10;&#10;Description&#10;     Returns scenario declaration line number.;;d4,146;;b1,0;;m">
</treenode>
<treenode node="getNodeType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioNode.php;f11;63;5;66;;;;vpos;;vstring;;r&#10;Definition&#10;    getNodeType()&#10;&#10;Description&#10;     Returns node type string;;d4,64;;b1,0;;m">
</treenode>
<treenode node="getSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioNode.php;f11;125;5;128;;;;vpos;;vStepNode;;r&#10;Definition&#10;    getSteps()&#10;&#10;Description&#10;     Returns scenario steps.&#10;&#10;Return:&#10;   [];;d4,126;;b1,0;;m">
</treenode>
<treenode node="getTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioNode.php;f11;105;5;108;;;;vpos;;varray;;r&#10;Definition&#10;    getTags()&#10;&#10;Description&#10;     Returns scenario tags (including inherited from feature).;;d4,106;;b1,0;;m">
</treenode>
<treenode node="getTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioNode.php;f11;73;5;76;;;;vpos;;vnull;;r&#10;Definition&#10;    getTitle()&#10;&#10;Description&#10;     Returns scenario title.&#10;&#10;Return:&#10;   |string;;d4,74;;b1,0;;m">
</treenode>
<treenode node="hasSteps;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioNode.php;f11;115;5;118;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasSteps()&#10;&#10;Description&#10;     Checks if scenario has steps.;;d4,116;;b1,0;;m">
</treenode>
<treenode node="hasTag;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioNode.php;f11;85;5;88;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasTag($tag)&#10;&#10;Description&#10;     Checks if scenario is tagged with tag.&#10;&#10;Parameters:&#10;    string $tag;;d4,86;;b1,0;;mstring $tag;;p">
</treenode>
<treenode node="hasTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\ScenarioNode.php;f11;95;5;98;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasTags()&#10;&#10;Description&#10;     Checks if scenario has tags (both inherited from feature and own).;;d4,96;;b1,0;;m">
</treenode>
</treenode>
<treenode node="SelfUpdate;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f0;16;1;310;;;;vpos;;vCommand;;c;;r&#10;Definition&#10;    class SelfUpdate extends Command&#10;&#10;Description&#10;     Auto-updates phar archive from official site: &apos;http://codeception.com/codecept.phar&apos; .;;d0,17;;b0,0;;m">
<treenode node="GITHUB_REPO;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f9;22;21;22;;;;vpos;;v;;r&apos;Codeception/Codeception&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="NAME;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f9;21;14;21;;;;vpos;;v;;r&#10;Description&#10;     Class constants;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHAR_URL;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f9;23;18;23;;;;vpos;;v;;r&apos;http://codeception.com/releases/%s/codecept.phar&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="PHAR_URL_PHP54;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f9;24;24;24;;;;vpos;;v;;r&apos;http://codeception.com/releases/%s/php54/codecept.phar&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="configure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f14;41;5;59;;;;vpos;;v;;r&#10;Definition&#10;    configure()&#10;&#10;Description&#10;     { inheritdoc};;d4,42;;b2,0;;m">
</treenode>
<treenode node="execute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f11;72;5;117;;;;vpos;;v;;r&#10;Definition&#10;    execute(InputInterface $input, OutputInterface $output)&#10;&#10;Description&#10;     { inheritdoc};;d4,73;;b1,0;;minput;;poutput;;p">
</treenode>
<treenode node="filterStableVersions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f12;152;5;157;;;;vpos;;varray;;r&#10;Definition&#10;    filterStableVersions($tags)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    array $tags;;d4,153;;b3,0;;marray $tags;;p">
</treenode>
<treenode node="getCurrentVersion;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f14;64;5;67;;;;vpos;;vstring;;r&#10;Definition&#10;    getCurrentVersion()&#10;&#10;Description&#10;     ;;d4,65;;b2,0;;m">
</treenode>
<treenode node="getGithubTags;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f14;165;5;177;;;;vpos;;varray;;r&#10;Definition&#10;    getGithubTags($repo)&#10;&#10;Description&#10;     Returns an array of tags from a github repo.&#10;&#10;Parameters:&#10;    string $repo - The repository name to check upon;;d4,166;;b2,0;;mstring $repo;;p">
</treenode>
<treenode node="getLatestStableVersion;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f12;134;5;146;;;;vpos;;vstring;;r&#10;Definition&#10;    getLatestStableVersion()&#10;&#10;Description&#10;     ;;d4,135;;b3,0;;m">
</treenode>
<treenode node="getPharUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f14;301;5;309;;;;vpos;;vstring;;r&#10;Definition&#10;    getPharUrl($version)&#10;&#10;Description&#10;     Returns Phar file URL for specified version&#10;&#10;Parameters:&#10;    string $version;;d4,302;;b2,0;;mstring $version;;p">
</treenode>
<treenode node="isOutOfDate;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f12;126;5;129;;;;vpos;;vboolean;;r&#10;Definition&#10;    isOutOfDate($version, $latestVersion)&#10;&#10;Description&#10;     Checks whether the provided version is current.&#10;&#10;Parameters:&#10;    string $version - The version number to check&#10;    string $latestVersion - Latest stable version&#10;&#10;Return:&#10;   Returns True if a new version is available;;d4,127;;b3,0;;mstring $version;;pstring $latestVersion;;p">
</treenode>
<treenode node="prepareContext;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f12;233;5;245;;;;vpos;;vresource;;r&#10;Definition&#10;    prepareContext($url)&#10;&#10;Description&#10;     Preparing context for request&#10;&#10;Parameters:&#10;     $url;;d4,234;;b3,0;;m $url;;p">
</treenode>
<treenode node="prepareProxy;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f12;210;5;225;;;;vpos;;v;;r&#10;Definition&#10;    prepareProxy(&amp;$opt, $url)&#10;&#10;Description&#10;     Add proxy support to context if environment variable was set up&#10;&#10;Parameters:&#10;    array $opt - context options&#10;    string $url;;d4,211;;b3,0;;marray $opt;;pstring $url;;p">
</treenode>
<treenode node="retrieveContentFromUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f12;186;5;202;;;;vpos;;vstring;;r&#10;Definition&#10;    retrieveContentFromUrl($url)&#10;&#10;Description&#10;     Retrieves the body-content from the provided URL.&#10;&#10;Parameters:&#10;    string $url;;d4,187;;b3,0;;mstring $url;;p">
</treenode>
<treenode node="retrievePharFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\SelfUpdate.php;f14;254;5;293;;;;vpos;;v;;r&#10;Definition&#10;    retrievePharFile($version, OutputInterface $output)&#10;&#10;Description&#10;     Retrieves the latest phar file.&#10;&#10;Parameters:&#10;    string $version&#10;    OutputInterface $output;;d4,255;;b2,0;;mstring $version;;pOutputInterface $output;;p">
</treenode>
</treenode>
<treenode node="Sequence;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Sequence.php;f0;99;1;121;;;;vpos;;vCodeceptionModule;;c;;r&#10;Definition&#10;    class Sequence extends CodeceptionModule&#10;&#10;Description&#10;     Sequence solves data cleanup issue in alternative way. Instead cleaning up the database between tests, you can use generated unique names, that should not conflict. When you create article on a site, for instance, you can assign it a unique name and then check it.;;d0,100;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Sequence.php;f11;112;5;115;;;;vpos;;v;;r;;d4,113;;b1,0;;mt;;p">
</treenode>
<treenode node="_afterSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Sequence.php;f11;117;5;120;;;;vpos;;v;;r;;d4,118;;b1,0;;m">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Sequence.php;f11;107;5;110;;;;vpos;;v;;r;;d4,108;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Silex;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Silex.php;f0;55;1;149;;;;vpos;;vFramework;;cDoctrineProvider;;c;;r&#10;Definition&#10;    class Silex extends Framework implements DoctrineProvider&#10;&#10;Description&#10;     Module for testing Silex applications like you would regularly do with Silex\WebTestCase. This module uses Symfony2 Crawler and HttpKernel to emulate requests and get response.;;d0,56;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Silex.php;f11;76;5;80;;;;vpos;;v;;r;;d4,77;;b1,0;;mtest;;p">
</treenode>
<treenode node="_getEntityManager;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Silex.php;f11;82;5;89;;;;vpos;;v;;r;;d4,83;;b1,0;;m">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Silex.php;f11;67;5;74;;;;vpos;;v;;r;;d4,68;;b1,0;;m">
</treenode>
<treenode node="getInternalDomains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Silex.php;f11;137;5;148;;;;vpos;;varray;;r&#10;Definition&#10;    getInternalDomains()&#10;&#10;Description&#10;     Returns a list of recognized domain names;;d4,138;;b1,0;;m">
</treenode>
<treenode node="grabService;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Silex.php;f11;127;5;130;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabService($service)&#10;&#10;Description&#10;     Return an instance of a class from the Container.&#10;&#10;Parameters:&#10;    string $service;;d4,128;;b1,0;;mstring $service;;p">
</treenode>
<treenode node="loadApp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Silex.php;f14;91;5;112;;;;vpos;;v;;r;;d4,92;;b2,0;;m">
</treenode>
</treenode>
<treenode node="SimpleFilter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\SimpleFilter.php;f9;19;1;55;;;;vpos;;vFilterInterface;;c;;r&#10;Definition&#10;    class SimpleFilter implements FilterInterface&#10;&#10;Description&#10;     Abstract filter class.;;d0,20;;b0,0;;m">
<treenode node="filterFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\SimpleFilter.php;f11;28;5;54;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    filterFeature(FeatureNode $feature)&#10;&#10;Description&#10;     Filters feature according to the filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature;;d4,29;;b1,0;;mFeatureNode $feature;;p">
</treenode>
</treenode>
<treenode node="SimpleReporter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\SimpleReporter.php;f0;12;1;60;;;;vpos;;vExtension;;c;;r&#10;Definition&#10;    class SimpleReporter extends Extension&#10;&#10;Description&#10;     This extension demonstrates how you can implement console output of your own. Recommended to be used for development purposes only.;;d0,13;;b0,0;;m">
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\SimpleReporter.php;f11;14;5;18;;;;vpos;;v;;r;;d4,15;;b1,0;;m">
</treenode>
<treenode node="after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\SimpleReporter.php;f11;50;5;59;;;;vpos;;v;;r;;d4,51;;b1,0;;me;;p">
</treenode>
<treenode node="beforeSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\SimpleReporter.php;f11;29;5;32;;;;vpos;;v;;r;;d4,30;;b1,0;;m">
</treenode>
<treenode node="error;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\SimpleReporter.php;f11;44;5;47;;;;vpos;;v;;r;;d4,45;;b1,0;;m">
</treenode>
<treenode node="fail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\SimpleReporter.php;f11;39;5;42;;;;vpos;;v;;r;;d4,40;;b1,0;;m">
</treenode>
<treenode node="success;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\ext\SimpleReporter.php;f11;34;5;37;;;;vpos;;v;;r;;d4,35;;b1,0;;m">
</treenode>
</treenode>
<treenode node="SiteController;PHP:Class Name;H:\OSPanel\domains\yii\controllers\SiteController.php;f0;13;1;171;;;;vpos;;vController;;c;;r;;d0,14;;b0,0;;m">
<treenode node="actionAbout;PHP:Function Name;H:\OSPanel\domains\yii\controllers\SiteController.php;f11;141;5;156;;;;vpos;;vstring;;r&#10;Definition&#10;    actionAbout()&#10;&#10;Description&#10;     Displays about page.;;d4,143;;b1,0;;m">
</treenode>
<treenode node="actionContact;PHP:Function Name;H:\OSPanel\domains\yii\controllers\SiteController.php;f11;123;5;134;;;;vpos;;vResponse;;r&#10;Definition&#10;    actionContact()&#10;&#10;Description&#10;     Displays contact page.&#10;&#10;Return:&#10;   |string;;d4,124;;b1,0;;m">
</treenode>
<treenode node="actionHello;PHP:Function Name;H:\OSPanel\domains\yii\controllers\SiteController.php;f11;158;5;170;;;;vpos;;v;;r;;d34,158;;b1,0;;m">
</treenode>
<treenode node="actionIndex;PHP:Function Name;H:\OSPanel\domains\yii\controllers\SiteController.php;f11;62;5;77;;;;vpos;;vstring;;r&#10;Definition&#10;    actionIndex()&#10;&#10;Description&#10;     Displays homepage.;;d4,63;;b1,0;;m">
</treenode>
<treenode node="actionLogin;PHP:Function Name;H:\OSPanel\domains\yii\controllers\SiteController.php;f11;89;5;104;;;;vpos;;vResponse;;r&#10;Definition&#10;    actionLogin()&#10;&#10;Description&#10;     Login action.&#10;&#10;Return:&#10;   |string;;d4,90;;b1,0;;m">
</treenode>
<treenode node="actionLogout;PHP:Function Name;H:\OSPanel\domains\yii\controllers\SiteController.php;f11;111;5;116;;;;vpos;;vResponse;;r&#10;Definition&#10;    actionLogout()&#10;&#10;Description&#10;     Logout action.;;d4,112;;b1,0;;m">
</treenode>
<treenode node="actions;PHP:Function Name;H:\OSPanel\domains\yii\controllers\SiteController.php;f11;44;5;55;;;;vpos;;v;;r&#10;Definition&#10;    actions()&#10;&#10;Description&#10;     { inheritdoc};;d4,45;;b1,0;;m">
</treenode>
<treenode node="actionView;PHP:Function Name;H:\OSPanel\domains\yii\controllers\SiteController.php;f11;79;5;82;;;;vpos;;v;;r;;d33,79;;b1,0;;m">
</treenode>
<treenode node="behaviors;PHP:Function Name;H:\OSPanel\domains\yii\controllers\SiteController.php;f11;18;5;39;;;;vpos;;v;;r&#10;Definition&#10;    behaviors()&#10;&#10;Description&#10;     { inheritdoc};;d4,19;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Skip;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Skip.php;f0;6;1;17;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\Skip.php;f0;3;1;6;;;;vpos;;vCodeceptionStep;;c;;r;;d0,7;;b0,0;;m">
<treenode node="__toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Skip.php;f11;13;5;16;;;;vpos;;v;;r;;d4,14;;b1,0;;m">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step\Skip.php;f11;8;5;11;;;;vpos;;v;;r;;d4,9;;b1,0;;mcontainer;;p">
</treenode>
</treenode>
<treenode node="Soap;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Soap.php;f0;10;1;21;;;;vpos;;vXml;;c;;r&#10;Definition&#10;    class Soap extends Xml&#10;&#10;Description&#10;     This class is left for BC compatibility. Most of its contents moved to parent;;d0,11;;b0,0;;m">
<treenode node="request;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Soap.php;f18;12;5;15;;;;vpos;;v;;r;;d4,13;;b1,5;;m">
</treenode>
<treenode node="response;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Soap.php;f18;17;5;20;;;;vpos;;v;;r;;d4,18;;b1,5;;m">
</treenode>
</treenode>
<treenode node="SOAP;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f0;46;1;511;;;;vpos;;vCodeceptionModule;;cDependsOnModule;;c;;r&#10;Definition&#10;    class SOAP extends CodeceptionModule implements DependsOnModule&#10;&#10;Description&#10;     Module for testing SOAP WSDL web services. Send requests and check if response matches the pattern.;;d0,47;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;92;5;98;;;;vpos;;v;;r;;d4,93;;b1,0;;mtest;;p">
</treenode>
<treenode node="_depends;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;107;5;110;;;;vpos;;v;;r;;d4,108;;b1,0;;m">
</treenode>
<treenode node="_inject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;112;5;118;;;;vpos;;v;;r;;d4,113;;b1,0;;mconnectionModule;;p">
</treenode>
<treenode node="buildRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f14;456;5;470;;;;vpos;;v;;r&#10;Definition&#10;    buildRequest()&#10;&#10;Description&#10;      \DOMDocument;;d4,457;;b2,0;;m">
</treenode>
<treenode node="canonicalize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f14;448;5;451;;;;vpos;;v;;r;;d4,449;;b2,0;;mxml;;p">
</treenode>
<treenode node="dontSeeSoapResponseContainsStructure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;348;5;353;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeSoapResponseContainsStructure($xml)&#10;&#10;Description&#10;     Opposite to `seeSoapResponseContainsStructure`&#10;&#10;Parameters:&#10;     $xml;;d4,349;;b1,0;;m $xml;;p">
</treenode>
<treenode node="dontSeeSoapResponseContainsXPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;382;5;385;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeSoapResponseContainsXPath($xpath)&#10;&#10;Description&#10;     Checks XML response doesn&apos;t contain XPath locator&#10;&#10;Parameters:&#10;     $xpath;;d4,383;;b1,0;;m $xpath;;p">
</treenode>
<treenode node="dontSeeSoapResponseEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;297;5;301;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeSoapResponseEquals($xml)&#10;&#10;Description&#10;     Checks XML response equals provided XML. Comparison is done by canonicalizing both xml`s.&#10;&#10;Parameters:&#10;     $xml;;d4,298;;b1,0;;m $xml;;p">
</treenode>
<treenode node="dontSeeSoapResponseIncludes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;311;5;315;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeSoapResponseIncludes($xml)&#10;&#10;Description&#10;     Checks XML response does not include provided XML. Comparison is done by canonicalizing both xml`s. Parameter can be passed either as XmlBuilder, DOMDocument, DOMNode, XML string, or array (if no attributes).&#10;&#10;Parameters:&#10;     $xml;;d4,312;;b1,0;;m $xml;;p">
</treenode>
<treenode node="getClient;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f12;120;5;126;;;;vpos;;v;;r;;d4,121;;b3,0;;m">
</treenode>
<treenode node="getSchema;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f14;443;5;446;;;;vpos;;v;;r;;d4,444;;b2,0;;m">
</treenode>
<treenode node="getXmlResponse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f12;128;5;134;;;;vpos;;v;;r;;d4,129;;b3,0;;m">
</treenode>
<treenode node="getXmlStructure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f12;136;5;142;;;;vpos;;v;;r;;d4,137;;b3,0;;m">
</treenode>
<treenode node="grabAttributeFrom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;434;5;441;;;;vpos;;vstring;;r&#10;Definition&#10;    grabAttributeFrom($cssOrXPath, $attribute)&#10;&#10;Description&#10;     Finds and returns attribute of element. Element is matched by either CSS or XPath&#10;&#10;Parameters:&#10;     $cssOrXPath&#10;     $attribute;;d4,435;;b1,0;;m $cssOrXPath;;p $attribute;;p">
</treenode>
<treenode node="grabTextContentFrom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;419;5;423;;;;vpos;;vstring;;r&#10;Definition&#10;    grabTextContentFrom($cssOrXPath)&#10;&#10;Description&#10;     Finds and returns text contents of element. Element is matched by either CSS or XPath&#10;&#10;Parameters:&#10;     $cssOrXPath;;d4,420;;b1,0;;m $cssOrXPath;;p">
</treenode>
<treenode node="haveSoapHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;170;5;178;;;;vpos;;v;;r&#10;Definition&#10;    haveSoapHeader($header, $params = [])&#10;&#10;Description&#10;     Prepare SOAP header. Receives header name and parameters as array.&#10;&#10;Parameters:&#10;     $header&#10;    array $params;;d4,171;;b1,0;;m $header;;parray $params;;p">
</treenode>
<treenode node="onReconfigure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f14;100;5;105;;;;vpos;;v;;r;;d4,101;;b2,0;;m">
</treenode>
<treenode node="processExternalRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f14;506;5;510;;;;vpos;;v;;r;;d4,507;;b2,0;;maction;;pbody;;p">
</treenode>
<treenode node="processInternalRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f14;488;5;504;;;;vpos;;v;;r;;d4,489;;b2,0;;maction;;pbody;;p">
</treenode>
<treenode node="processRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f14;472;5;486;;;;vpos;;v;;r;;d4,473;;b2,0;;maction;;pbody;;p">
</treenode>
<treenode node="seeResponseCodeIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;405;5;409;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseCodeIs($code)&#10;&#10;Description&#10;      deprecated use seeSoapResponseCodeIs instead;;d4,406;;b1,0;;mcode;;p">
</treenode>
<treenode node="seeSoapResponseCodeIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;393;5;400;;;;vpos;;v;;r&#10;Definition&#10;    seeSoapResponseCodeIs($code)&#10;&#10;Description&#10;     Checks response code from server.&#10;&#10;Parameters:&#10;     $code;;d4,394;;b1,0;;m $code;;p">
</treenode>
<treenode node="seeSoapResponseContainsStructure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;337;5;342;;;;vpos;;v;;r&#10;Definition&#10;    seeSoapResponseContainsStructure($xml)&#10;&#10;Description&#10;     Checks XML response contains provided structure. Response elements will be compared with XML provided. Only nodeNames are checked to see elements match.&#10;&#10;Parameters:&#10;     $xml;;d4,338;;b1,0;;m $xml;;p">
</treenode>
<treenode node="seeSoapResponseContainsXPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;366;5;369;;;;vpos;;v;;r&#10;Definition&#10;    seeSoapResponseContainsXPath($xpath)&#10;&#10;Description&#10;     Checks XML response with XPath locator&#10;&#10;Parameters:&#10;     $xpath;;d4,367;;b1,0;;m $xpath;;p">
</treenode>
<treenode node="seeSoapResponseEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;256;5;260;;;;vpos;;v;;r&#10;Definition&#10;    seeSoapResponseEquals($xml)&#10;&#10;Description&#10;     Checks XML response equals provided XML. Comparison is done by canonicalizing both xml`s.&#10;&#10;Parameters:&#10;     $xml;;d4,257;;b1,0;;m $xml;;p">
</treenode>
<treenode node="seeSoapResponseIncludes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;282;5;286;;;;vpos;;v;;r&#10;Definition&#10;    seeSoapResponseIncludes($xml)&#10;&#10;Description&#10;     Checks XML response includes provided XML. Comparison is done by canonicalizing both xml`s. Parameter can be passed either as XmlBuilder, DOMDocument, DOMNode, XML string, or array (if no attributes).&#10;&#10;Parameters:&#10;     $xml;;d4,283;;b1,0;;m $xml;;p">
</treenode>
<treenode node="sendSoapRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\SOAP.php;f11;200;5;234;;;;vpos;;v;;r&#10;Definition&#10;    sendSoapRequest($action, $body = &quot;&quot;)&#10;&#10;Description&#10;     Submits request to endpoint.&#10;&#10;Parameters:&#10;     $request&#10;     $body;;d4,201;;b1,0;;m $request;;p $body;;p">
</treenode>
</treenode>
<treenode node="Sqlite;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Sqlite.php;f0;6;1;88;;;;vpos;;vDb;;c;;r;;d0,7;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Sqlite.php;f11;12;5;22;;;;vpos;;v;;r;;d4,13;;b1,0;;mdsn;;puser;;ppassword;;poptions;;p">
</treenode>
<treenode node="cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Sqlite.php;f11;24;5;29;;;;vpos;;v;;r;;d4,25;;b1,0;;m">
</treenode>
<treenode node="getPrimaryKey;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Sqlite.php;f11;52;5;74;;;;vpos;;varray;;r&#10;Definition&#10;    getPrimaryKey($tableName)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $tableName&#10;&#10;Return:&#10;   [string];;d4,53;;b1,0;;mstring $tableName;;p">
</treenode>
<treenode node="hasRowId;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Sqlite.php;f12;80;5;87;;;;vpos;;vbool;;r&#10;Definition&#10;    hasRowId($tableName)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $tableName;;d4,81;;b3,0;;m $tableName;;p">
</treenode>
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\Sqlite.php;f11;31;5;45;;;;vpos;;v;;r;;d4,32;;b1,0;;msql;;p">
</treenode>
</treenode>
<treenode node="SqlSrv;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\SqlSrv.php;f0;3;1;102;;;;vpos;;vDb;;c;;r;;d0,4;;b0,0;;m">
<treenode node="cleanup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\SqlSrv.php;f11;17;5;48;;;;vpos;;v;;r;;d4,18;;b1,0;;m">
</treenode>
<treenode node="generateWhereClause;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\SqlSrv.php;f14;50;5;67;;;;vpos;;v;;r;;d4,51;;b2,0;;mcriteria;;p">
</treenode>
<treenode node="getDb;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\SqlSrv.php;f11;5;5;15;;;;vpos;;v;;r;;d4,6;;b1,0;;m">
</treenode>
<treenode node="getPrimaryKey;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\SqlSrv.php;f11;79;5;101;;;;vpos;;varray;;r&#10;Definition&#10;    getPrimaryKey($tableName)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $tableName&#10;&#10;Return:&#10;   [string];;d4,80;;b1,0;;mstring $tableName;;p">
</treenode>
<treenode node="getQuotedName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Driver\SqlSrv.php;f11;69;5;72;;;;vpos;;v;;r;;d4,70;;b1,0;;mname;;p">
</treenode>
</treenode>
<treenode node="StaticEvents;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Shared\StaticEvents.php;f0;3;1;9;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="getSubscribedEvents;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Subscriber\Shared\StaticEvents.php;f18;5;5;8;;;;vpos;;v;;r;;d4,6;;b1,5;;m">
</treenode>
</treenode>
<treenode node="Step;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f9;8;1;330;;;;vpos;;v;;r;;d0,9;;b0,0;;m">
<treenode node="STACK_POSITION;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f9;10;24;10;;;;vpos;;v;;r3;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;36;5;40;;;;vpos;;v;;r;;d4,37;;b1,0;;maction;;parguments;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;204;5;208;;;;vpos;;v;;r;;d4,205;;b1,0;;m">
</treenode>
<treenode node="addMetaStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f14;281;5;313;;;;vpos;;v;;r&#10;Definition&#10;    addMetaStep($step, $stack)&#10;&#10;Description&#10;     If steps are combined into one method they can be reproduced as meta-step. We are using stack trace to analyze if steps were called from test, if not - they were called from meta-step.&#10;&#10;Parameters:&#10;     $step&#10;     $stack;;d4,282;;b2,0;;m $step;;p $stack;;p">
</treenode>
<treenode node="clean;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f14;237;5;240;;;;vpos;;v;;r;;d4,238;;b2,0;;mtext;;p">
</treenode>
<treenode node="formatClassName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f14;182;5;185;;;;vpos;;v;;r;;d4,183;;b2,0;;mclassname;;p">
</treenode>
<treenode node="getAction;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;72;5;75;;;;vpos;;v;;r;;d4,73;;b1,0;;m">
</treenode>
<treenode node="getArguments;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;89;5;92;;;;vpos;;v;;r;;d4,90;;b1,0;;m">
</treenode>
<treenode node="getArgumentsAsString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;94;5;141;;;;vpos;;v;;r;;d4,95;;b1,0;;mmaxLength;;p">
</treenode>
<treenode node="getClassName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f14;171;5;180;;;;vpos;;v;;r;;d4,172;;b2,0;;margument;;p">
</treenode>
<treenode node="getHtml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;218;5;225;;;;vpos;;v;;r;;d4,219;;b1,0;;mhighlightColor;;p">
</treenode>
<treenode node="getHumanizedActionWithoutArguments;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;227;5;230;;;;vpos;;v;;r;;d4,228;;b1,0;;m">
</treenode>
<treenode node="getHumanizedArguments;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;232;5;235;;;;vpos;;v;;r;;d4,233;;b1,0;;mmaxLength;;p">
</treenode>
<treenode node="getLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;77;5;82;;;;vpos;;v;;r;;d4,78;;b1,0;;m">
</treenode>
<treenode node="getMetaStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;199;5;202;;;;vpos;;vMetaStep;;r&#10;Definition&#10;    getMetaStep()&#10;&#10;Description&#10;     ;;d4,200;;b1,0;;m">
</treenode>
<treenode node="getName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;66;5;70;;;;vpos;;v;;r;;d4,67;;b1,0;;m">
</treenode>
<treenode node="getPhpCode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;187;5;194;;;;vpos;;v;;r;;d4,188;;b1,0;;mmaxLength;;p">
</treenode>
<treenode node="getPrefix;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;326;5;329;;;;vpos;;vstring;;r&#10;Definition&#10;    getPrefix()&#10;&#10;Description&#10;     ;;d4,327;;b1,0;;m">
</treenode>
<treenode node="hasFailed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;84;5;87;;;;vpos;;v;;r;;d4,85;;b1,0;;m">
</treenode>
<treenode node="humanize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f14;242;5;248;;;;vpos;;v;;r;;d4,243;;b2,0;;mtext;;p">
</treenode>
<treenode node="isTestFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f12;61;5;64;;;;vpos;;v;;r;;d4,62;;b3,0;;mfile;;p">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;250;5;272;;;;vpos;;v;;r;;d4,251;;b1,0;;mcontainer;;p">
</treenode>
<treenode node="saveTrace;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;42;5;59;;;;vpos;;v;;r;;d4,43;;b1,0;;m">
</treenode>
<treenode node="setMetaStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;318;5;321;;;;vpos;;v;;r&#10;Definition&#10;    setMetaStep($metaStep)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    MetaStep $metaStep;;d4,319;;b1,0;;mMetaStep $metaStep;;p">
</treenode>
<treenode node="stringifyArgument;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f14;143;5;169;;;;vpos;;v;;r;;d4,144;;b2,0;;margument;;p">
</treenode>
<treenode node="toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Step.php;f11;211;5;216;;;;vpos;;v;;r;;d4,212;;b1,0;;mmaxLength;;p">
</treenode>
</treenode>
<treenode node="StepEvent;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\StepEvent.php;f0;7;1;37;;;;vpos;;vEvent;;c;;r;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\StepEvent.php;f11;19;5;23;;;;vpos;;v;;r;;d4,20;;b1,0;;mtest;;pstep;;p">
</treenode>
<treenode node="getStep;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\StepEvent.php;f11;25;5;28;;;;vpos;;v;;r;;d4,26;;b1,0;;m">
</treenode>
<treenode node="getTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\StepEvent.php;f11;33;5;36;;;;vpos;;vTestInterface;;r&#10;Definition&#10;    getTest()&#10;&#10;Description&#10;     ;;d4,34;;b1,0;;m">
</treenode>
</treenode>
<treenode node="StepNode;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepNode.php;f0;19;1;151;;;;vpos;;vNodeInterface;;c;;r&#10;Definition&#10;    class StepNode implements NodeInterface&#10;&#10;Description&#10;     Represents Gherkin Step.;;d0,20;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepNode.php;f11;51;5;67;;;;vpos;;v;;r&#10;Definition&#10;    __construct($keyword, $text, array $arguments, $line, $keywordType = null)&#10;&#10;Description&#10;     Initializes step.&#10;&#10;Parameters:&#10;    string $keyword&#10;    string $text&#10;    ArgumentInterface[] $arguments&#10;    integer $line&#10;    string $keywordType;;d4,52;;b1,0;;mstring $keyword;;pstring $text;;pArgumentInterface[] $arguments;;pinteger $line;;pstring $keywordType;;p">
</treenode>
<treenode node="getArguments;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepNode.php;f11;137;5;140;;;;vpos;;vArgumentInterface;;r&#10;Definition&#10;    getArguments()&#10;&#10;Description&#10;     Returns step arguments.&#10;&#10;Return:&#10;   [];;d4,138;;b1,0;;m">
</treenode>
<treenode node="getKeyword;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepNode.php;f11;97;5;100;;;;vpos;;vstring;;r&#10;Definition&#10;    getKeyword()&#10;&#10;Description&#10;     Returns step keyword in provided language (Given, When, Then, etc.).;;d4,98;;b1,0;;m">
</treenode>
<treenode node="getKeywordType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepNode.php;f11;107;5;110;;;;vpos;;vstring;;r&#10;Definition&#10;    getKeywordType()&#10;&#10;Description&#10;     Returns step type keyword (Given, When, Then, etc.).;;d4,108;;b1,0;;m">
</treenode>
<treenode node="getLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepNode.php;f11;147;5;150;;;;vpos;;vinteger;;r&#10;Definition&#10;    getLine()&#10;&#10;Description&#10;     Returns step declaration line number.;;d4,148;;b1,0;;m">
</treenode>
<treenode node="getNodeType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepNode.php;f11;74;5;77;;;;vpos;;vstring;;r&#10;Definition&#10;    getNodeType()&#10;&#10;Description&#10;     Returns node type string;;d4,75;;b1,0;;m">
</treenode>
<treenode node="getText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepNode.php;f11;117;5;120;;;;vpos;;vstring;;r&#10;Definition&#10;    getText()&#10;&#10;Description&#10;     Returns step text.;;d4,118;;b1,0;;m">
</treenode>
<treenode node="getType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepNode.php;f11;86;5;89;;;;vpos;;vstring;;r&#10;Definition&#10;    getType()&#10;&#10;Description&#10;     Returns step keyword in provided language (Given, When, Then, etc.).;;d4,87;;b1,0;;m">
</treenode>
<treenode node="hasArguments;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\StepNode.php;f11;127;5;130;;;;vpos;;vBoolean;;r&#10;Definition&#10;    hasArguments()&#10;&#10;Description&#10;     Checks if step has arguments.;;d4,128;;b1,0;;m">
</treenode>
</treenode>
<treenode node="StepNodeTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\StepNodeTest.php;f0;8;1;19;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,9;;b0,0;;m">
<treenode node="testThatStepCanHaveOnlyOneArgument;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\StepNodeTest.php;f11;10;5;18;;;;vpos;;v;;r;;d4,11;;b1,0;;m">
</treenode>
</treenode>
<treenode node="StepObject;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\StepObject.php;f0;7;1;67;;;;vpos;;vNamespaces;;cClassname;;c;;r;;d0,8;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\StepObject.php;f11;35;5;40;;;;vpos;;v;;r;;d4,36;;b1,0;;msettings;;pname;;p">
</treenode>
<treenode node="createAction;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\StepObject.php;f11;61;5;66;;;;vpos;;v;;r;;d4,62;;b1,0;;maction;;p">
</treenode>
<treenode node="produce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\StepObject.php;f11;42;5;59;;;;vpos;;v;;r;;d4,43;;b1,0;;m">
</treenode>
</treenode>
<treenode node="StrikeoutTrait;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\StrikeoutTrait.php;f0;12;1;36;;;;vpos;;v;;r&#10;Definition&#10;    trait StrikeoutTrait&#10;&#10;Description&#10;     Adds strikeout inline elements;;d0,13;;b0,0;;m">
<treenode node="parseStrike;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\StrikeoutTrait.php;f11;18;2;30;;;;vpos;;v;;r&#10;Definition&#10;    parseStrike($markdown)&#10;&#10;Description&#10;     Parses the strikethrough feature.;;d1,19;;b2,0;;mmarkdown;;p">
</treenode>
<treenode node="renderStrike;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\StrikeoutTrait.php;f11;32;2;35;;;;vpos;;v;;r;;d1,33;;b2,0;;mblock;;p">
</treenode>
</treenode>
<treenode node="Stub;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Stub.php;f0;7;1;32;;;;vpos;;vStub;;c;;r;;d0,8;;b0,0;;m">
<treenode node="atLeastOnce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Stub.php;f18;21;5;25;;;;vpos;;v;;r;;d4,22;;b1,5;;mparams;;p">
</treenode>
<treenode node="exactly;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Stub.php;f18;27;5;31;;;;vpos;;v;;r;;d4,28;;b1,5;;mcount;;pparams;;p">
</treenode>
<treenode node="never;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Stub.php;f18;9;5;13;;;;vpos;;v;;r;;d4,10;;b1,5;;mparams;;p">
</treenode>
<treenode node="once;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Stub.php;f18;15;5;19;;;;vpos;;v;;r;;d4,16;;b1,5;;mparams;;p">
</treenode>
</treenode>
<treenode node="Style;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\Style.php;f0;6;1;15;;;;vpos;;v;;r;;d0,7;;b0,0;;m">
<treenode node="addStyles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Command\Shared\Style.php;f11;8;5;14;;;;vpos;;v;;r;;d4,9;;b1,0;;moutput;;p">
</treenode>
</treenode>
<treenode node="Suite;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Suite.php;f0;6;1;88;;;;vpos;;vTestSuite;;c;;r;;d0,7;;b0,0;;m">
<treenode node="findMatchedTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Suite.php;f14;47;5;55;;;;vpos;;v;;r;;d4,48;;b2,0;;mtestSignature;;p">
</treenode>
<treenode node="getBaseName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Suite.php;f11;76;5;79;;;;vpos;;vmixed;;r&#10;Definition&#10;    getBaseName()&#10;&#10;Description&#10;     ;;d4,77;;b1,0;;m">
</treenode>
<treenode node="getDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Suite.php;f14;30;5;45;;;;vpos;;v;;r;;d4,31;;b2,0;;mtest;;p">
</treenode>
<treenode node="getModules;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Suite.php;f11;60;5;63;;;;vpos;;vmixed;;r&#10;Definition&#10;    getModules()&#10;&#10;Description&#10;     ;;d4,61;;b1,0;;m">
</treenode>
<treenode node="reorderDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Suite.php;f11;11;5;28;;;;vpos;;v;;r;;d4,12;;b1,0;;m">
</treenode>
<treenode node="setBaseName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Suite.php;f11;84;5;87;;;;vpos;;v;;r&#10;Definition&#10;    setBaseName($baseName)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    mixed $baseName;;d4,85;;b1,0;;mmixed $baseName;;p">
</treenode>
<treenode node="setModules;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Suite.php;f11;68;5;71;;;;vpos;;v;;r&#10;Definition&#10;    setModules($modules)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    mixed $modules;;d4,69;;b1,0;;mmixed $modules;;p">
</treenode>
</treenode>
<treenode node="SuiteEvent;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\SuiteEvent.php;f0;6;1;53;;;;vpos;;vEvent;;c;;r;;d0,7;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\SuiteEvent.php;f11;23;5;31;;;;vpos;;v;;r;;d6,27;;b1,0;;msuite;;presult;;psettings;;p">
</treenode>
<treenode node="getResult;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\SuiteEvent.php;f11;44;5;47;;;;vpos;;v;;r&#10;Definition&#10;    getResult()&#10;&#10;Description&#10;      \PHPUnit\Framework\TestResult;;d4,45;;b1,0;;m">
</treenode>
<treenode node="getSettings;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\SuiteEvent.php;f11;49;5;52;;;;vpos;;v;;r;;d4,50;;b1,0;;m">
</treenode>
<treenode node="getSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\SuiteEvent.php;f11;36;5;39;;;;vpos;;vSuite;;r&#10;Definition&#10;    getSuite()&#10;&#10;Description&#10;     ;;d4,37;;b1,0;;m">
</treenode>
</treenode>
<treenode node="SuiteManager;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f0;12;1;244;;;;vpos;;v;;r;;d0,13;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f11;55;5;73;;;;vpos;;v;;r;;d4,56;;b1,0;;mdispatcher;;pname;;psettings;;p">
</treenode>
<treenode node="addToSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f14;106;5;130;;;;vpos;;v;;r;;d4,107;;b2,0;;mtest;;p">
</treenode>
<treenode node="checkEnvironmentExists;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f14;186;5;203;;;;vpos;;v;;r;;d4,187;;b2,0;;mtest;;p">
</treenode>
<treenode node="configureTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f14;225;5;243;;;;vpos;;v;;r&#10;Definition&#10;    configureTest($t)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $t;;d4,226;;b2,0;;m $t;;p">
</treenode>
<treenode node="createSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f14;132;5;149;;;;vpos;;v;;r;;d4,133;;b2,0;;mname;;p">
</treenode>
<treenode node="getActor;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f14;176;5;184;;;;vpos;;v;;r;;d4,177;;b2,0;;m">
</treenode>
<treenode node="getModuleContainer;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f11;171;5;174;;;;vpos;;vModuleContainer;;r&#10;Definition&#10;    getModuleContainer()&#10;&#10;Description&#10;     ;;d4,172;;b1,0;;m">
</treenode>
<treenode node="getSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f11;163;5;166;;;;vpos;;v;;r&#10;Definition&#10;    getSuite()&#10;&#10;Description&#10;      \Codeception\Suite;;d4,164;;b1,0;;m">
</treenode>
<treenode node="initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f11;75;5;89;;;;vpos;;v;;r;;d4,76;;b1,0;;m">
</treenode>
<treenode node="isExecutedInCurrentEnvironment;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f14;205;5;219;;;;vpos;;v;;r;;d4,206;;b2,0;;mtest;;p">
</treenode>
<treenode node="loadTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f11;91;5;104;;;;vpos;;v;;r;;d4,92;;b1,0;;mpath;;p">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\SuiteManager.php;f11;152;5;158;;;;vpos;;v;;r;;d4,153;;b1,0;;mrunner;;presult;;poptions;;p">
</treenode>
</treenode>
<treenode node="SuiteSubscriber;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\SuiteSubscriber.php;f9;12;1;94;;;;vpos;;vEventSubscriberInterface;;cStaticEvents;;c;;r;;d0,13;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\SuiteSubscriber.php;f11;37;5;41;;;;vpos;;v;;r;;d4,38;;b1,0;;moptions;;p">
</treenode>
<treenode node="applyFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\SuiteSubscriber.php;f11;78;5;88;;;;vpos;;v;;r;;d4,79;;b1,0;;mresult;;p">
</treenode>
<treenode node="applySettings;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\SuiteSubscriber.php;f14;43;5;62;;;;vpos;;v;;r;;d4,44;;b2,0;;msettings;;p">
</treenode>
<treenode node="getServerConnectionModule;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\SuiteSubscriber.php;f14;68;5;76;;;;vpos;;v;;r&#10;Definition&#10;    getServerConnectionModule(array $modules)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    array $modules;;d4,69;;b2,0;;marray $modules;;p">
</treenode>
<treenode node="isEnabled;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\SuiteSubscriber.php;f23;35;43;35;;;;vpos;;v;;r;;d-1,-1;;b2,0;;m">
</treenode>
<treenode node="mergeToPrint;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Coverage\SuiteSubscriber.php;f14;90;5;93;;;;vpos;;v;;r;;d4,91;;b2,0;;mcoverage;;p">
</treenode>
</treenode>
<treenode node="Symfony;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f0;104;1;626;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Symfony.php;f0;3;1;85;;;;vpos;;vFramework;;cDoctrineProvider;;cPartedModule;;c;;r&#10;Definition&#10;    class Symfony extends Framework implements DoctrineProvider, PartedModule&#10;&#10;Description&#10;     This module uses Symfony Crawler and HttpKernel to emulate requests and test response.;;d0,105;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Symfony.php;f11;32;5;39;;;;vpos;;v;;r&#10;Definition&#10;    __construct(\Symfony\Component\HttpKernel\Kernel $kernel, array $services = [], $rebootable = true)&#10;&#10;Description&#10;     Constructor.&#10;&#10;Parameters:&#10;    \Symfony\Component\HttpKernel\Kernel $kernel - A booted HttpKernel instance&#10;    array $services - An injected services&#10;    boolean $rebootable;;d4,33;;b1,0;;m\Symfony\Component\HttpKernel\Kernel $kernel;;parray $services;;pboolean $rebootable;;p">
</treenode>
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;204;5;210;;;;vpos;;v;;r&#10;Definition&#10;    _after(\Codeception\TestInterface $test)&#10;&#10;Description&#10;     Update permanent services after each test;;d4,205;;b1,0;;mtest;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;195;5;199;;;;vpos;;v;;r&#10;Definition&#10;    _before(\Codeception\TestInterface $test)&#10;&#10;Description&#10;     Initialize new client instance before each test;;d4,196;;b1,0;;mtest;;p">
</treenode>
<treenode node="_getContainer;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;244;5;247;;;;vpos;;vContainerInterface;;r&#10;Definition&#10;    _getContainer()&#10;&#10;Description&#10;     Return container.;;d4,245;;b1,0;;m">
</treenode>
<treenode node="_getEntityManager;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;217;5;237;;;;vpos;;v;;r&#10;Definition&#10;    _getEntityManager()&#10;&#10;Description&#10;     Retrieve Entity Manager.;;d4,218;;b1,0;;m">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;148;5;165;;;;vpos;;v;;r;;d4,149;;b1,0;;m">
</treenode>
<treenode node="_parts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;124;5;127;;;;vpos;;varray;;r&#10;Definition&#10;    _parts()&#10;&#10;Description&#10;     ;;d4,125;;b1,0;;m">
</treenode>
<treenode node="amOnRoute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;364;5;372;;;;vpos;;v;;r&#10;Definition&#10;    amOnRoute($routeName, array $params = [])&#10;&#10;Description&#10;     Opens web page using route name and parameters.&#10;&#10;Parameters:&#10;     $routeName&#10;    array $params;;d4,365;;b1,0;;m $routeName;;parray $params;;p">
</treenode>
<treenode node="dataRevealsValue;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f12;622;5;625;;;;vpos;;vbool;;r&#10;Definition&#10;    dataRevealsValue(Data $data)&#10;&#10;Description&#10;     Public API from Data changed from Symfony 3.2 to 3.3.&#10;&#10;Parameters:&#10;    \Symfony\Component\VarDumper\Cloner\Data $data;;d4,623;;b3,0;;m\Symfony\Component\VarDumper\Cloner\Data $data;;p">
</treenode>
<treenode node="debugResponse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f14;517;5;549;;;;vpos;;v;;r&#10;Definition&#10;    debugResponse($url)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $url;;d4,518;;b2,0;;m $url;;p">
</treenode>
<treenode node="doRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Symfony.php;f14;44;5;54;;;;vpos;;v;;r&#10;Definition&#10;    doRequest($request)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \Symfony\Component\HttpFoundation\Request $request;;d4,45;;b2,0;;m\Symfony\Component\HttpFoundation\Request $request;;p">
</treenode>
<treenode node="extractRawRoles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f12;555;5;565;;;;vpos;;varray;;r&#10;Definition&#10;    extractRawRoles(Data $data)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    Data $data;;d4,556;;b3,0;;mData $data;;p">
</treenode>
<treenode node="getInternalDomains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f14;572;5;588;;;;vpos;;varray;;r&#10;Definition&#10;    getInternalDomains()&#10;&#10;Description&#10;     Returns a list of recognized domain names.;;d4,573;;b2,0;;m">
</treenode>
<treenode node="getKernelClass;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f14;256;5;304;;;;vpos;;vstring;;r&#10;Definition&#10;    getKernelClass()&#10;&#10;Description&#10;     Attempts to guess the kernel location.&#10;&#10;Return:&#10;   The Kernel class name;;d4,257;;b2,0;;m">
</treenode>
<treenode node="getProfile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f14;499;5;512;;;;vpos;;v;;r&#10;Definition&#10;    getProfile()&#10;&#10;Description&#10;      \Symfony\Component\HttpKernel\Profiler\Profile;;d4,500;;b2,0;;m">
</treenode>
<treenode node="grabService;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;487;5;494;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabService($service)&#10;&#10;Description&#10;     Grabs a service from Symfony DIC container. Recommended to use for unit testing.&#10;&#10;Parameters:&#10;     $service;;d4,488;;b1,0;;m $service;;p">
</treenode>
<treenode node="grabServiceFromContainer;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;468;5;471;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabServiceFromContainer($service)&#10;&#10;Description&#10;     Grabs a service from Symfony DIC container. Recommended to use for unit testing.&#10;&#10;Parameters:&#10;     $service;;d4,469;;b1,0;;m $service;;p">
</treenode>
<treenode node="initializeSymfonyCache;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f12;172;5;190;;;;vpos;;v;;r&#10;Definition&#10;    initializeSymfonyCache()&#10;&#10;Description&#10;     Require Symfonys bootstrap.php.cache only for PHP Version &lt; 7;;d4,173;;b3,0;;m">
</treenode>
<treenode node="invalidateCachedRouter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;346;5;349;;;;vpos;;v;;r&#10;Definition&#10;    invalidateCachedRouter()&#10;&#10;Description&#10;     Invalidate previously cached routes.;;d4,347;;b1,0;;m">
</treenode>
<treenode node="persistService;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;313;5;323;;;;vpos;;v;;r&#10;Definition&#10;    persistService($serviceName, $isPermanent = false)&#10;&#10;Description&#10;     Get service $serviceName and add it to the lists of persistent services. If $isPermanent then service becomes persistent between tests&#10;&#10;Parameters:&#10;    string $serviceName&#10;    boolean $isPermanent;;d4,314;;b1,0;;mstring $serviceName;;pboolean $isPermanent;;p">
</treenode>
<treenode node="rebootClientKernel;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;608;5;613;;;;vpos;;v;;r&#10;Definition&#10;    rebootClientKernel()&#10;&#10;Description&#10;     Reboot client&apos;s kernel. Can be used to manually reboot kernel when &apos;rebootable_client&apos; =&gt; false;;d4,609;;b1,0;;m">
</treenode>
<treenode node="rebootKernel;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Symfony.php;f11;63;5;84;;;;vpos;;v;;r&#10;Definition&#10;    rebootKernel()&#10;&#10;Description&#10;     Reboot kernel;;d4,64;;b1,0;;m">
</treenode>
<treenode node="seeCurrentRouteIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;387;5;404;;;;vpos;;v;;r&#10;Definition&#10;    seeCurrentRouteIs($routeName, array $params = [])&#10;&#10;Description&#10;     Checks that current url matches route.&#10;&#10;Parameters:&#10;     $routeName&#10;    array $params;;d4,388;;b1,0;;m $routeName;;parray $params;;p">
</treenode>
<treenode node="seeEmailIsSent;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;440;5;451;;;;vpos;;v;;r&#10;Definition&#10;    seeEmailIsSent()&#10;&#10;Description&#10;     Checks if any email were sent by last request;;d4,441;;b1,0;;m">
</treenode>
<treenode node="seeInCurrentRoute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;418;5;433;;;;vpos;;v;;r&#10;Definition&#10;    seeInCurrentRoute($routeName)&#10;&#10;Description&#10;     Checks that current url matches route. Unlike seeCurrentRouteIs, this can matches without exact route parameters&#10;&#10;Parameters:&#10;     $routeName;;d4,419;;b1,0;;m $routeName;;p">
</treenode>
<treenode node="unpersistService;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Symfony.php;f11;330;5;341;;;;vpos;;v;;r&#10;Definition&#10;    unpersistService($serviceName)&#10;&#10;Description&#10;     Remove service $serviceName from the lists of persistent services.&#10;&#10;Parameters:&#10;    string $serviceName;;d4,331;;b1,0;;mstring $serviceName;;p">
</treenode>
</treenode>
<treenode node="Symfony2;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f4;28;5;29;;;;vpos;;vSymfony;;c;;r;;d35,28;;b0,0;;m">
</treenode>
<treenode node="TableNode;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f0;22;1;341;;;;vpos;;vArgumentInterface;;cIteratorAggregate;;c;;r&#10;Definition&#10;    class TableNode implements ArgumentInterface, IteratorAggregate&#10;&#10;Description&#10;     Represents Gherkin Table argument.;;d0,23;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;40;5;70;;;;vpos;;v;;r&#10;Definition&#10;    __construct(array $table)&#10;&#10;Description&#10;     Initializes table.&#10;&#10;Parameters:&#10;    array $table - Table in form of [$rowLineNumber =&gt; [$val1, $val2, $val3]];;d4,41;;b1,0;;marray $table;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;310;5;313;;;;vpos;;vstring;;r&#10;Definition&#10;    __toString()&#10;&#10;Description&#10;     Converts table into string;;d4,311;;b1,0;;m">
</treenode>
<treenode node="fromList;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f18;81;5;91;;;;vpos;;vTableNode;;r&#10;Definition&#10;    fromList(array $list)&#10;&#10;Description&#10;     Creates a table from a given list.&#10;&#10;Parameters:&#10;    array $list - One-dimensional array;;d4,82;;b1,5;;marray $list;;p">
</treenode>
<treenode node="getColumn;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;207;5;221;;;;vpos;;varray;;r&#10;Definition&#10;    getColumn($index)&#10;&#10;Description&#10;     Returns specific column in a table.&#10;&#10;Parameters:&#10;    integer $index - Column number;;d4,208;;b1,0;;minteger $index;;p">
</treenode>
<treenode node="getColumnsHash;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;118;5;129;;;;vpos;;varray;;r&#10;Definition&#10;    getColumnsHash()&#10;&#10;Description&#10;     Returns table hash, formed by columns.;;d4,119;;b1,0;;m">
</treenode>
<treenode node="getHash;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;108;5;111;;;;vpos;;varray;;r&#10;Definition&#10;    getHash()&#10;&#10;Description&#10;     Returns table hash, formed by columns (ColumnsHash).;;d4,109;;b1,0;;m">
</treenode>
<treenode node="getIterator;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;320;5;323;;;;vpos;;vIterator;;r&#10;Definition&#10;    getIterator()&#10;&#10;Description&#10;     Retrieves a hash iterator.;;d4,321;;b1,0;;m">
</treenode>
<treenode node="getLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;300;5;303;;;;vpos;;vinteger;;r&#10;Definition&#10;    getLine()&#10;&#10;Description&#10;     Returns line number at which table was started.;;d4,301;;b1,0;;m">
</treenode>
<treenode node="getLines;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;173;5;176;;;;vpos;;varray;;r&#10;Definition&#10;    getLines()&#10;&#10;Description&#10;     Returns table definition lines.;;d4,174;;b1,0;;m">
</treenode>
<treenode node="getNodeType;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;98;5;101;;;;vpos;;vstring;;r&#10;Definition&#10;    getNodeType()&#10;&#10;Description&#10;     Returns node type.;;d4,99;;b1,0;;m">
</treenode>
<treenode node="getRow;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;187;5;196;;;;vpos;;varray;;r&#10;Definition&#10;    getRow($index)&#10;&#10;Description&#10;     Returns specific row in a table.&#10;&#10;Parameters:&#10;    integer $index - Row number;;d4,188;;b1,0;;minteger $index;;p">
</treenode>
<treenode node="getRowAsString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;250;5;258;;;;vpos;;vstring;;r&#10;Definition&#10;    getRowAsString($rowNum)&#10;&#10;Description&#10;     Converts row into delimited string.&#10;&#10;Parameters:&#10;    integer $rowNum - Row number;;d4,251;;b1,0;;minteger $rowNum;;p">
</treenode>
<treenode node="getRowAsStringWithWrappedValues;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;268;5;278;;;;vpos;;vstring;;r&#10;Definition&#10;    getRowAsStringWithWrappedValues($rowNum, $wrapper)&#10;&#10;Description&#10;     Converts row into delimited string.&#10;&#10;Parameters:&#10;    integer $rowNum - Row number&#10;    callable $wrapper - Wrapper function;;d4,269;;b1,0;;minteger $rowNum;;pcallable $wrapper;;p">
</treenode>
<treenode node="getRowLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;232;5;241;;;;vpos;;vinteger;;r&#10;Definition&#10;    getRowLine($index)&#10;&#10;Description&#10;     Returns line number at which specific row was defined.&#10;&#10;Parameters:&#10;    integer $index;;d4,233;;b1,0;;minteger $index;;p">
</treenode>
<treenode node="getRows;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;163;5;166;;;;vpos;;varray;;r&#10;Definition&#10;    getRows()&#10;&#10;Description&#10;     Returns table rows.;;d4,164;;b1,0;;m">
</treenode>
<treenode node="getRowsHash;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;136;5;145;;;;vpos;;varray;;r&#10;Definition&#10;    getRowsHash()&#10;&#10;Description&#10;     Returns table hash, formed by rows.;;d4,137;;b1,0;;m">
</treenode>
<treenode node="getTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;153;5;156;;;;vpos;;varray;;r&#10;Definition&#10;    getTable()&#10;&#10;Description&#10;     Returns numerated table lines. Line numbers are keys, lines are values.;;d4,154;;b1,0;;m">
</treenode>
<treenode node="getTableAsString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f11;285;5;293;;;;vpos;;vstring;;r&#10;Definition&#10;    getTableAsString()&#10;&#10;Description&#10;     Converts entire table into string;;d4,286;;b1,0;;m">
</treenode>
<treenode node="padRight;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Node\TableNode.php;f14;333;5;340;;;;vpos;;vstring;;r&#10;Definition&#10;    padRight($text, $length)&#10;&#10;Description&#10;     Pads string right.&#10;&#10;Parameters:&#10;    string $text - Text to pad&#10;    integer $length - Length;;d4,334;;b2,0;;mstring $text;;pinteger $length;;p">
</treenode>
</treenode>
<treenode node="TableNodeTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f0;6;1;268;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,7;;b0,0;;m">
<treenode node="constructorTestDataProvider;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;20;5;29;;;;vpos;;v;;r;;d50,20;;b1,0;;m">
</treenode>
<treenode node="testConstructorExpectsSameNumberOfColumnsInEachRow;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;11;5;18;;;;vpos;;v;;r&#10;Definition&#10;    testConstructorExpectsSameNumberOfColumnsInEachRow()&#10;&#10;Description&#10;      expectedException \Behat\Gherkin\Exception\NodeException;;d4,12;;b1,0;;m">
</treenode>
<treenode node="testConstructorExpectsTwoDimensionalArrays;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;36;5;39;;;;vpos;;v;;r&#10;Definition&#10;    testConstructorExpectsTwoDimensionalArrays($table)&#10;&#10;Description&#10;      dataProvider constructorTestDataProvider;;d4,37;;b1,0;;mtable;;p">
</treenode>
<treenode node="testFromList;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;243;5;255;;;;vpos;;v;;r;;d4,244;;b1,0;;m">
</treenode>
<treenode node="testGetColumn;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;160;5;178;;;;vpos;;v;;r;;d4,161;;b1,0;;m">
</treenode>
<treenode node="testGetLines;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;137;5;146;;;;vpos;;v;;r;;d4,138;;b1,0;;m">
</treenode>
<treenode node="testGetRow;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;148;5;158;;;;vpos;;v;;r;;d4,149;;b1,0;;m">
</treenode>
<treenode node="testGetRowAsString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;215;5;225;;;;vpos;;v;;r;;d4,216;;b1,0;;m">
</treenode>
<treenode node="testGetRowLine;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;203;5;213;;;;vpos;;v;;r;;d4,204;;b1,0;;m">
</treenode>
<treenode node="testGetRows;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;122;5;135;;;;vpos;;v;;r;;d4,123;;b1,0;;m">
</treenode>
<treenode node="testGetRowWithLineNumbers;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;180;5;190;;;;vpos;;v;;r;;d4,181;;b1,0;;m">
</treenode>
<treenode node="testGetTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;192;5;201;;;;vpos;;v;;r;;d4,193;;b1,0;;m">
</treenode>
<treenode node="testGetTableAsString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;227;5;241;;;;vpos;;v;;r;;d4,228;;b1,0;;m">
</treenode>
<treenode node="testGetTableFromListWithMultidimensionalArrayArgument;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;260;5;266;;;;vpos;;v;;r&#10;Definition&#10;    testGetTableFromListWithMultidimensionalArrayArgument()&#10;&#10;Description&#10;      expectedException \Behat\Gherkin\Exception\NodeException;;d4,261;;b1,0;;m">
</treenode>
<treenode node="testHashTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;41;5;72;;;;vpos;;v;;r;;d4,42;;b1,0;;m">
</treenode>
<treenode node="testIterator;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;74;5;91;;;;vpos;;v;;r;;d4,75;;b1,0;;m">
</treenode>
<treenode node="testLongRowsHashTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;107;5;120;;;;vpos;;v;;r;;d4,108;;b1,0;;m">
</treenode>
<treenode node="testRowsHashTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Node\TableNodeTest.php;f11;93;5;105;;;;vpos;;v;;r;;d4,94;;b1,0;;m">
</treenode>
</treenode>
<treenode node="TableTrait;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\TableTrait.php;f0;12;1;121;;;;vpos;;v;;r&#10;Definition&#10;    trait TableTrait&#10;&#10;Description&#10;     Adds the table blocks;;d0,13;;b0,0;;m">
<treenode node="consumeTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\TableTrait.php;f11;30;2;80;;;;vpos;;v;;r&#10;Definition&#10;    consumeTable($lines, $current)&#10;&#10;Description&#10;     Consume lines for a table;;d1,31;;b2,0;;mlines;;pcurrent;;p">
</treenode>
<treenode node="identifyTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\TableTrait.php;f11;21;2;25;;;;vpos;;v;;r&#10;Definition&#10;    identifyTable($line, $lines, $current)&#10;&#10;Description&#10;     identify a line as the beginning of a table block.;;d1,22;;b2,0;;mline;;plines;;pcurrent;;p">
</treenode>
<treenode node="parseInline;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\TableTrait.php;f20;119;47;119;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mtext;;p">
</treenode>
<treenode node="parseTd;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\TableTrait.php;f11;109;2;117;;;;vpos;;v;;r&#10;Definition&#10;    parseTd($markdown)&#10;&#10;Description&#10;      marker |;;d1,110;;b2,0;;mmarkdown;;p">
</treenode>
<treenode node="renderAbsy;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\TableTrait.php;f20;120;46;120;;;;vpos;;v;;r;;d-1,-1;;b2,0;;mabsy;;p">
</treenode>
<treenode node="renderTable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\block\TableTrait.php;f11;85;2;104;;;;vpos;;v;;r&#10;Definition&#10;    renderTable($block)&#10;&#10;Description&#10;     render a table block;;d1,86;;b2,0;;mblock;;p">
</treenode>
</treenode>
<treenode node="TagFilter;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\TagFilter.php;f0;20;1;89;;;;vpos;;vComplexFilter;;c;;r&#10;Definition&#10;    class TagFilter extends ComplexFilter&#10;&#10;Description&#10;     Filters scenarios by feature/scenario tag.;;d0,21;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\TagFilter.php;f11;29;5;32;;;;vpos;;v;;r&#10;Definition&#10;    __construct($filterString)&#10;&#10;Description&#10;     Initializes filter.&#10;&#10;Parameters:&#10;    string $filterString - Name filter string;;d4,30;;b1,0;;mstring $filterString;;p">
</treenode>
<treenode node="isFeatureMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\TagFilter.php;f11;41;5;44;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isFeatureMatch(FeatureNode $feature)&#10;&#10;Description&#10;     Checks if Feature matches specified filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature - Feature instance;;d4,42;;b1,0;;mFeatureNode $feature;;p">
</treenode>
<treenode node="isScenarioMatch;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\TagFilter.php;f11;54;5;57;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isScenarioMatch(FeatureNode $feature, ScenarioInterface $scenario)&#10;&#10;Description&#10;     Checks if scenario or outline matches specified filter.&#10;&#10;Parameters:&#10;    FeatureNode $feature - Feature node instance&#10;    ScenarioInterface $scenario - Scenario or Outline node instance;;d4,55;;b1,0;;mFeatureNode $feature;;pScenarioInterface $scenario;;p">
</treenode>
<treenode node="isTagsMatchCondition;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Filter\TagFilter.php;f14;66;5;88;;;;vpos;;vBoolean;;r&#10;Definition&#10;    isTagsMatchCondition($tags)&#10;&#10;Description&#10;     Checks that node matches condition.&#10;&#10;Parameters:&#10;    string[] $tags;;d4,67;;b2,0;;mstring[] $tags;;p">
</treenode>
</treenode>
<treenode node="TagFilterTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\TagFilterTest.php;f0;8;1;143;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,9;;b0,0;;m">
<treenode node="testFilterFeature;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\TagFilterTest.php;f11;10;5;34;;;;vpos;;v;;r;;d4,11;;b1,0;;m">
</treenode>
<treenode node="testIsFeatureMatchFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\TagFilterTest.php;f11;36;5;83;;;;vpos;;v;;r;;d4,37;;b1,0;;m">
</treenode>
<treenode node="testIsScenarioMatchFilter;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Filter\TagFilterTest.php;f11;85;5;142;;;;vpos;;v;;r;;d4,86;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Template;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Template.php;f0;6;1;78;;;;vpos;;v;;r&#10;Definition&#10;    class Template&#10;&#10;Description&#10;     Basic template engine used for generating initial Cept/Cest/Test files.;;d0,7;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Template.php;f11;18;5;23;;;;vpos;;v;;r&#10;Definition&#10;    __construct($template, $placeholderStart = &apos;{{&apos;, $placeholderEnd = &apos;}}&apos;)&#10;&#10;Description&#10;     Takes a template string&#10;&#10;Parameters:&#10;     $template;;d4,19;;b1,0;;mtemplate;;pplaceholderStart;;pplaceholderEnd;;p">
</treenode>
<treenode node="place;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Template.php;f11;32;5;36;;;;vpos;;v;;r&#10;Definition&#10;    place($var, $val)&#10;&#10;Description&#10;     Replaces {{var}} string with provided value&#10;&#10;Parameters:&#10;     $var&#10;     $val;;d4,33;;b1,0;;m $var;;p $val;;p">
</treenode>
<treenode node="produce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Template.php;f11;53;5;77;;;;vpos;;vmixed;;r&#10;Definition&#10;    produce()&#10;&#10;Description&#10;     Fills up template string with placed variables.;;d4,54;;b1,0;;m">
</treenode>
<treenode node="setVars;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Template.php;f11;43;5;46;;;;vpos;;v;;r&#10;Definition&#10;    setVars(array $vars)&#10;&#10;Description&#10;     Sets all template vars&#10;&#10;Parameters:&#10;    array $vars;;d4,44;;b1,0;;marray $vars;;p">
</treenode>
</treenode>
<treenode node="Test;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Test.php;f9;17;1;137;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Test.php;f0;7;1;75;;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f4;22;5;23;;;;vpos;;vTestInterface;;cDescriptive;;cAssertionCounter;;cCodeCoverage;;cErrorLogger;;cMetadataCollector;;cIgnoreIfMetadataBlocked;;c;;r&#10;Definition&#10;    class Test implements TestInterface, Interfaces\Descriptive&#10;&#10;Description&#10;     The most simple testcase (with only one test in it) which can be executed by PHPUnit/Codeception. It can be extended with included traits. Turning on/off a trait should not break class functionality.;;d0,18;;b0,0;;m">
<treenode node="STATUS_ERROR;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Test.php;f9;41;22;41;;;;vpos;;v;;r&apos;error&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_FAIL;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Test.php;f9;40;21;40;;;;vpos;;v;;r&apos;fail&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_OK;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Test.php;f9;42;19;42;;;;vpos;;v;;r&apos;ok&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="STATUS_PENDING;PHP:PHP Word;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Test.php;f9;43;24;43;;;;vpos;;v;;r&apos;pending&apos;;;d-1,-1;;b0,0;;m">
</treenode>
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Test.php;f11;46;5;50;;;;vpos;;v;;r;;d4,47;;b1,0;;msettings;;pname;;p">
</treenode>
<treenode node="count;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Test.php;f11;123;5;126;;;;vpos;;vint;;r&#10;Definition&#10;    count()&#10;&#10;Description&#10;     This class represents exactly one test;;d4,124;;b1,0;;m">
</treenode>
<treenode node="getTestResultObject;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Test.php;f11;114;5;117;;;;vpos;;v;;r;;d4,115;;b1,0;;m">
</treenode>
<treenode node="ignore;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Test.php;f14;133;5;136;;;;vpos;;v;;r&#10;Definition&#10;    ignore($ignored)&#10;&#10;Description&#10;     Should a test be skipped (can be set from hooks)&#10;&#10;Parameters:&#10;    boolean $ignored;;d4,134;;b2,0;;mboolean $ignored;;p">
</treenode>
<treenode node="produce;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Generator\Test.php;f11;52;5;74;;;;vpos;;v;;r;;d4,53;;b1,0;;m">
</treenode>
<treenode node="run;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Test.php;f17;66;5;112;;;;vpos;;v;;r&#10;Definition&#10;    run(\PHPUnit\Framework\TestResult $result = null)&#10;&#10;Description&#10;     Runs a test and collects its result in a TestResult instance. Executes before/after hooks coming from traits.&#10;&#10;Parameters:&#10;    \PHPUnit\Framework\TestResult $result;;d4,67;;b1,0;;m\PHPUnit\Framework\TestResult $result;;p">
</treenode>
<treenode node="test;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Test.php;f20;50;35;50;;;;vpos;;vmixed;;r&#10;Description&#10;     Everything inside this method is treated as a test.;;d-1,-1;;b1,0;;m">
</treenode>
<treenode node="toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Test.php;f20;57;39;57;;;;vpos;;vmixed;;r&#10;Description&#10;     Test representation;;d-1,-1;;b1,0;;m">
</treenode>
</treenode>
<treenode node="TestEvent;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\TestEvent.php;f0;5;1;38;;;;vpos;;vEvent;;c;;r;;d0,6;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\TestEvent.php;f11;17;5;21;;;;vpos;;v;;r;;d4,18;;b1,0;;mtest;;ptime;;p">
</treenode>
<treenode node="getTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\TestEvent.php;f11;34;5;37;;;;vpos;;v;;r&#10;Definition&#10;    getTest()&#10;&#10;Description&#10;      \Codeception\TestInterface;;d4,35;;b1,0;;m">
</treenode>
<treenode node="getTime;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Event\TestEvent.php;f11;26;5;29;;;;vpos;;vfloat;;r&#10;Definition&#10;    getTime()&#10;&#10;Description&#10;     ;;d4,27;;b1,0;;m">
</treenode>
</treenode>
<treenode node="TestMailer;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2\TestMailer.php;f0;5;1;31;;;;vpos;;vBaseMailer;;c;;r;;d0,6;;b0,0;;m">
<treenode node="getSentMessages;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2\TestMailer.php;f11;22;5;25;;;;vpos;;v;;r;;d4,23;;b1,0;;m">
</treenode>
<treenode node="reset;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2\TestMailer.php;f11;27;5;30;;;;vpos;;v;;r;;d4,28;;b1,0;;m">
</treenode>
<treenode node="saveMessage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2\TestMailer.php;f14;17;5;20;;;;vpos;;v;;r;;d4,18;;b2,0;;mmessage;;p">
</treenode>
<treenode node="sendMessage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2\TestMailer.php;f14;11;5;15;;;;vpos;;v;;r;;d4,12;;b2,0;;mmessage;;p">
</treenode>
</treenode>
<treenode node="TestParseException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\TestParseException.php;f0;3;1;16;;;;vpos;;vException;;c;;r;;d0,4;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\TestParseException.php;f11;5;5;15;;;;vpos;;v;;r;;d4,6;;b1,0;;mfileName;;perrors;;pline;;p">
</treenode>
</treenode>
<treenode node="TestParser;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\ParserTest.php;f0;68;1;93;;;;vpos;;vParser;;c;;r;;d0,69;;b0,0;;m">
<treenode node="inlineMarkers;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\ParserTest.php;f11;72;2;75;;;;vpos;;v;;r;;d1,73;;b2,0;;m">
</treenode>
<treenode node="parseMarkerA;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\ParserTest.php;f11;77;2;80;;;;vpos;;v;;r;;d1,78;;b2,0;;mtext;;p">
</treenode>
<treenode node="parseMarkerB;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\ParserTest.php;f11;82;2;85;;;;vpos;;v;;r;;d1,83;;b2,0;;mtext;;p">
</treenode>
<treenode node="parseMarkerC;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\tests\ParserTest.php;f11;87;2;92;;;;vpos;;v;;r;;d1,88;;b2,0;;mtext;;p">
</treenode>
</treenode>
<treenode node="TestRuntimeException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Exception\TestRuntimeException.php;f0;3;1;5;;;;vpos;;vRuntimeException;;c;;r;;d0,4;;b0,0;;m">
</treenode>
<treenode node="Unit;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Unit.php;f0;8;1;72;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Unit.php;f0;13;1;171;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Unit.php;f0;8;1;91;;;;vpos;;vLoaderInterface;;c;;r;;d0,9;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Unit.php;f14;74;5;76;;;;vpos;;v;;r&#10;Definition&#10;    _after()&#10;&#10;Description&#10;      Override;;d4,75;;b2,0;;m">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Unit.php;f14;62;5;64;;;;vpos;;v;;r&#10;Definition&#10;    _before()&#10;&#10;Description&#10;      Override;;d4,63;;b2,0;;m">
</treenode>
<treenode node="createTestFromPhpUnitMethod;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Unit.php;f14;43;5;59;;;;vpos;;v;;r;;d4,44;;b2,0;;mclass;;pmethod;;p">
</treenode>
<treenode node="enhancePhpunitTest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Unit.php;f14;61;5;71;;;;vpos;;v;;r;;d4,62;;b2,0;;mtest;;p">
</treenode>
<treenode node="getCurrent;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Unit.php;f11;115;5;118;;;;vpos;;v;;r&#10;Definition&#10;    getCurrent($current)&#10;&#10;Description&#10;     Returns current values;;d4,116;;b1,0;;mcurrent;;p">
</treenode>
<treenode node="getDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Unit.php;f11;132;5;142;;;;vpos;;v;;r;;d4,133;;b1,0;;m">
</treenode>
<treenode node="getMetadata;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Unit.php;f11;25;5;31;;;;vpos;;v;;r;;d4,26;;b1,0;;m">
</treenode>
<treenode node="getModule;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Unit.php;f11;103;5;110;;;;vpos;;v;;r&#10;Definition&#10;    getModule($module)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $module;;d4,104;;b1,0;;m $module;;p">
</treenode>
<treenode node="getPattern;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Unit.php;f11;12;5;15;;;;vpos;;v;;r;;d4,13;;b1,0;;m">
</treenode>
<treenode node="getReportFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Unit.php;f11;123;5;130;;;;vpos;;varray;;r&#10;Definition&#10;    getReportFields()&#10;&#10;Description&#10;     ;;d4,124;;b1,0;;m">
</treenode>
<treenode node="getTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Unit.php;f11;38;5;41;;;;vpos;;v;;r;;d4,39;;b1,0;;m">
</treenode>
<treenode node="handleDependencies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Unit.php;f11;148;5;170;;;;vpos;;vbool;;r&#10;Definition&#10;    handleDependencies()&#10;&#10;Description&#10;     Reset PHPUnit&apos;s dependencies;;d4,149;;b1,0;;m">
</treenode>
<treenode node="loadTests;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Loader\Unit.php;f11;17;5;36;;;;vpos;;v;;r;;d4,18;;b1,0;;mpath;;p">
</treenode>
<treenode node="setExpectedException;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Unit.php;f11;82;5;96;;;;vpos;;v;;r&#10;Definition&#10;    setExpectedException($exception, $message = null, $code = null)&#10;&#10;Description&#10;     If the method exists (PHPUnit 5) forward the call to the parent class, otherwise call `expectException` instead (PHPUnit 6);;d4,83;;b1,0;;mexception;;pmessage;;pcode;;p">
</treenode>
<treenode node="setup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Template\Unit.php;f11;35;5;90;;;;vpos;;v;;r;;d4,36;;b1,0;;m">
</treenode>
<treenode node="setUp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Unit.php;f14;33;5;57;;;;vpos;;v;;r;;d4,34;;b2,0;;m">
</treenode>
<treenode node="tearDown;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Test\Unit.php;f14;66;5;69;;;;vpos;;v;;r;;d4,67;;b2,0;;m">
</treenode>
</treenode>
<treenode node="UnitTester;PHP:Class Name;H:\OSPanel\domains\yii\tests\_support\UnitTester.php;f0;18;1;25;;;;vpos;;vActor;;cUnitTesterActions;;c;;r&#10;Definition&#10;    class UnitTester extends \Codeception\Actor&#10;&#10;Description&#10;     Inherited Methods;;d0,19;;b0,0;;m">
</treenode>
<treenode node="Universal;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Universal.php;f0;6;1;71;;;;vpos;;vClient;;cPhpSuperGlobalsConverter;;c;;r;;d0,7;;b0,0;;m">
<treenode node="doRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Universal.php;f11;23;5;70;;;;vpos;;v;;r;;d4,24;;b1,0;;mrequest;;p">
</treenode>
<treenode node="mockResponse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Universal.php;f11;18;5;21;;;;vpos;;v;;r;;d4,19;;b1,0;;mresponse;;p">
</treenode>
<treenode node="setIndex;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Universal.php;f11;13;5;16;;;;vpos;;v;;r;;d4,14;;b1,0;;mindex;;p">
</treenode>
</treenode>
<treenode node="Uri;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Uri.php;f0;5;1;114;;;;vpos;;v;;r;;d0,6;;b0,0;;m">
<treenode node="appendPath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Uri.php;f18;103;5;113;;;;vpos;;v;;r;;d4,104;;b1,5;;murl;;ppath;;p">
</treenode>
<treenode node="mergeUrls;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Uri.php;f18;18;5;74;;;;vpos;;varray;;r&#10;Definition&#10;    mergeUrls($baseUri, $uri)&#10;&#10;Description&#10;     Merges the passed $add argument onto $base.&#10;&#10;Parameters:&#10;    string $baseUri - the base URL&#10;    string $uri - the URL to merge&#10;&#10;Return:&#10;   the merged array;;d4,19;;b1,5;;mstring $baseUri;;pstring $uri;;p">
</treenode>
<treenode node="retrieveHost;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Uri.php;f18;90;5;101;;;;vpos;;v;;r;;d4,91;;b1,5;;murl;;p">
</treenode>
<treenode node="retrieveUri;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Uri.php;f18;81;5;88;;;;vpos;;vstring;;r&#10;Definition&#10;    retrieveUri($url)&#10;&#10;Description&#10;     Retrieve /path?query#fragment part of URL&#10;&#10;Parameters:&#10;     $url;;d4,82;;b1,5;;m $url;;p">
</treenode>
</treenode>
<treenode node="UrlLinkTrait;PHP:Class Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\UrlLinkTrait.php;f0;15;1;49;;;;vpos;;v;;r&#10;Definition&#10;    trait UrlLinkTrait&#10;&#10;Description&#10;     Adds auto linking for URLs;;d0,16;;b0,0;;m">
<treenode node="parseUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\UrlLinkTrait.php;f11;22;2;39;;;;vpos;;v;;r&#10;Definition&#10;    parseUrl($markdown)&#10;&#10;Description&#10;     Parses urls and adds auto linking feature.;;d1,23;;b2,0;;mmarkdown;;p">
</treenode>
<treenode node="renderAutoUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\cebe\markdown\inline\UrlLinkTrait.php;f11;41;2;48;;;;vpos;;v;;r;;d1,42;;b2,0;;mblock;;p">
</treenode>
</treenode>
<treenode node="User;PHP:Class Name;H:\OSPanel\domains\yii\models\User.php;f0;4;1;103;;;;vpos;;vBaseObject;;cIdentityInterface;;c;;r;;d0,5;;b0,0;;m">
<treenode node="findByUsername;PHP:Function Name;H:\OSPanel\domains\yii\models\User.php;f18;58;5;67;;;;vpos;;vstatic;;r&#10;Definition&#10;    findByUsername($username)&#10;&#10;Description&#10;     Finds user by username&#10;&#10;Parameters:&#10;    string $username&#10;&#10;Return:&#10;   |null;;d4,59;;b1,5;;mstring $username;;p">
</treenode>
<treenode node="findIdentity;PHP:Function Name;H:\OSPanel\domains\yii\models\User.php;f18;33;5;36;;;;vpos;;v;;r&#10;Definition&#10;    findIdentity($id)&#10;&#10;Description&#10;     { inheritdoc};;d4,34;;b1,5;;mid;;p">
</treenode>
<treenode node="findIdentityByAccessToken;PHP:Function Name;H:\OSPanel\domains\yii\models\User.php;f18;41;5;50;;;;vpos;;v;;r&#10;Definition&#10;    findIdentityByAccessToken($token, $type = null)&#10;&#10;Description&#10;     { inheritdoc};;d4,42;;b1,5;;mtoken;;ptype;;p">
</treenode>
<treenode node="getAuthKey;PHP:Function Name;H:\OSPanel\domains\yii\models\User.php;f11;80;5;83;;;;vpos;;v;;r&#10;Definition&#10;    getAuthKey()&#10;&#10;Description&#10;     { inheritdoc};;d4,81;;b1,0;;m">
</treenode>
<treenode node="getId;PHP:Function Name;H:\OSPanel\domains\yii\models\User.php;f11;72;5;75;;;;vpos;;v;;r&#10;Definition&#10;    getId()&#10;&#10;Description&#10;     { inheritdoc};;d4,73;;b1,0;;m">
</treenode>
<treenode node="validateAuthKey;PHP:Function Name;H:\OSPanel\domains\yii\models\User.php;f11;88;5;91;;;;vpos;;v;;r&#10;Definition&#10;    validateAuthKey($authKey)&#10;&#10;Description&#10;     { inheritdoc};;d4,89;;b1,0;;mauthKey;;p">
</treenode>
<treenode node="validatePassword;PHP:Function Name;H:\OSPanel\domains\yii\models\User.php;f11;99;5;102;;;;vpos;;vbool;;r&#10;Definition&#10;    validatePassword($password)&#10;&#10;Description&#10;     Validates password&#10;&#10;Parameters:&#10;    string $password - password to validate&#10;&#10;Return:&#10;   if password provided is valid for current user;;d4,100;;b1,0;;mstring $password;;p">
</treenode>
</treenode>
<treenode node="UserTest;PHP:Class Name;H:\OSPanel\domains\yii\tests\unit\models\UserTest.php;f0;6;1;43;;;;vpos;;vUnit;;c;;r;;d0,7;;b0,0;;m">
<treenode node="testFindUserByAccessToken;PHP:Function Name;H:\OSPanel\domains\yii\tests\unit\models\UserTest.php;f11;16;5;22;;;;vpos;;v;;r;;d4,17;;b1,0;;m">
</treenode>
<treenode node="testFindUserById;PHP:Function Name;H:\OSPanel\domains\yii\tests\unit\models\UserTest.php;f11;8;5;14;;;;vpos;;v;;r;;d4,9;;b1,0;;m">
</treenode>
<treenode node="testFindUserByUsername;PHP:Function Name;H:\OSPanel\domains\yii\tests\unit\models\UserTest.php;f11;24;5;28;;;;vpos;;v;;r;;d4,25;;b1,0;;m">
</treenode>
<treenode node="testValidateUser;PHP:Function Name;H:\OSPanel\domains\yii\tests\unit\models\UserTest.php;f11;33;5;41;;;;vpos;;v;;r&#10;Definition&#10;    testValidateUser($user)&#10;&#10;Description&#10;      depends testFindUserByUsername;;d4,34;;b1,0;;muser;;p">
</treenode>
</treenode>
<treenode node="WebDriver;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f0;282;1;3296;;;;vpos;;vCodeceptionModule;;cWebInterface;;cRemoteInterface;;cMultiSessionInterface;;cSessionSnapshot;;cScreenshotSaver;;cPageSourceSaver;;cElementLocator;;cConflictsWithModule;;cRequiresPackage;;c;;r&#10;Definition&#10;    class WebDriver extends CodeceptionModule implements&#10;    WebInterface,&#10;    RemoteInterface,&#10;    MultiSessionInterface,&#10;    SessionSnapshot,&#10;    ScreenshotSaver,&#10;    PageSourceSaver,&#10;    ElementLocator,&#10;    ConflictsWithModule,&#10;    RequiresPackage&#10;&#10;Description&#10;     New generation Selenium WebDriver module.;;d0,292;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;502;5;511;;;;vpos;;v;;r;;d4,503;;b1,0;;mtest;;p">
</treenode>
<treenode node="_afterSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;624;5;628;;;;vpos;;v;;r;;d4,625;;b1,0;;m">
</treenode>
<treenode node="_backupSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1465;5;1468;;;;vpos;;vRemoteWebDriver;;r&#10;Definition&#10;    _backupSession()&#10;&#10;Description&#10;     Returns current WebDriver session for saving;;d4,1466;;b1,0;;m">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;422;5;443;;;;vpos;;v;;r;;d4,423;;b1,0;;mtest;;p">
</treenode>
<treenode node="_capabilities;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;412;5;415;;;;vpos;;v;;r&#10;Definition&#10;    _capabilities(\Closure $capabilityFunction)&#10;&#10;Description&#10;     Change capabilities of WebDriver. Should be executed before starting a new browser session. This method expects a function to be passed which returns array or [WebDriver Desired Capabilities](https://github.com/facebook/php-webdriver/blob/community/lib/Remote/DesiredCapabilities.php) object. Additional [Chrome options](https://github.com/facebook/php-webdriver/wiki/ChromeOptions) (like adding extensions) can be passed as well.&#10;&#10;Parameters:&#10;    \Closure $capabilityFunction;;d4,413;;b1,0;;m\Closure $capabilityFunction;;p">
</treenode>
<treenode node="_closeSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1485;5;1499;;;;vpos;;v;;r&#10;Definition&#10;    _closeSession($webDriver = null)&#10;&#10;Description&#10;     Manually closes current WebDriver session.&#10;&#10;Parameters:&#10;     $webDriver - (optional) a specific webdriver session instance;;d4,1486;;b1,0;;m $webDriver;;p">
</treenode>
<treenode node="_conflicts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;417;5;420;;;;vpos;;v;;r;;d4,418;;b1,0;;m">
</treenode>
<treenode node="_failed;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;513;5;523;;;;vpos;;v;;r;;d4,514;;b1,0;;mtest;;pfail;;p">
</treenode>
<treenode node="_findClickable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;995;5;1037;;;;vpos;;vWebDriverElement;;r&#10;Definition&#10;    _findClickable($page, $link)&#10;&#10;Description&#10;     Locates a clickable element.&#10;&#10;Parameters:&#10;     $page - WebDriver instance or an element to search within&#10;     $link - a link text or locator to click;;d4,996;;b1,0;;m $page;;p $link;;p">
</treenode>
<treenode node="_findElements;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;715;5;718;;;;vpos;;v;;r;;d4,716;;b1,0;;mlocator;;p">
</treenode>
<treenode node="_getCurrentUri;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;693;5;700;;;;vpos;;vstring;;r&#10;Definition&#10;    _getCurrentUri()&#10;&#10;Description&#10;     Uri of currently opened page.;;d4,694;;b1,0;;m">
</treenode>
<treenode node="_getUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;654;5;663;;;;vpos;;vmixed;;r&#10;Definition&#10;    _getUrl()&#10;&#10;Description&#10;     Returns URL of a host.;;d4,655;;b1,0;;m">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;355;5;366;;;;vpos;;v;;r;;d4,356;;b1,0;;m">
</treenode>
<treenode node="_initializeSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1425;5;1445;;;;vpos;;v;;r&#10;Definition&#10;    _initializeSession()&#10;&#10;Description&#10;     Manually starts a new browser session.;;d4,1426;;b1,0;;m">
</treenode>
<treenode node="_loadSession;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1453;5;1457;;;;vpos;;v;;r&#10;Definition&#10;    _loadSession($session)&#10;&#10;Description&#10;     Loads current RemoteWebDriver instance as a session&#10;&#10;Parameters:&#10;    RemoteWebDriver $session;;d4,1454;;b1,0;;mRemoteWebDriver $session;;p">
</treenode>
<treenode node="_requires;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;338;5;341;;;;vpos;;v;;r;;d4,339;;b1,0;;m">
</treenode>
<treenode node="_restart;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;459;5;466;;;;vpos;;v;;r&#10;Definition&#10;    _restart($config = [])&#10;&#10;Description&#10;     Restarts a web browser. Can be used with `_reconfigure` to open browser with different configuration&#10;&#10;Parameters:&#10;    array $config;;d4,460;;b1,0;;marray $config;;p">
</treenode>
<treenode node="_savePageSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;724;5;735;;;;vpos;;v;;r&#10;Definition&#10;    _savePageSource($filename)&#10;&#10;Description&#10;     Saves HTML source of a page to a file&#10;&#10;Parameters:&#10;     $filename;;d4,725;;b1,0;;m $filename;;p">
</treenode>
<treenode node="_saveScreenshot;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;702;5;713;;;;vpos;;v;;r;;d4,703;;b1,0;;mfilename;;p">
</treenode>
<treenode node="acceptPopup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1898;5;1904;;;;vpos;;v;;r&#10;Definition&#10;    acceptPopup()&#10;&#10;Description&#10;     Accepts the active JavaScript native popup window, as created by `window.alert`|`window.confirm`|`window.prompt`. Don&apos;t confuse popups with modal windows, as created by [various libraries](http://jster.net/category/windows-modals-popups).;;d4,1899;;b1,0;;m">
</treenode>
<treenode node="amOnPage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;881;5;886;;;;vpos;;v;;r;;d4,882;;b1,0;;mpage;;p">
</treenode>
<treenode node="amOnSubdomain;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;639;5;645;;;;vpos;;v;;r;;d4,640;;b1,0;;msubdomain;;p">
</treenode>
<treenode node="amOnUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;873;5;879;;;;vpos;;v;;r;;d4,874;;b1,0;;murl;;p">
</treenode>
<treenode node="appendField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2928;5;2987;;;;vpos;;v;;r&#10;Definition&#10;    appendField($field, $value)&#10;&#10;Description&#10;     Append the given text to the given element. Can also add a selection to a select box.&#10;&#10;Parameters:&#10;    string $field&#10;    string $value;;d4,2929;;b1,0;;mstring $field;;pstring $value;;p">
</treenode>
<treenode node="assertNodesContain;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;2867;5;2870;;;;vpos;;v;;r;;d4,2868;;b2,0;;mtext;;pnodes;;pselector;;p">
</treenode>
<treenode node="assertNodesNotContain;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;2872;5;2875;;;;vpos;;v;;r;;d4,2873;;b2,0;;mtext;;pnodes;;pselector;;p">
</treenode>
<treenode node="assertPageContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;2877;5;2884;;;;vpos;;v;;r;;d4,2878;;b2,0;;mneedle;;pmessage;;p">
</treenode>
<treenode node="assertPageNotContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;2886;5;2893;;;;vpos;;v;;r;;d4,2887;;b2,0;;mneedle;;pmessage;;p">
</treenode>
<treenode node="assertPageSourceContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;2895;5;2902;;;;vpos;;v;;r;;d4,2896;;b2,0;;mneedle;;pmessage;;p">
</treenode>
<treenode node="assertPageSourceNotContains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;2904;5;2911;;;;vpos;;v;;r;;d4,2905;;b2,0;;mneedle;;pmessage;;p">
</treenode>
<treenode node="attachFile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1657;5;1676;;;;vpos;;v;;r;;d4,1658;;b1,0;;mfield;;pfilename;;p">
</treenode>
<treenode node="cancelPopup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1909;5;1915;;;;vpos;;v;;r&#10;Definition&#10;    cancelPopup()&#10;&#10;Description&#10;     Dismisses the active JavaScript popup, as created by `window.alert`, `window.confirm`, or `window.prompt`.;;d4,1910;;b1,0;;m">
</treenode>
<treenode node="checkOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1610;5;1620;;;;vpos;;v;;r;;d4,1611;;b1,0;;moption;;p">
</treenode>
<treenode node="clearField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1651;5;1655;;;;vpos;;v;;r&#10;Definition&#10;    clearField($field)&#10;&#10;Description&#10;     Clears given field which isn&apos;t empty.&#10;&#10;Parameters:&#10;     $field;;d4,1652;;b1,0;;m $field;;p">
</treenode>
<treenode node="click;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;951;5;970;;;;vpos;;v;;r;;d4,952;;b1,0;;mlink;;pcontext;;p">
</treenode>
<treenode node="clickWithLeftButton;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2639;5;2643;;;;vpos;;v;;r&#10;Definition&#10;    clickWithLeftButton($cssOrXPath = null, $offsetX = null, $offsetY = null)&#10;&#10;Description&#10;     Performs click with the left mouse button on an element. If the first parameter `null` then the offset is relative to the actual mouse position. If the second and third parameters are given, then the mouse is moved to an offset of the element&apos;s top-left corner. Otherwise, the mouse is moved to the center of the element.&#10;&#10;Parameters:&#10;    string $cssOrXPath - css or xpath of the web element (body by default)&#10;    int $offsetX&#10;    int $offsetY;;d4,2640;;b1,0;;mstring $cssOrXPath;;pint $offsetX;;pint $offsetY;;p">
</treenode>
<treenode node="clickWithRightButton;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2666;5;2670;;;;vpos;;v;;r&#10;Definition&#10;    clickWithRightButton($cssOrXPath = null, $offsetX = null, $offsetY = null)&#10;&#10;Description&#10;     Performs contextual click with the right mouse button on an element. If the first parameter `null` then the offset is relative to the actual mouse position. If the second and third parameters are given, then the mouse is moved to an offset of the element&apos;s top-left corner. Otherwise, the mouse is moved to the center of the element.&#10;&#10;Parameters:&#10;    string $cssOrXPath - css or xpath of the web element (body by default)&#10;    int $offsetX&#10;    int $offsetY;;d4,2667;;b1,0;;mstring $cssOrXPath;;pint $offsetX;;pint $offsetY;;p">
</treenode>
<treenode node="closeTab;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;3145;5;3150;;;;vpos;;v;;r&#10;Definition&#10;    closeTab()&#10;&#10;Description&#10;     Closes current browser tab and switches to previous active tab.;;d4,3146;;b1,0;;m">
</treenode>
<treenode node="convertKeyModifier;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;2843;5;2865;;;;vpos;;v;;r;;d4,2844;;b2,0;;mkeys;;p">
</treenode>
<treenode node="cookieDomainMatchesConfigUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f12;3073;5;3083;;;;vpos;;vbool;;r&#10;Definition&#10;    cookieDomainMatchesConfigUrl($cookie)&#10;&#10;Description&#10;     Check if the cookie domain matches the config URL.&#10;&#10;Parameters:&#10;    array|Cookie $cookie;;d4,3074;;b3,0;;marray|Cookie $cookie;;p">
</treenode>
<treenode node="debugWebDriverLogs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;530;5;560;;;;vpos;;v;;r&#10;Definition&#10;    debugWebDriverLogs(TestInterface $test = null)&#10;&#10;Description&#10;     Print out latest Selenium Logs in debug mode&#10;&#10;Parameters:&#10;    TestInterface $test;;d4,531;;b1,0;;mTestInterface $test;;p">
</treenode>
<treenode node="disableImplicitWait;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;3289;5;3295;;;;vpos;;v;;r;;d4,3290;;b2,0;;m">
</treenode>
<treenode node="dontSee;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;899;5;906;;;;vpos;;v;;r;;d4,900;;b1,0;;mtext;;pselector;;p">
</treenode>
<treenode node="dontSeeCheckboxIsChecked;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1198;5;1201;;;;vpos;;v;;r;;d4,1199;;b1,0;;mcheckbox;;p">
</treenode>
<treenode node="dontSeeCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;795;5;806;;;;vpos;;v;;r;;d4,796;;b1,0;;mcookie;;pparams;;p">
</treenode>
<treenode node="dontSeeCurrentUrlEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1167;5;1170;;;;vpos;;v;;r;;d4,1168;;b1,0;;muri;;p">
</treenode>
<treenode node="dontSeeCurrentUrlMatches;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1172;5;1175;;;;vpos;;v;;r;;d4,1173;;b1,0;;muri;;p">
</treenode>
<treenode node="dontSeeElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1761;5;1766;;;;vpos;;v;;r;;d4,1762;;b1,0;;mselector;;pattributes;;p">
</treenode>
<treenode node="dontSeeElementInDOM;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1796;5;1801;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeElementInDOM($selector, $attributes = [])&#10;&#10;Description&#10;     Opposite of `seeElementInDOM`.&#10;&#10;Parameters:&#10;     $selector&#10;    array $attributes;;d4,1797;;b1,0;;m $selector;;parray $attributes;;p">
</treenode>
<treenode node="dontSeeInCurrentUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1162;5;1165;;;;vpos;;v;;r;;d4,1163;;b1,0;;muri;;p">
</treenode>
<treenode node="dontSeeInField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1209;5;1213;;;;vpos;;v;;r;;d4,1210;;b1,0;;mfield;;pvalue;;p">
</treenode>
<treenode node="dontSeeInFormFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1220;5;1223;;;;vpos;;v;;r;;d4,1221;;b1,0;;mformSelector;;pparams;;p">
</treenode>
<treenode node="dontSeeInPageSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;942;5;949;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeInPageSource($text)&#10;&#10;Description&#10;     Checks that the page source doesn&apos;t contain the given string.&#10;&#10;Parameters:&#10;     $text;;d4,943;;b1,0;;m $text;;p">
</treenode>
<treenode node="dontSeeInPopup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1947;5;1959;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeInPopup($text)&#10;&#10;Description&#10;     Checks that the active JavaScript popup, as created by `window.alert`|`window.confirm`|`window.prompt`, does NOT contain the given string.&#10;&#10;Parameters:&#10;     $text;;d4,1948;;b1,0;;m $text;;p">
</treenode>
<treenode node="dontSeeInSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;913;5;916;;;;vpos;;v;;r;;d4,914;;b1,0;;mraw;;p">
</treenode>
<treenode node="dontSeeInTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1888;5;1891;;;;vpos;;v;;r;;d4,1889;;b1,0;;mtitle;;p">
</treenode>
<treenode node="dontSeeLink;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1114;5;1124;;;;vpos;;v;;r;;d4,1115;;b1,0;;mtext;;purl;;p">
</treenode>
<treenode node="dontSeeOptionIsSelected;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1861;5;1881;;;;vpos;;v;;r;;d4,1862;;b1,0;;mselector;;poptionText;;p">
</treenode>
<treenode node="doubleClick;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2690;5;2694;;;;vpos;;v;;r&#10;Definition&#10;    doubleClick($cssOrXPath)&#10;&#10;Description&#10;     Performs a double-click on an element matched by CSS or XPath.&#10;&#10;Parameters:&#10;     $cssOrXPath;;d4,2691;;b1,0;;m $cssOrXPath;;p">
</treenode>
<treenode node="dragAndDrop;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2577;5;2584;;;;vpos;;v;;r&#10;Definition&#10;    dragAndDrop($source, $target)&#10;&#10;Description&#10;     Performs a simple mouse drag-and-drop operation.&#10;&#10;Parameters:&#10;    string $source - (CSS ID or XPath)&#10;    string $target - (CSS ID or XPath);;d4,2578;;b1,0;;mstring $source;;pstring $target;;p">
</treenode>
<treenode node="enableImplicitWait;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;3281;5;3287;;;;vpos;;v;;r;;d4,3282;;b2,0;;m">
</treenode>
<treenode node="executeAsyncJS;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2552;5;2555;;;;vpos;;vmixed;;r&#10;Definition&#10;    executeAsyncJS($script, array $arguments = [])&#10;&#10;Description&#10;     Executes asynchronous JavaScript. A callback should be executed by JavaScript to exit from a script. Callback is passed as a last element in `arguments` array. Additional arguments can be passed as array in second parameter.&#10;&#10;Parameters:&#10;     $script&#10;    array $arguments;;d4,2553;;b1,0;;m $script;;parray $arguments;;p">
</treenode>
<treenode node="executeInSelenium;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2409;5;2412;;;;vpos;;v;;r&#10;Definition&#10;    executeInSelenium(\Closure $function)&#10;&#10;Description&#10;     Low-level API method. If Codeception commands are not enough, this allows you to use Selenium WebDriver methods directly:&#10;&#10;Parameters:&#10;    callable $function;;d4,2410;;b1,0;;mcallable $function;;p">
</treenode>
<treenode node="executeJS;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2529;5;2532;;;;vpos;;vmixed;;r&#10;Definition&#10;    executeJS($script, array $arguments = [])&#10;&#10;Description&#10;     Executes custom JavaScript.&#10;&#10;Parameters:&#10;     $script&#10;    array $arguments;;d4,2530;;b1,0;;m $script;;parray $arguments;;p">
</treenode>
<treenode node="fillField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1634;5;1639;;;;vpos;;v;;r;;d4,1635;;b1,0;;mfield;;pvalue;;p">
</treenode>
<treenode node="filterByAttributes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;1739;5;1750;;;;vpos;;v;;r;;d4,1740;;b2,0;;mels;;pattributes;;p">
</treenode>
<treenode node="filterCookies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;857;5;871;;;;vpos;;v;;r;;d4,858;;b2,0;;mcookies;;pparams;;p">
</treenode>
<treenode node="filterNodesByHref;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f12;1131;5;1145;;;;vpos;;varray;;r&#10;Definition&#10;    filterNodesByHref($url, $nodes)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $url&#10;     $nodes;;d4,1132;;b3,0;;mstring $url;;p $nodes;;p">
</treenode>
<treenode node="findCheckable;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;1547;5;1599;;;;vpos;;vmixed;;r&#10;Definition&#10;    findCheckable($context, $radioOrCheckbox, $byValue = false)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $context&#10;     $radioOrCheckbox&#10;    bool $byValue&#10;&#10;Return:&#10;   |null;;d4,1548;;b2,0;;m $context;;p $radioOrCheckbox;;pbool $byValue;;p">
</treenode>
<treenode node="findField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;1092;5;1096;;;;vpos;;vWebDriverElement;;r&#10;Definition&#10;    findField($selector)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $selector;;d4,1093;;b2,0;;m $selector;;p">
</treenode>
<treenode node="findFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;1044;5;1085;;;;vpos;;vWebDriverElement;;r&#10;Definition&#10;    findFields($selector)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $selector&#10;&#10;Return:&#10;   [];;d4,1045;;b2,0;;m $selector;;p">
</treenode>
<treenode node="formatLogEntries;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;570;5;582;;;;vpos;;vstring;;r&#10;Definition&#10;    formatLogEntries(array $logEntries)&#10;&#10;Description&#10;     Turns an array of log entries into a human-readable string. Each log entry is an array with the keys &quot;timestamp&quot;, &quot;level&quot;, and &quot;message&quot;. See https://code.google.com/p/selenium/wiki/JsonWireProtocol#Log_Entry_JSON_Object&#10;&#10;Parameters:&#10;    array $logEntries;;d4,571;;b2,0;;marray $logEntries;;p">
</treenode>
<treenode node="getBaseElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;347;5;353;;;;vpos;;vRemoteWebElement;;r&#10;Definition&#10;    getBaseElement()&#10;&#10;Description&#10;     ;;d4,348;;b2,0;;m">
</treenode>
<treenode node="getLocator;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;3010;5;3028;;;;vpos;;vWebDriverBy;;r&#10;Definition&#10;    getLocator($selector)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $selector;;d4,3011;;b2,0;;m $selector;;p">
</treenode>
<treenode node="getProxy;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;665;5;685;;;;vpos;;v;;r;;d4,666;;b2,0;;m">
</treenode>
<treenode node="getRelativeTabHandle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;3195;5;3204;;;;vpos;;v;;r;;d4,3196;;b2,0;;moffset;;p">
</treenode>
<treenode node="getStrictLocator;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;2768;5;2791;;;;vpos;;vWebDriverBy;;r&#10;Definition&#10;    getStrictLocator(array $by)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    array $by;;d4,2769;;b2,0;;marray $by;;p">
</treenode>
<treenode node="getSubmissionFormFieldName;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;2002;5;2008;;;;vpos;;v;;r;;d4,2003;;b2,0;;mname;;p">
</treenode>
<treenode node="getVisibleText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;1683;5;1693;;;;vpos;;vstring;;r&#10;Definition&#10;    getVisibleText()&#10;&#10;Description&#10;     Grabs all visible text from the current page.;;d4,1684;;b2,0;;m">
</treenode>
<treenode node="grabAttributeFrom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1707;5;1711;;;;vpos;;v;;r;;d4,1708;;b1,0;;mcssOrXpath;;pattribute;;p">
</treenode>
<treenode node="grabCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;831;5;840;;;;vpos;;v;;r;;d4,832;;b1,0;;mcookie;;pparams;;p">
</treenode>
<treenode node="grabFromCurrentUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1177;5;1191;;;;vpos;;v;;r;;d4,1178;;b1,0;;muri;;p">
</treenode>
<treenode node="grabMultiple;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1724;5;1736;;;;vpos;;v;;r;;d4,1725;;b1,0;;mcssOrXpath;;pattribute;;p">
</treenode>
<treenode node="grabPageSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;849;5;855;;;;vpos;;vstring;;r&#10;Definition&#10;    grabPageSource()&#10;&#10;Description&#10;     Grabs current page source code.&#10;&#10;Return:&#10;   Current page source code;;d4,850;;b1,0;;m">
</treenode>
<treenode node="grabTextFrom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1695;5;1705;;;;vpos;;v;;r;;d4,1696;;b1,0;;mcssOrXPathOrRegex;;p">
</treenode>
<treenode node="grabValueFrom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1713;5;1722;;;;vpos;;v;;r;;d4,1714;;b1,0;;mfield;;p">
</treenode>
<treenode node="initialWindowSize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;490;5;500;;;;vpos;;v;;r;;d4,491;;b2,0;;m">
</treenode>
<treenode node="isJSError;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;614;5;622;;;;vpos;;vbool;;r&#10;Definition&#10;    isJSError($logEntryLevel, $message)&#10;&#10;Description&#10;     Determines if the log entry is an error. The decision is made depending on browser and log-level.&#10;&#10;Parameters:&#10;    string $logEntryLevel&#10;    string $message;;d4,615;;b2,0;;mstring $logEntryLevel;;pstring $message;;p">
</treenode>
<treenode node="isPhantom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;3088;5;3091;;;;vpos;;vbool;;r&#10;Definition&#10;    isPhantom()&#10;&#10;Description&#10;     ;;d4,3089;;b2,0;;m">
</treenode>
<treenode node="loadFirefoxProfile;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;473;5;488;;;;vpos;;v;;r;;d4,474;;b2,0;;m">
</treenode>
<treenode node="loadSessionSnapshot;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;3054;5;3065;;;;vpos;;vbool;;r&#10;Definition&#10;    loadSessionSnapshot($name)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $name;;d4,3055;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="logJSErrors;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;590;5;604;;;;vpos;;v;;r&#10;Definition&#10;    logJSErrors(ScenarioDriven $test, array $browserLogEntries)&#10;&#10;Description&#10;     Logs JavaScript errors as comments.&#10;&#10;Parameters:&#10;    ScenarioDriven $test&#10;    array $browserLogEntries;;d4,591;;b2,0;;mScenarioDriven $test;;parray $browserLogEntries;;p">
</treenode>
<treenode node="makeScreenshot;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;751;5;763;;;;vpos;;v;;r&#10;Definition&#10;    makeScreenshot($name = null)&#10;&#10;Description&#10;     Takes a screenshot of the current window and saves it to `tests/_output/debug`.&#10;&#10;Parameters:&#10;     $name;;d4,752;;b1,0;;m $name;;p">
</treenode>
<treenode node="match;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;2702;5;2762;;;;vpos;;varray;;r&#10;Definition&#10;    match($page, $selector, $throwMalformed = true)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $page&#10;     $selector&#10;    bool $throwMalformed;;d4,2703;;b2,0;;m $page;;p $selector;;pbool $throwMalformed;;p">
</treenode>
<treenode node="matchCheckables;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;1601;5;1608;;;;vpos;;v;;r;;d4,1602;;b2,0;;mselector;;p">
</treenode>
<treenode node="matchFirstOrFail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;2799;5;2808;;;;vpos;;vWebDriverElement;;r&#10;Definition&#10;    matchFirstOrFail($page, $selector)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $page&#10;     $selector;;d4,2800;;b2,0;;m $page;;p $selector;;p">
</treenode>
<treenode node="matchVisible;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;2993;5;3003;;;;vpos;;varray;;r&#10;Definition&#10;    matchVisible($selector)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $selector;;d4,2994;;b2,0;;m $selector;;p">
</treenode>
<treenode node="maximizeWindow;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2560;5;2563;;;;vpos;;v;;r&#10;Definition&#10;    maximizeWindow()&#10;&#10;Description&#10;     Maximizes the current window.;;d4,2561;;b1,0;;m">
</treenode>
<treenode node="moveBack;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1987;5;1991;;;;vpos;;v;;r&#10;Definition&#10;    moveBack()&#10;&#10;Description&#10;     Moves back in history.;;d4,1988;;b1,0;;m">
</treenode>
<treenode node="moveForward;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1996;5;2000;;;;vpos;;v;;r&#10;Definition&#10;    moveForward()&#10;&#10;Description&#10;     Moves forward in history.;;d4,1997;;b1,0;;m">
</treenode>
<treenode node="moveMouseOver;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2607;5;2616;;;;vpos;;v;;r&#10;Definition&#10;    moveMouseOver($cssOrXPath = null, $offsetX = null, $offsetY = null)&#10;&#10;Description&#10;     Move mouse over the first element matched by the given locator. If the first parameter null then the page is used. If the second and third parameters are given, then the mouse is moved to an offset of the element&apos;s top-left corner. Otherwise, the mouse is moved to the center of the element.&#10;&#10;Parameters:&#10;    string $cssOrXPath - css or xpath of the web element&#10;    int $offsetX&#10;    int $offsetY;;d4,2608;;b1,0;;mstring $cssOrXPath;;pint $offsetX;;pint $offsetY;;p">
</treenode>
<treenode node="onReconfigure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;468;5;471;;;;vpos;;v;;r;;d4,469;;b2,0;;m">
</treenode>
<treenode node="openNewTab;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;3129;5;3133;;;;vpos;;v;;r&#10;Definition&#10;    openNewTab()&#10;&#10;Description&#10;     Opens a new browser tab (wherever it is possible) and switches to it.;;d4,3130;;b1,0;;m">
</treenode>
<treenode node="pauseExecution;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2679;5;2682;;;;vpos;;v;;r&#10;Definition&#10;    pauseExecution()&#10;&#10;Description&#10;     Pauses test execution in debug mode. To proceed test press &quot;ENTER&quot; in console.;;d4,2680;;b1,0;;m">
</treenode>
<treenode node="performOn;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;3249;5;3270;;;;vpos;;v;;r&#10;Definition&#10;    performOn($element, $actions, $timeout = 10)&#10;&#10;Description&#10;     Waits for element and runs a sequence of actions inside its context. Actions can be defined with array, callback, or `Codeception\Util\ActionSequence` instance.&#10;&#10;Parameters:&#10;     $element&#10;     $actions&#10;    int $timeout;;d4,3250;;b1,0;;m $element;;p $actions;;pint $timeout;;p">
</treenode>
<treenode node="pressKey;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2831;5;2841;;;;vpos;;v;;r&#10;Definition&#10;    pressKey($element, $char)&#10;&#10;Description&#10;     Presses the given key on the given element. To specify a character and modifier (e.g. ctrl, alt, shift, meta), pass an array for $char with the modifier as the first element and the character as the second. For special keys use key constants from WebDriverKeys class.&#10;&#10;Parameters:&#10;     $element&#10;     $char - string|array Can be char or array with modifier;;d4,2832;;b1,0;;m $element;;p $char;;p">
</treenode>
<treenode node="proceedSeeInField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;1286;5;1338;;;;vpos;;varray;;r&#10;Definition&#10;    proceedSeeInField(array $elements, $value)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    RemoteWebElement[] $elements&#10;     $value;;d4,1287;;b2,0;;mRemoteWebElement[] $elements;;p $value;;p">
</treenode>
<treenode node="proceedSeeInFormFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;1225;5;1254;;;;vpos;;v;;r;;d4,1226;;b2,0;;mformSelector;;pparams;;passertNot;;p">
</treenode>
<treenode node="pushFormField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;1266;5;1279;;;;vpos;;vvoid;;r&#10;Definition&#10;    pushFormField(&amp;$els, $form, $name, $values)&#10;&#10;Description&#10;     Map an array element passed to seeInFormFields to its corresponding WebDriver element, recursing through array values if the field is not found.&#10;&#10;Parameters:&#10;    array $els - The previously found elements&#10;    RemoteWebElement $form - The form in which to search for fields&#10;    string $name - The field&apos;s name&#10;    mixed $values;;d4,1267;;b2,0;;marray $els;;pRemoteWebElement $form;;pstring $name;;pmixed $values;;p">
</treenode>
<treenode node="reloadPage;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1979;5;1982;;;;vpos;;v;;r&#10;Definition&#10;    reloadPage()&#10;&#10;Description&#10;     Reloads the current page.;;d4,1980;;b1,0;;m">
</treenode>
<treenode node="resetCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;825;5;829;;;;vpos;;v;;r;;d4,826;;b1,0;;mcookie;;pparams;;p">
</treenode>
<treenode node="resizeWindow;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;777;5;780;;;;vpos;;v;;r&#10;Definition&#10;    resizeWindow($width, $height)&#10;&#10;Description&#10;     Resize the current window.&#10;&#10;Parameters:&#10;    int $width&#10;    int $height;;d4,778;;b1,0;;mint $width;;pint $height;;p">
</treenode>
<treenode node="saveSessionSnapshot;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;3033;5;3048;;;;vpos;;v;;r&#10;Definition&#10;    saveSessionSnapshot($name)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    string $name;;d4,3034;;b1,0;;mstring $name;;p">
</treenode>
<treenode node="scrollTo;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;3108;5;3114;;;;vpos;;v;;r&#10;Definition&#10;    scrollTo($selector, $offsetX = null, $offsetY = null)&#10;&#10;Description&#10;     Move to the middle of the given element matched by the given locator. Extra shift, calculated from the top-left corner of the element, can be set by passing $offsetX and $offsetY parameters.&#10;&#10;Parameters:&#10;     $selector&#10;    int $offsetX&#10;    int $offsetY;;d4,3109;;b1,0;;m $selector;;pint $offsetX;;pint $offsetY;;p">
</treenode>
<treenode node="see;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;888;5;897;;;;vpos;;v;;r;;d4,889;;b1,0;;mtext;;pselector;;p">
</treenode>
<treenode node="seeCheckboxIsChecked;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1193;5;1196;;;;vpos;;v;;r;;d4,1194;;b1,0;;mcheckbox;;p">
</treenode>
<treenode node="seeCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;782;5;793;;;;vpos;;v;;r;;d4,783;;b1,0;;mcookie;;pparams;;p">
</treenode>
<treenode node="seeCurrentUrlEquals;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1152;5;1155;;;;vpos;;v;;r;;d4,1153;;b1,0;;muri;;p">
</treenode>
<treenode node="seeCurrentUrlMatches;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1157;5;1160;;;;vpos;;v;;r;;d4,1158;;b1,0;;muri;;p">
</treenode>
<treenode node="seeElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1752;5;1759;;;;vpos;;v;;r;;d4,1753;;b1,0;;mselector;;pattributes;;p">
</treenode>
<treenode node="seeElementInDOM;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1780;5;1787;;;;vpos;;v;;r&#10;Definition&#10;    seeElementInDOM($selector, $attributes = [])&#10;&#10;Description&#10;     Checks that the given element exists on the page, even it is invisible.&#10;&#10;Parameters:&#10;     $selector&#10;    array $attributes;;d4,1781;;b1,0;;m $selector;;parray $attributes;;p">
</treenode>
<treenode node="seeInCurrentUrl;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1147;5;1150;;;;vpos;;v;;r;;d4,1148;;b1,0;;muri;;p">
</treenode>
<treenode node="seeInField;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1203;5;1207;;;;vpos;;v;;r;;d4,1204;;b1,0;;mfield;;pvalue;;p">
</treenode>
<treenode node="seeInFormFields;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1215;5;1218;;;;vpos;;v;;r;;d4,1216;;b1,0;;mformSelector;;pparams;;p">
</treenode>
<treenode node="seeInPageSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;928;5;935;;;;vpos;;v;;r&#10;Definition&#10;    seeInPageSource($text)&#10;&#10;Description&#10;     Checks that the page source contains the given string.&#10;&#10;Parameters:&#10;     $text;;d4,929;;b1,0;;m $text;;p">
</treenode>
<treenode node="seeInPopup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1925;5;1937;;;;vpos;;v;;r&#10;Definition&#10;    seeInPopup($text)&#10;&#10;Description&#10;     Checks that the active JavaScript popup, as created by `window.alert`|`window.confirm`|`window.prompt`, contains the given string.&#10;&#10;Parameters:&#10;     $text;;d4,1926;;b1,0;;m $text;;p">
</treenode>
<treenode node="seeInSource;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;908;5;911;;;;vpos;;v;;r;;d4,909;;b1,0;;mraw;;p">
</treenode>
<treenode node="seeInTitle;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1883;5;1886;;;;vpos;;v;;r;;d4,1884;;b1,0;;mtitle;;p">
</treenode>
<treenode node="seeLink;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1098;5;1112;;;;vpos;;v;;r;;d4,1099;;b1,0;;mtext;;purl;;p">
</treenode>
<treenode node="seeNumberOfElements;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1803;5;1819;;;;vpos;;v;;r;;d4,1804;;b1,0;;mselector;;pexpected;;p">
</treenode>
<treenode node="seeNumberOfElementsInDOM;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1821;5;1837;;;;vpos;;v;;r;;d4,1822;;b1,0;;mselector;;pexpected;;p">
</treenode>
<treenode node="seeOptionIsSelected;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1839;5;1859;;;;vpos;;v;;r;;d4,1840;;b1,0;;mselector;;poptionText;;p">
</treenode>
<treenode node="selectOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1340;5;1413;;;;vpos;;v;;r;;d4,1341;;b1,0;;mselect;;poption;;p">
</treenode>
<treenode node="setBaseElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;3272;5;3279;;;;vpos;;v;;r;;d4,3273;;b2,0;;melement;;p">
</treenode>
<treenode node="setCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;808;5;823;;;;vpos;;v;;r;;d4,809;;b1,0;;mcookie;;pvalue;;pparams;;p">
</treenode>
<treenode node="stopAllSessions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f14;630;5;637;;;;vpos;;v;;r;;d4,631;;b2,0;;m">
</treenode>
<treenode node="submitForm;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2169;5;2246;;;;vpos;;v;;r&#10;Definition&#10;    submitForm($selector, array $params, $button = null)&#10;&#10;Description&#10;     Submits the given form on the page, optionally with the given form values.  Give the form fields values as an array. Note that hidden fields can&apos;t be accessed.&#10;&#10;Parameters:&#10;     $selector&#10;     $params&#10;     $button;;d4,2170;;b1,0;;m $selector;;p $params;;p $button;;p">
</treenode>
<treenode node="switchToIFrame;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2475;5;2482;;;;vpos;;v;;r&#10;Definition&#10;    switchToIFrame($name = null)&#10;&#10;Description&#10;     Switch to another frame on the page.&#10;&#10;Parameters:&#10;    string|null $name;;d4,2476;;b1,0;;mstring|null $name;;p">
</treenode>
<treenode node="switchToNextTab;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;3168;5;3172;;;;vpos;;v;;r&#10;Definition&#10;    switchToNextTab($offset = 1)&#10;&#10;Description&#10;     Switches to next browser tab. An offset can be specified.&#10;&#10;Parameters:&#10;    int $offset - 1;;d4,3169;;b1,0;;mint $offset;;p">
</treenode>
<treenode node="switchToPreviousTab;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;3190;5;3193;;;;vpos;;v;;r&#10;Definition&#10;    switchToPreviousTab($offset = 1)&#10;&#10;Description&#10;     Switches to previous browser tab. An offset can be specified.&#10;&#10;Parameters:&#10;    int $offset - 1;;d4,3191;;b1,0;;mint $offset;;p">
</treenode>
<treenode node="switchToWindow;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2450;5;2453;;;;vpos;;v;;r&#10;Definition&#10;    switchToWindow($name = null)&#10;&#10;Description&#10;     Switch to another window identified by name.&#10;&#10;Parameters:&#10;    string|null $name;;d4,2451;;b1,0;;mstring|null $name;;p">
</treenode>
<treenode node="typeInPopup;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1968;5;1974;;;;vpos;;v;;r&#10;Definition&#10;    typeInPopup($keys)&#10;&#10;Description&#10;     Enters text into a native JavaScript prompt popup, as created by `window.prompt`.&#10;&#10;Parameters:&#10;     $keys;;d4,1969;;b1,0;;m $keys;;p">
</treenode>
<treenode node="uncheckOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1622;5;1632;;;;vpos;;v;;r;;d4,1623;;b1,0;;moption;;p">
</treenode>
<treenode node="unselectOption;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;1507;5;1539;;;;vpos;;v;;r&#10;Definition&#10;    unselectOption($select, $option)&#10;&#10;Description&#10;     Unselect an option in the given select box.&#10;&#10;Parameters:&#10;     $select&#10;     $option;;d4,1508;;b1,0;;m $select;;p $option;;p">
</treenode>
<treenode node="wait;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2380;5;2390;;;;vpos;;v;;r&#10;Definition&#10;    wait($timeout)&#10;&#10;Description&#10;     Wait for $timeout seconds.&#10;&#10;Parameters:&#10;    int|float $timeout - secs;;d4,2381;;b1,0;;mint|float $timeout;;p">
</treenode>
<treenode node="waitForElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2291;5;2295;;;;vpos;;v;;r&#10;Definition&#10;    waitForElement($element, $timeout = 10)&#10;&#10;Description&#10;     Waits up to $timeout seconds for an element to appear on the page. If the element doesn&apos;t appear, a timeout exception is thrown.&#10;&#10;Parameters:&#10;     $element&#10;    int $timeout - seconds;;d4,2292;;b1,0;;m $element;;pint $timeout;;p">
</treenode>
<treenode node="waitForElementChange;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2267;5;2274;;;;vpos;;v;;r&#10;Definition&#10;    waitForElementChange($element, \Closure $callback, $timeout = 30)&#10;&#10;Description&#10;     Waits up to $timeout seconds for the given element to change. Element &quot;change&quot; is determined by a callback function which is called repeatedly until the return value evaluates to true.&#10;&#10;Parameters:&#10;     $element&#10;    \Closure $callback&#10;    int $timeout - seconds;;d4,2268;;b1,0;;m $element;;p\Closure $callback;;pint $timeout;;p">
</treenode>
<treenode node="waitForElementNotVisible;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2332;5;2336;;;;vpos;;v;;r&#10;Definition&#10;    waitForElementNotVisible($element, $timeout = 10)&#10;&#10;Description&#10;     Waits up to $timeout seconds for the given element to become invisible. If element stays visible, a timeout exception is thrown.&#10;&#10;Parameters:&#10;     $element&#10;    int $timeout - seconds;;d4,2333;;b1,0;;m $element;;pint $timeout;;p">
</treenode>
<treenode node="waitForElementVisible;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2312;5;2316;;;;vpos;;v;;r&#10;Definition&#10;    waitForElementVisible($element, $timeout = 10)&#10;&#10;Description&#10;     Waits up to $timeout seconds for the given element to be visible on the page. If element doesn&apos;t appear, a timeout exception is thrown.&#10;&#10;Parameters:&#10;     $element&#10;    int $timeout - seconds;;d4,2313;;b1,0;;m $element;;pint $timeout;;p">
</treenode>
<treenode node="waitForJS;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2498;5;2509;;;;vpos;;v;;r&#10;Definition&#10;    waitForJS($script, $timeout = 5)&#10;&#10;Description&#10;     Executes JavaScript and waits up to $timeout seconds for it to return true.&#10;&#10;Parameters:&#10;    string $script&#10;    int $timeout - seconds;;d4,2499;;b1,0;;mstring $script;;pint $timeout;;p">
</treenode>
<treenode node="waitForText;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\WebDriver.php;f11;2357;5;2372;;;;vpos;;v;;r&#10;Definition&#10;    waitForText($text, $timeout = 10, $selector = null)&#10;&#10;Description&#10;     Waits up to $timeout seconds for the given string to appear on the page.&#10;&#10;Parameters:&#10;    string $text&#10;    int $timeout - seconds&#10;    string $selector - optional;;d4,2358;;b1,0;;mstring $text;;pint $timeout;;pstring $selector;;p">
</treenode>
</treenode>
<treenode node="WebDriverActions;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;57;90;57;;;;vpos;;vWebDriverActions;;c;;r;;d88,57;;b0,0;;m">
</treenode>
<treenode node="WebDriverAlert;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;60;73;60;;;;vpos;;vWebDriverAlert;;c;;r;;d71,60;;b0,0;;m">
</treenode>
<treenode node="WebDriverBy;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;61;67;61;;;;vpos;;vWebDriverBy;;c;;r;;d65,61;;b0,0;;m">
</treenode>
<treenode node="WebDriverCapabilityType;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;59;98;59;;;;vpos;;vWebDriverCapabilityType;;c;;r;;d96,59;;b0,0;;m">
</treenode>
<treenode node="WebDriverCurlException;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;56;99;56;;;;vpos;;vWebDriverCurlException;;c;;r;;d97,56;;b0,0;;m">
</treenode>
<treenode node="WebDriverDimension;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;62;81;62;;;;vpos;;vWebDriverDimension;;c;;r;;d79,62;;b0,0;;m">
</treenode>
<treenode node="WebDriverExpectedCondition;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;64;97;64;;;;vpos;;vWebDriverExpectedCondition;;c;;r;;d95,64;;b0,0;;m">
</treenode>
<treenode node="WebDriverKeys;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;65;71;65;;;;vpos;;vWebDriverKeys;;c;;r;;d69,65;;b0,0;;m">
</treenode>
<treenode node="WebDriverSelect;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;66;75;66;;;;vpos;;vWebDriverSelect;;c;;r;;d73,66;;b0,0;;m">
</treenode>
<treenode node="WebDriverTimeouts;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;67;79;67;;;;vpos;;vWebDriverTimeouts;;c;;r;;d77,67;;b0,0;;m">
</treenode>
<treenode node="WebDriverWindow;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\shim.php;f8;68;75;68;;;;vpos;;vWebDriverWindow;;c;;r;;d73,68;;b0,0;;m">
</treenode>
<treenode node="Xml;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Xml.php;f0;3;1;62;;;;vpos;;v;;r;;d0,4;;b0,0;;m">
<treenode node="arrayToXml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Xml.php;f18;14;5;24;;;;vpos;;v;;r&#10;Definition&#10;    arrayToXml(\DOMDocument $xml, \DOMNode $node, $array = [])&#10;&#10;Description&#10;      static&#10;&#10;Parameters:&#10;    \DOMDocument $xml&#10;    \DOMNode $node&#10;    array $array;;d4,15;;b1,5;;m\DOMDocument $xml;;p\DOMNode $node;;parray $array;;p">
</treenode>
<treenode node="build;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Xml.php;f18;58;5;61;;;;vpos;;v;;r;;d4,59;;b1,5;;m">
</treenode>
<treenode node="toXml;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\Xml.php;f18;33;5;56;;;;vpos;;v;;r&#10;Definition&#10;    toXml($xml)&#10;&#10;Description&#10;      static&#10;&#10;Parameters:&#10;     $xml;;d4,34;;b1,5;;m $xml;;p">
</treenode>
</treenode>
<treenode node="XmlBuilder;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlBuilder.php;f0;66;1;176;;;;vpos;;v;;r&#10;Definition&#10;    class XmlBuilder&#10;&#10;Description&#10;     That&apos;s a pretty simple yet powerful class to build XML structures in jQuery-like style. With no XML line actually written! Uses DOM extension to manipulate XML data.;;d0,67;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlBuilder.php;f11;79;5;83;;;;vpos;;v;;r;;d4,80;;b1,0;;m">
</treenode>
<treenode node="__get;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlBuilder.php;f11;92;5;98;;;;vpos;;vXmlBuilder;;r&#10;Definition&#10;    __get($tag)&#10;&#10;Description&#10;     Appends child node&#10;&#10;Parameters:&#10;     $tag;;d4,93;;b1,0;;m $tag;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlBuilder.php;f11;164;5;167;;;;vpos;;v;;r;;d4,165;;b1,0;;m">
</treenode>
<treenode node="attr;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlBuilder.php;f11;119;5;123;;;;vpos;;vXmlBuilder;;r&#10;Definition&#10;    attr($attr, $val)&#10;&#10;Description&#10;     Sets attribute for current node&#10;&#10;Parameters:&#10;     $attr&#10;     $val;;d4,120;;b1,0;;m $attr;;p $val;;p">
</treenode>
<treenode node="getDom;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlBuilder.php;f11;172;5;175;;;;vpos;;v;;r&#10;Definition&#10;    getDom()&#10;&#10;Description&#10;      \DOMDocument;;d4,173;;b1,0;;m">
</treenode>
<treenode node="parents;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlBuilder.php;f11;144;5;162;;;;vpos;;vXmlBuilder;;r&#10;Definition&#10;    parents($tag)&#10;&#10;Description&#10;     Traverses to parent with $name&#10;&#10;Parameters:&#10;     $tag;;d4,145;;b1,0;;m $tag;;p">
</treenode>
<treenode node="val;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlBuilder.php;f11;105;5;109;;;;vpos;;vXmlBuilder;;r&#10;Definition&#10;    val($val)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $val;;d4,106;;b1,0;;m $val;;p">
</treenode>
</treenode>
<treenode node="XMLRPC;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\XMLRPC.php;f0;43;1;164;;;;vpos;;vCodeceptionModule;;cAPI;;c;;r&#10;Definition&#10;    class XMLRPC extends CodeceptionModule implements API&#10;&#10;Description&#10;     Module for testing XMLRPC WebService.;;d0,44;;b0,0;;m">
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\XMLRPC.php;f11;65;5;100;;;;vpos;;v;;r;;d4,66;;b1,0;;mtest;;p">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\XMLRPC.php;f11;57;5;63;;;;vpos;;v;;r;;d4,58;;b1,0;;m">
</treenode>
<treenode node="haveHttpHeader;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\XMLRPC.php;f11;108;5;111;;;;vpos;;v;;r&#10;Definition&#10;    haveHttpHeader($name, $value)&#10;&#10;Description&#10;     Sets HTTP header&#10;&#10;Parameters:&#10;    string $name&#10;    string $value;;d4,109;;b1,0;;mstring $name;;pstring $value;;p">
</treenode>
<treenode node="seeResponseCodeIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\XMLRPC.php;f11;118;5;121;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseCodeIs($num)&#10;&#10;Description&#10;     Checks response code.&#10;&#10;Parameters:&#10;     $num;;d4,119;;b1,0;;m $num;;p">
</treenode>
<treenode node="seeResponseIsXMLRPC;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\XMLRPC.php;f11;128;5;132;;;;vpos;;v;;r&#10;Definition&#10;    seeResponseIsXMLRPC()&#10;&#10;Description&#10;     Checks weather last response was valid XMLRPC. This is done with xmlrpc_decode function.;;d4,129;;b1,0;;m">
</treenode>
<treenode node="sendXMLRPCMethodCall;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\XMLRPC.php;f11;140;5;163;;;;vpos;;v;;r&#10;Definition&#10;    sendXMLRPCMethodCall($methodName, $parameters = [])&#10;&#10;Description&#10;     Sends a XMLRPC method call to remote XMLRPC-server.&#10;&#10;Parameters:&#10;    string $methodName&#10;    array $parameters;;d4,141;;b1,0;;mstring $methodName;;parray $parameters;;p">
</treenode>
</treenode>
<treenode node="XmlStructure;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlStructure.php;f0;9;1;91;;;;vpos;;v;;r;;d0,10;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlStructure.php;f11;16;5;19;;;;vpos;;v;;r;;d4,17;;b1,0;;mxml;;p">
</treenode>
<treenode node="matchElement;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlStructure.php;f11;35;5;51;;;;vpos;;v;;r&#10;Definition&#10;    matchElement($cssOrXPath)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $cssOrXPath;;d4,36;;b1,0;;m $cssOrXPath;;p">
</treenode>
<treenode node="matchesXpath;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlStructure.php;f11;21;5;29;;;;vpos;;v;;r;;d4,22;;b1,0;;mxpath;;p">
</treenode>
<treenode node="matchForNode;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlStructure.php;f14;73;5;90;;;;vpos;;v;;r;;d4,74;;b2,0;;mschema;;pxml;;p">
</treenode>
<treenode node="matchXmlStructure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\XmlStructure.php;f11;57;5;71;;;;vpos;;vbool;;r&#10;Definition&#10;    matchXmlStructure($xml)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $xml;;d4,58;;b1,0;;m $xml;;p">
</treenode>
</treenode>
<treenode node="YamlFileLoader;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\YamlFileLoader.php;f0;20;1;72;;;;vpos;;vAbstractFileLoader;;c;;r&#10;Definition&#10;    class YamlFileLoader extends AbstractFileLoader&#10;&#10;Description&#10;     Yaml files loader.;;d0,21;;b0,0;;m">
<treenode node="__construct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\YamlFileLoader.php;f11;24;5;27;;;;vpos;;v;;r;;d4,25;;b1,0;;m">
</treenode>
<treenode node="load;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\YamlFileLoader.php;f11;50;5;71;;;;vpos;;vFeatureNode;;r&#10;Definition&#10;    load($path)&#10;&#10;Description&#10;     Loads features from provided resource.&#10;&#10;Parameters:&#10;    string $path - Resource to load&#10;&#10;Return:&#10;   [];;d4,51;;b1,0;;mstring $path;;p">
</treenode>
<treenode node="supports;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\src\Behat\Gherkin\Loader\YamlFileLoader.php;f11;36;5;41;;;;vpos;;vBoolean;;r&#10;Definition&#10;    supports($path)&#10;&#10;Description&#10;     Checks if current loader supports provided resource.&#10;&#10;Parameters:&#10;    mixed $path - Resource to load;;d4,37;;b1,0;;mmixed $path;;p">
</treenode>
</treenode>
<treenode node="YamlFileLoaderTest;PHP:Class Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\YamlFileLoaderTest.php;f0;6;1;66;;;;vpos;;vPHPUnit_Framework_TestCase;;c;;r;;d0,7;;b0,0;;m">
<treenode node="setUp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\YamlFileLoaderTest.php;f14;10;5;13;;;;vpos;;v;;r;;d4,11;;b2,0;;m">
</treenode>
<treenode node="testLoadAddition;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\YamlFileLoaderTest.php;f11;24;5;65;;;;vpos;;v;;r;;d4,25;;b1,0;;m">
</treenode>
<treenode node="testSupports;PHP:Function Name;H:\OSPanel\domains\yii\vendor\behat\gherkin\tests\Behat\Gherkin\Loader\YamlFileLoaderTest.php;f11;15;5;22;;;;vpos;;v;;r;;d4,16;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Yii1;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii1.php;f0;118;1;264;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii1.php;f0;7;1;146;;;;vpos;;vFramework;;cPartedModule;;c;;r&#10;Definition&#10;    class Yii1 extends Framework implements PartedModule&#10;&#10;Description&#10;     This module provides integration with [Yii Framework 1.1](http://www.yiiframework.com/doc/guide/).;;d0,119;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii1.php;f11;206;5;215;;;;vpos;;v;;r;;d4,207;;b1,0;;mtest;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii1.php;f11;201;5;204;;;;vpos;;v;;r;;d4,202;;b1,0;;mtest;;p">
</treenode>
<treenode node="_createClient;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii1.php;f11;189;5;199;;;;vpos;;v;;r;;d4,190;;b1,0;;m">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii1.php;f11;135;5;184;;;;vpos;;v;;r;;d4,136;;b1,0;;m">
</treenode>
<treenode node="_parts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii1.php;f11;260;5;263;;;;vpos;;v;;r;;d4,261;;b1,0;;m">
</treenode>
<treenode node="doRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii1.php;f11;40;5;128;;;;vpos;;v;;r&#10;Definition&#10;    doRequest($request)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \Symfony\Component\BrowserKit\Request $request;;d4,41;;b1,0;;m\Symfony\Component\BrowserKit\Request $request;;p">
</treenode>
<treenode node="getDomainRegex;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii1.php;f12;224;5;237;;;;vpos;;vstring;;r&#10;Definition&#10;    getDomainRegex($template, $parameters = [])&#10;&#10;Description&#10;     Getting domain regex from rule template and parameters&#10;&#10;Parameters:&#10;    string $template&#10;    array $parameters;;d4,225;;b3,0;;mstring $template;;parray $parameters;;p">
</treenode>
<treenode node="getHeaders;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii1.php;f11;142;5;145;;;;vpos;;varray;;r&#10;Definition&#10;    getHeaders()&#10;&#10;Description&#10;     Returns current client headers&#10;&#10;Return:&#10;   headers;;d4,143;;b1,0;;m">
</treenode>
<treenode node="getInternalDomains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii1.php;f11;245;5;258;;;;vpos;;varray;;r&#10;Definition&#10;    getInternalDomains()&#10;&#10;Description&#10;     Returns a list of regex patterns for recognized domain names;;d4,246;;b1,0;;m">
</treenode>
<treenode node="setHeaders;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii1.php;f11;133;5;136;;;;vpos;;v;;r&#10;Definition&#10;    setHeaders()&#10;&#10;Description&#10;     Set current client headers when terminating yii application (onEndRequest);;d4,134;;b1,0;;m">
</treenode>
</treenode>
<treenode node="Yii2;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f0;139;1;861;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2.php;f0;16;1;261;;;;vpos;;vFramework;;cActiveRecord;;cPartedModule;;c;;r&#10;Definition&#10;    class Yii2 extends Framework implements ActiveRecord, PartedModule&#10;&#10;Description&#10;     This module provides integration with [Yii framework](http://www.yiiframework.com/) (2.0). It initializes Yii framework in test environment and provides actions for functional testing. ## Application state during testing This section details what you can expect when using this module. * You will get a fresh application in `\Yii::$app` at the start of each test (available in the test and in `_before()`). * When executing a request via one of the request functions the `request` and `response` component are both recreated. * After a request the whole application is available for inspection / interaction. * You may use multiple database connections, each will use a separate transaction;s to prevent accidental mistakes we will warn you if you try to connect to the same database twice but we cannot reuse the same connection.;;d0,140;;b0,0;;m">
<treenode node="__destruct;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2.php;f11;251;5;254;;;;vpos;;v;;r&#10;Definition&#10;    __destruct()&#10;&#10;Description&#10;     A new client is created for every test, it is destroyed after every test.;;d4,252;;b1,0;;m">
</treenode>
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;296;5;319;;;;vpos;;v;;r;;d4,297;;b1,0;;mtest;;p">
</treenode>
<treenode node="_afterSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;853;5;859;;;;vpos;;v;;r;;d4,854;;b1,0;;m">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;237;5;264;;;;vpos;;v;;r;;d4,238;;b1,0;;mtest;;p">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;180;5;189;;;;vpos;;v;;r;;d4,181;;b1,0;;m">
</treenode>
<treenode node="_parts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;388;5;391;;;;vpos;;v;;r;;d4,389;;b1,0;;m">
</treenode>
<treenode node="amLoggedInAs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;411;5;424;;;;vpos;;v;;r&#10;Definition&#10;    amLoggedInAs($user)&#10;&#10;Description&#10;     Authorizes user on a site without submitting login form. Use it for fast pragmatic authorization in functional tests.&#10;&#10;Parameters:&#10;     $user;;d4,412;;b1,0;;m $user;;p">
</treenode>
<treenode node="amOnRoute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;646;5;650;;;;vpos;;v;;r&#10;Definition&#10;    amOnRoute($route, array $params = [])&#10;&#10;Description&#10;     Similar to amOnPage but accepts route as first argument and params as second;;d4,647;;b1,0;;mroute;;pparams;;p">
</treenode>
<treenode node="clientRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f14;664;5;670;;;;vpos;;vmixed;;r&#10;Definition&#10;    clientRequest($method, $uri, array $parameters = [], array $files = [], array $server = [], $content = null, $changeHistory = true)&#10;&#10;Description&#10;     To support to use the behavior of urlManager component for the methods like this: amOnPage(), sendAjaxRequest() and etc.&#10;&#10;Parameters:&#10;     $method&#10;     $uri&#10;    array $parameters&#10;    array $files&#10;    array $server&#10;    null $content&#10;    bool $changeHistory;;d4,665;;b2,0;;m $method;;p $uri;;parray $parameters;;parray $files;;parray $server;;pnull $content;;pbool $changeHistory;;p">
</treenode>
<treenode node="createAndSetCsrfCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;845;5;851;;;;vpos;;vstring;;r&#10;Definition&#10;    createAndSetCsrfCookie($val)&#10;&#10;Description&#10;     This function creates the CSRF Cookie.&#10;&#10;Parameters:&#10;    string $val - The value of the CSRF token&#10;&#10;Return:&#10;   [] Returns an array containing the name of the CSRF param and the masked CSRF token;;d4,846;;b1,0;;mstring $val;;p">
</treenode>
<treenode node="defineConstants;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f12;818;5;823;;;;vpos;;v;;r;;d4,819;;b3,0;;m">
</treenode>
<treenode node="dontSeeEmailIsSent;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;722;5;725;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeEmailIsSent()&#10;&#10;Description&#10;     Checks that no email was sent;;d4,723;;b1,0;;m">
</treenode>
<treenode node="dontSeeRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;584;5;591;;;;vpos;;v;;r&#10;Definition&#10;    dontSeeRecord($model, $attributes = [])&#10;&#10;Description&#10;     Checks that record does not exist in database.&#10;&#10;Parameters:&#10;     $model&#10;    array $attributes;;d4,585;;b1,0;;m $model;;parray $attributes;;p">
</treenode>
<treenode node="doRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2.php;f11;68;5;165;;;;vpos;;v;;r&#10;Definition&#10;    doRequest($request)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    \Symfony\Component\BrowserKit\Request $request;;d4,69;;b1,0;;m\Symfony\Component\BrowserKit\Request $request;;p">
</treenode>
<treenode node="encodeCookies;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2.php;f14;179;5;208;;;;vpos;;v;;r&#10;Definition&#10;    encodeCookies(&#10;        YiiResponse $response,&#10;        Request $request,&#10;        Security $security&#10;    )&#10;&#10;Description&#10;     Encodes the cookies and adds them to the headers.&#10;&#10;Parameters:&#10;    \yii\web\Response $response;;d6,183;;b2,0;;mresponse;;prequest;;psecurity;;p">
</treenode>
<treenode node="findRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f14;615;5;636;;;;vpos;;vmixed;;r&#10;Definition&#10;    findRecord($model, $attributes = [])&#10;&#10;Description&#10;      Class name&#10;&#10;Parameters:&#10;    string $model - Class name&#10;    array $attributes;;d4,616;;b2,0;;mstring $model;;parray $attributes;;p">
</treenode>
<treenode node="getApplication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2.php;f11;28;5;34;;;;vpos;;v;;r&#10;Definition&#10;    getApplication()&#10;&#10;Description&#10;      \yii\web\Application;;d4,29;;b1,0;;m">
</treenode>
<treenode node="getDomainRegex;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f12;776;5;796;;;;vpos;;vstring;;r&#10;Definition&#10;    getDomainRegex($template)&#10;&#10;Description&#10;     Getting domain regex from rule host template&#10;&#10;Parameters:&#10;    string $template;;d4,777;;b3,0;;mstring $template;;p">
</treenode>
<treenode node="getInternalDomains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;803;5;816;;;;vpos;;varray;;r&#10;Definition&#10;    getInternalDomains()&#10;&#10;Description&#10;     Returns a list of regex patterns for recognized domain names;;d4,804;;b1,0;;m">
</treenode>
<treenode node="grabComponent;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;684;5;690;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabComponent($component)&#10;&#10;Description&#10;     Gets a component from Yii container. Throws exception if component is not available&#10;&#10;Parameters:&#10;     $component;;d4,685;;b1,0;;m $component;;p">
</treenode>
<treenode node="grabFixture;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;511;5;525;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabFixture($name, $index = null)&#10;&#10;Description&#10;     Gets a fixture by name. Returns a Fixture instance. If a fixture is an instance of `\yii\test\BaseActiveFixture` a second parameter can be used to return a specific model:&#10;&#10;Parameters:&#10;     $name;;d4,512;;b1,0;;mname;;pindex;;p">
</treenode>
<treenode node="grabFixtures;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;478;5;489;;;;vpos;;varray;;r&#10;Definition&#10;    grabFixtures()&#10;&#10;Description&#10;     Returns all loaded fixtures. Array of fixture instances;;d4,479;;b1,0;;m">
</treenode>
<treenode node="grabLastSentEmail;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;763;5;768;;;;vpos;;v;;r&#10;Definition&#10;    grabLastSentEmail()&#10;&#10;Description&#10;     Returns last sent email:;;d4,764;;b1,0;;m">
</treenode>
<treenode node="grabRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;605;5;608;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabRecord($model, $attributes = [])&#10;&#10;Description&#10;     Retrieves record from database&#10;&#10;Parameters:&#10;     $model&#10;    array $attributes;;d4,606;;b1,0;;m $model;;parray $attributes;;p">
</treenode>
<treenode node="grabSentEmails;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;743;5;750;;;;vpos;;varray;;r&#10;Definition&#10;    grabSentEmails()&#10;&#10;Description&#10;     Returns array of all sent email messages. Each message implements `yii\mail\MessageInterface` interface. Useful to perform additional checks using `Asserts` module:;;d4,744;;b1,0;;m">
</treenode>
<treenode node="haveFixtures;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;460;5;469;;;;vpos;;v;;r&#10;Definition&#10;    haveFixtures($fixtures)&#10;&#10;Description&#10;     Creates and loads fixtures from a config. Signature is the same as for `fixtures()` method of `yii\test\FixtureTrait`&#10;&#10;Parameters:&#10;     $fixtures;;d4,461;;b1,0;;m $fixtures;;p">
</treenode>
<treenode node="haveRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;541;5;551;;;;vpos;;vmixed;;r&#10;Definition&#10;    haveRecord($model, $attributes = [])&#10;&#10;Description&#10;     Inserts record into the database.&#10;&#10;Parameters:&#10;     $model&#10;    array $attributes;;d4,542;;b1,0;;m $model;;parray $attributes;;p">
</treenode>
<treenode node="initServerGlobal;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f12;210;5;223;;;;vpos;;v;;r&#10;Definition&#10;    initServerGlobal()&#10;&#10;Description&#10;     Adds the required server params. Note this is done separately from the request cycle since someone might call `Url::to` before doing a request, which would instantiate the request component with incorrect server params.;;d4,211;;b3,0;;m">
</treenode>
<treenode node="loadFixtures;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f12;271;5;294;;;;vpos;;v;;r&#10;Definition&#10;    loadFixtures($test)&#10;&#10;Description&#10;     load fixtures before db transaction&#10;&#10;Parameters:&#10;    mixed $test - instance of test class;;d4,272;;b3,0;;mmixed $test;;p">
</treenode>
<treenode node="mockMailer;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2.php;f14;215;5;244;;;;vpos;;varray;;r&#10;Definition&#10;    mockMailer(array $config)&#10;&#10;Description&#10;     Replace mailer with in memory mailer&#10;&#10;Parameters:&#10;    array $config - Original configuration&#10;&#10;Return:&#10;   New configuration;;d4,216;;b2,0;;marray $config;;p">
</treenode>
<treenode node="onReconfigure;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f14;196;5;202;;;;vpos;;v;;r&#10;Definition&#10;    onReconfigure()&#10;&#10;Description&#10;     Module configuration changed inside a test. We might need to re-create the application.;;d4,197;;b2,0;;m">
</treenode>
<treenode node="resetApplication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2.php;f11;36;5;45;;;;vpos;;v;;r;;d4,37;;b1,0;;m">
</treenode>
<treenode node="restart;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2.php;f11;256;5;260;;;;vpos;;v;;r;;d4,257;;b1,0;;m">
</treenode>
<treenode node="revertErrorHandler;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2.php;f14;167;5;171;;;;vpos;;v;;r;;d4,168;;b2,0;;m">
</treenode>
<treenode node="rollbackTransactions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f14;376;5;386;;;;vpos;;v;;r;;d4,377;;b2,0;;m">
</treenode>
<treenode node="seeEmailIsSent;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;708;5;715;;;;vpos;;v;;r&#10;Definition&#10;    seeEmailIsSent($num = null)&#10;&#10;Description&#10;     Checks that email is sent.&#10;&#10;Parameters:&#10;    int $num;;d4,709;;b1,0;;mint $num;;p">
</treenode>
<treenode node="seeRecord;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;564;5;571;;;;vpos;;v;;r&#10;Definition&#10;    seeRecord($model, $attributes = [])&#10;&#10;Description&#10;     Checks that record exists in database.&#10;&#10;Parameters:&#10;     $model&#10;    array $attributes;;d4,565;;b1,0;;m $model;;parray $attributes;;p">
</treenode>
<treenode node="setCookie;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f11;831;5;838;;;;vpos;;v;;r&#10;Definition&#10;    setCookie($name, $val, array $params = [])&#10;&#10;Description&#10;     Sets a cookie and, if validation is enabled, signs it.&#10;&#10;Parameters:&#10;    string $name - The name of the cookie&#10;    string $value - The value of the cookie&#10;    array $params - Additional cookie params like `domain`, `path`, `expires` and `secure`;;d4,832;;b1,0;;mstring $name;;pstring $value;;parray $params;;p">
</treenode>
<treenode node="startApp;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\Yii2.php;f11;47;5;60;;;;vpos;;v;;r;;d4,48;;b1,0;;m">
</treenode>
<treenode node="startTransactions;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f14;321;5;374;;;;vpos;;v;;r;;d4,322;;b2,0;;m">
</treenode>
<treenode node="validateConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\Yii2.php;f14;225;5;234;;;;vpos;;v;;r;;d4,226;;b2,0;;m">
</treenode>
</treenode>
<treenode node="ZendExpressive;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZendExpressive.php;f0;30;1;115;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZendExpressive.php;f0;12;1;141;;;;vpos;;vFramework;;cDoctrineProvider;;c;;r&#10;Definition&#10;    class ZendExpressive extends Framework implements DoctrineProvider&#10;&#10;Description&#10;     This module allows you to run tests inside Zend Expressive.;;d0,31;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZendExpressive.php;f11;82;5;90;;;;vpos;;v;;r;;d4,83;;b1,0;;mtest;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZendExpressive.php;f11;75;5;80;;;;vpos;;v;;r;;d4,76;;b1,0;;mtest;;p">
</treenode>
<treenode node="_getEntityManager;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZendExpressive.php;f11;106;5;114;;;;vpos;;v;;r;;d4,107;;b1,0;;m">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZendExpressive.php;f11;53;5;73;;;;vpos;;v;;r;;d4,54;;b1,0;;m">
</treenode>
<treenode node="convertFiles;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZendExpressive.php;f12;102;5;121;;;;vpos;;v;;r;;d4,103;;b3,0;;mfiles;;p">
</treenode>
<treenode node="doRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZendExpressive.php;f11;47;5;100;;;;vpos;;vResponse;;r&#10;Definition&#10;    doRequest($request)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    Request $request;;d4,48;;b1,0;;mRequest $request;;p">
</treenode>
<treenode node="extractHeaders;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZendExpressive.php;f12;123;5;140;;;;vpos;;v;;r;;d4,124;;b3,0;;mrequest;;p">
</treenode>
<treenode node="initResponseCollector;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZendExpressive.php;f12;92;5;104;;;;vpos;;v;;r;;d4,93;;b3,0;;m">
</treenode>
<treenode node="setApplication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZendExpressive.php;f11;28;5;31;;;;vpos;;v;;r&#10;Definition&#10;    setApplication(Application $application)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    Application;;d4,29;;b1,0;;mApplication;;p">
</treenode>
<treenode node="setResponseCollector;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZendExpressive.php;f11;36;5;39;;;;vpos;;v;;r&#10;Definition&#10;    setResponseCollector(ResponseCollector $responseCollector)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    ResponseCollector $responseCollector;;d4,37;;b1,0;;mResponseCollector $responseCollector;;p">
</treenode>
</treenode>
<treenode node="ZF1;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF1.php;f0;68;1;265;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF1.php;f0;7;1;144;;;;vpos;;vFramework;;c;;r&#10;Definition&#10;    class ZF1 extends Framework&#10;&#10;Description&#10;     This module allows you to run tests inside Zend Framework. It acts just like ControllerTestCase, but with usage of Codeception syntax.;;d0,69;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF1.php;f11;149;5;169;;;;vpos;;v;;r;;d4,150;;b1,0;;mtest;;p">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF1.php;f11;125;5;147;;;;vpos;;v;;r;;d4,126;;b1,0;;mtest;;p">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF1.php;f11;101;5;123;;;;vpos;;v;;r;;d4,102;;b1,0;;m">
</treenode>
<treenode node="addInternalDomain;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF1.php;f12;254;5;264;;;;vpos;;v;;r;;d4,255;;b3,0;;mroute;;p">
</treenode>
<treenode node="addInternalDomainsFromRoutes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF1.php;f12;238;5;252;;;;vpos;;v;;r;;d4,239;;b3,0;;mroutes;;p">
</treenode>
<treenode node="amOnRoute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF1.php;f11;203;5;208;;;;vpos;;v;;r&#10;Definition&#10;    amOnRoute($routeName, array $params = [])&#10;&#10;Description&#10;     Opens web page using route name and parameters.&#10;&#10;Parameters:&#10;     $routeName&#10;    array $params;;d4,204;;b1,0;;m $routeName;;parray $params;;p">
</treenode>
<treenode node="debugResponse;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF1.php;f14;174;5;188;;;;vpos;;v;;r&#10;Definition&#10;    debugResponse($url)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;     $url;;d4,175;;b2,0;;m $url;;p">
</treenode>
<treenode node="doRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF1.php;f11;38;5;94;;;;vpos;;v;;r;;d4,39;;b1,0;;mrequest;;p">
</treenode>
<treenode node="extractHeaders;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF1.php;f12;127;5;143;;;;vpos;;v;;r;;d4,128;;b3,0;;mrequest;;p">
</treenode>
<treenode node="formatResponseHeaders;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF1.php;f12;102;5;116;;;;vpos;;varray;;r&#10;Definition&#10;    formatResponseHeaders(\Zend_Controller_Response_Abstract $response)&#10;&#10;Description&#10;     Format up the ZF1 response headers into Symfony\Component\BrowserKit\Response headers format.&#10;&#10;Parameters:&#10;    \Zend_Controller_Response_Abstract $response - The ZF1 Response Object&#10;&#10;Return:&#10;   the clean key/value headers;;d4,103;;b3,0;;m\Zend_Controller_Response_Abstract $response;;p">
</treenode>
<treenode node="getInternalDomains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF1.php;f14;230;5;236;;;;vpos;;v;;r;;d4,231;;b2,0;;m">
</treenode>
<treenode node="getZendRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF1.php;f11;122;5;125;;;;vpos;;v;;r&#10;Definition&#10;    getZendRequest()&#10;&#10;Description&#10;      \Zend_Controller_Request_HttpTestCase;;d4,123;;b1,0;;m">
</treenode>
<treenode node="seeCurrentRouteIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF1.php;f11;223;5;228;;;;vpos;;v;;r&#10;Definition&#10;    seeCurrentRouteIs($routeName, array $params = [])&#10;&#10;Description&#10;     Checks that current url matches route.&#10;&#10;Parameters:&#10;     $routeName&#10;    array $params;;d4,224;;b1,0;;m $routeName;;parray $params;;p">
</treenode>
<treenode node="setBootstrap;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF1.php;f11;26;5;36;;;;vpos;;v;;r;;d4,27;;b1,0;;mbootstrap;;p">
</treenode>
</treenode>
<treenode node="ZF2;PHP:Class Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f0;55;1;255;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2.php;f0;15;1;191;;;;vpos;;vFramework;;cDoctrineProvider;;cPartedModule;;c;;r&#10;Definition&#10;    class ZF2 extends Framework implements DoctrineProvider, PartedModule&#10;&#10;Description&#10;     This module allows you to run tests inside Zend Framework 2 and Zend Framework 3.;;d0,56;;b0,0;;m">
<treenode node="_after;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f11;111;5;127;;;;vpos;;v;;r;;d4,112;;b1,0;;mtest;;p">
</treenode>
<treenode node="_afterSuite;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f11;129;5;132;;;;vpos;;v;;r;;d4,130;;b1,0;;m">
</treenode>
<treenode node="_before;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f11;104;5;109;;;;vpos;;v;;r;;d4,105;;b1,0;;mtest;;p">
</treenode>
<treenode node="_getEntityManager;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f11;134;5;142;;;;vpos;;v;;r;;d4,135;;b1,0;;m">
</treenode>
<treenode node="_initialize;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f11;86;5;102;;;;vpos;;v;;r;;d4,87;;b1,0;;m">
</treenode>
<treenode node="_parts;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f11;251;5;254;;;;vpos;;v;;r;;d4,252;;b1,0;;m">
</treenode>
<treenode node="addInternalDomain;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f12;245;5;249;;;;vpos;;v;;r;;d4,246;;b3,0;;mroute;;p">
</treenode>
<treenode node="addInternalDomainsFromRoutes;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f12;225;5;243;;;;vpos;;v;;r;;d4,226;;b3,0;;mroutes;;p">
</treenode>
<treenode node="addServiceToContainer;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f11;169;5;172;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2.php;f11;157;5;171;;;;vpos;;v;;r&#10;Definition&#10;    addServiceToContainer($name, $service)&#10;&#10;Description&#10;     Adds service to ZF2 container&#10;&#10;Parameters:&#10;    string $name&#10;    object $service;;d4,170;;b1,0;;mstring $name;;pobject $service;;p">
</treenode>
<treenode node="amOnRoute;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f11;187;5;192;;;;vpos;;v;;r&#10;Definition&#10;    amOnRoute($routeName, array $params = [])&#10;&#10;Description&#10;     Opens web page using route name and parameters.&#10;&#10;Parameters:&#10;     $routeName&#10;    array $params;;d4,188;;b1,0;;m $routeName;;parray $params;;p">
</treenode>
<treenode node="createApplication;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2.php;f12;173;5;190;;;;vpos;;v;;r;;d4,174;;b3,0;;m">
</treenode>
<treenode node="doRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2.php;f11;52;5;109;;;;vpos;;vResponse;;r&#10;Definition&#10;    doRequest($request)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    Request $request;;d4,53;;b1,0;;mRequest $request;;p">
</treenode>
<treenode node="extractHeaders;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2.php;f12;119;5;137;;;;vpos;;v;;r;;d4,120;;b3,0;;mrequest;;p">
</treenode>
<treenode node="getInternalDomains;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f14;214;5;223;;;;vpos;;v;;r;;d4,215;;b2,0;;m">
</treenode>
<treenode node="getZendRequest;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2.php;f11;114;5;117;;;;vpos;;v;;r&#10;Definition&#10;    getZendRequest()&#10;&#10;Description&#10;      \Zend\Http\PhpEnvironment\Request;;d4,115;;b1,0;;m">
</treenode>
<treenode node="grabServiceFromContainer;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f11;158;5;161;;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2.php;f11;139;5;155;;;;vpos;;vmixed;;r&#10;Definition&#10;    grabServiceFromContainer($service)&#10;&#10;Description&#10;     Grabs a service from ZF2 container. Recommended to use for unit testing.&#10;&#10;Parameters:&#10;     $service;;d4,159;;b1,0;;m $service;;p">
</treenode>
<treenode node="seeCurrentRouteIs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Module\ZF2.php;f11;207;5;212;;;;vpos;;v;;r&#10;Definition&#10;    seeCurrentRouteIs($routeName, array $params = [])&#10;&#10;Description&#10;     Checks that current url matches route.&#10;&#10;Parameters:&#10;     $routeName&#10;    array $params;;d4,208;;b1,0;;m $routeName;;parray $params;;p">
</treenode>
<treenode node="setApplicationConfig;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Lib\Connector\ZF2.php;f11;40;5;44;;;;vpos;;v;;r&#10;Definition&#10;    setApplicationConfig($applicationConfig)&#10;&#10;Description&#10;     &#10;&#10;Parameters:&#10;    array $applicationConfig;;d4,41;;b1,0;;marray $applicationConfig;;p">
</treenode>
</treenode>
<treenode node="codecept_data_dir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\autoload.php;f4;87;5;90;;;;vpos;;v;;r;;d4,88;;b0,0;;mappendPath;;p">
</treenode>
<treenode node="codecept_debug;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\autoload.php;f4;59;5;62;;;;vpos;;v;;r;;d4,60;;b0,0;;mdata;;p">
</treenode>
<treenode node="codecept_log_dir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\autoload.php;f4;80;5;83;;;;vpos;;v;;r;;d4,81;;b0,0;;mappendPath;;p">
</treenode>
<treenode node="codecept_output_dir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\autoload.php;f4;73;5;76;;;;vpos;;v;;r;;d4,74;;b0,0;;mappendPath;;p">
</treenode>
<treenode node="codecept_relative_path;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\autoload.php;f4;94;5;101;;;;vpos;;v;;r;;d4,95;;b0,0;;mpath;;p">
</treenode>
<treenode node="codecept_root_dir;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\autoload.php;f4;66;5;69;;;;vpos;;v;;r;;d4,67;;b0,0;;mappendPath;;p">
</treenode>
<treenode node="json_last_error_msg;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\autoload.php;f4;41;5;54;;;;vpos;;vstring;;r&#10;Definition&#10;    json_last_error_msg()&#10;&#10;Description&#10;     Copied from http://php.net/manual/en/function.json-last-error-msg.php#117393;;d4,42;;b0,0;;m">
</treenode>
<treenode node="sq;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\sq.php;f4;4;5;15;;;;vpos;;v;;r;;d4,5;;b0,0;;mid;;p">
</treenode>
<treenode node="sqs;PHP:Function Name;H:\OSPanel\domains\yii\vendor\codeception\base\src\Codeception\Util\sq.php;f4;19;5;30;;;;vpos;;v;;r;;d4,20;;b0,0;;mid;;p">
</treenode>
</phptree>
</codestructure>